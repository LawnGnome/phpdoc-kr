<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<refentry xml:id="function.ob-start" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ob_start</refname> 
  <refpurpose>출력 버퍼링을 켭니다</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>ob_start</methodname>
   <methodparam choice="opt"><type>callback</type><parameter>output_callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>chunk_size</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>erase</parameter></methodparam>
  </methodsynopsis>
  <para>
   출력 버퍼링을 켭니다. 출력 버퍼링을 활성화하면, (헤더를 제외한)
   스크립트의 모든 출력을 내부 버퍼에 저장하고, 실제로 전송하지 않습니다.
  </para>
  <para>
   이 내부 버퍼의 내용은 <function>ob_get_contents</function>를 이용해서
   문자열 변수로 복사할 수 있습니다. 내부 버퍼에 들어있는 내용을 출력하려면,
   <function>ob_end_flush</function>를 사용하십시오. 반대로,
   <function>ob_end_clean</function>은 버퍼 내용을 출력 없이 지웁니다.
  </para>
  <warning>
   <para>
    몇몇 웹 서버(아파치 등)는 콜백 함수를 호출할 때 스크립트의 작업 디렉토리를
    바꿉니다. 콜백 함수 안에서
    <literal>chdir(dirname($_SERVER['SCRIPT_FILENAME']))</literal> 등을
    사용하여 복귀할 수 있습니다.
   </para>
  </warning>
  <para>
   출력 버퍼는 쌓을 수 있습니다. 즉, <function>ob_start</function>가 작동중일
   때, 다른 <function>ob_start</function>를 호출할 수 있습니다. 정확한 횟수의
   <function>ob_end_flush</function>을 호출하면 아무런 문제가 없습니다. 여러
   개의 출력 콜백 함수가 작동중이면, 출력은 감싸여진 순서대로 필터링됩니다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>output_callback</parameter></term>
     <listitem>
      <para>
       선택적인 <parameter>output_callback</parameter> 함수를 지정할 수
       있습니다. 이 함수는 문자열을 인수로 받고, 문자열을 반환해야 합니다. 이
       함수는 (<function>ob_flush</function>, <function>ob_clean</function>
       등의 함수로) 출력 버퍼를 보내거나(전송) 비울 때, 또는 요청 마지막에
       출력 버퍼를 브라우저로 보낼 때 호출됩니다.
       <parameter>output_callback</parameter>이 호출되면, 출력 버퍼의 내용을
       인수로 받고, 브라우저로 전송할 새 출력 버퍼를 결과로 반환하여
       작동합니다. <parameter>output_callback</parameter>이 호출할 수 있는
       함수가 아니라면, 이 함수는 &false;를 반환합니다.
      </para>
      <para>
       콜백 함수가 두 인수를 가지고 있으면, 두번째 인수는
       <constant>PHP_OUTPUT_HANDLER_START</constant>,
       <constant>PHP_OUTPUT_HANDLER_CONT</constant>,
       <constant>PHP_OUTPUT_HANDLER_END</constant>로 구성된 비트 필드로
       채워집니다.
      </para>
      <para>
       <parameter>output_callback</parameter>이 &false;를 반환하면, 원 입력이
       브라우저로 전송됩니다.
      </para>
      <para>
       <parameter>output_callback</parameter> 인수는 &null; 값을 넘겨서 지나갈
       수 있습니다.
      </para>
      <para>
       <function>ob_end_clean</function>, <function>ob_end_flush</function>,
       <function>ob_clean</function>, <function>ob_flush</function>,
       <function>ob_start</function>는 콜백 함수에서 호출할 수 없습니다. 이
       함수들을 콜백 함수에서 호출하면, 그 동작은 정의되어 있지 않습니다. 버퍼
       내용을 지우고 싶으면, 콜백 함수에서 ""(빈 문자열)을 반환하면 됩니다.
       또한, 출력 버퍼링 함수를 사용하는 <literal>print_r($expression,
        true)</literal>, <literal>highlight_file($filename, true)</literal>
       등의 함수도 콜백 함수에서 호출할 수 없습니다.
      </para>
      <note>
       <para>
        PHP 4.0.4에서, <function>ob_gzhandler</function>가 웹 페이지 압축을
        지원하는 웹 브라우저에 gz-인코드 데이터를 전송하기 위한 방법으로
        생겼습니다. <function>ob_gzhandler</function>는 브라우저가 허용하는 내용
        인코딩 형태를 확인하고 그에 따라 출력합니다.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>chunk_size</parameter></term>
     <listitem>
      <para>
       선택적인 <parameter>chunk_size</parameter> 인수가 전달되면, 버퍼 길이가
       <parameter>chunk_size</parameter>와 같거나 초과하게 되는 출력 호출 후에
       버퍼가 전송됩니다. 기본값인 0은 함수를 마지막에만 호출하며, 특수값 1은
       <parameter>chunk_size</parameter>를 4096으로 설정합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>erase</parameter></term>
     <listitem>
      <para>
       선택적인 <parameter>erase</parameter> 인수를 &false;로 설정하면,
       스크립트가 종료될 때 까지 버퍼가 지워지지 않습니다. (PHP 4.3.0부터)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.2</entry>
       <entry>
        <parameter>output_callback</parameter>가 실행될 수 없을 때, &false;를
        반환하게 되었습니다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>사용자 정의 콜백 함수 예제</title>
    <programlisting role="php">
<![CDATA[
<?php

function callback($buffer)
{
  // 모든 apples를 oranges로 치환합니다.
  return (str_replace("apples", "oranges", $buffer));
}

ob_start("callback");

?>

<html>
<body>
<p>It's like comparing apples to oranges.</p>
</body>
</html>

<?php

ob_end_flush();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<html>
<body>
<p>It's like comparing oranges to oranges.</p>
</body>
</html>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_get_contents</function></member>
    <member><function>ob_end_clean</function></member>
    <member><function>ob_end_flush</function></member>
    <member><function>ob_implict_flush</function></member>
    <member><function>ob_gzhandler</function></member>
    <member><function>ob_iconv_handler</function></member>
    <member><function>mb_output_handler</function></member>
    <member><function>ob_tidyhandler</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
