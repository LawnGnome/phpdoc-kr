<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/strings.xml, last change in rev 1.3 -->
<!-- last change to 'similar-text' in en/ tree in rev 1.2 -->
	<refentry id="function.similar-text">
		<refnamediv>
			<refname>similar_text</refname>
			<refpurpose>
	두 문자열 간의 유사성을 계산한다.
    </refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
				<methodsynopsis>
					<type>int</type><methodname>similar_text</methodname>
					<methodparam><type>string</type><parameter>first</parameter></methodparam>
					<methodparam><type>string</type><parameter>second</parameter></methodparam>
					<methodparam choice="opt"><type>double</type><parameter>
							percent
						</parameter></methodparam>
				</methodsynopsis>
			<para>
	이는 Oliver [1993]에 설명된 것처럼 두 문자열 간의 유사성을 계산한다.
	이 수행은  Oliver's 의사코드에서 처럼 스택을 사용하는 것이 아니라, 
	전체 프로세스에서 속도를 높이거나 느리게 할 수도 있는 재귀적인 호출을 
	사용함을 주의하라.
	또한 이 알고리즘의 복잡도는 O(N**3) 이며 N은 가장 긴 문자열의 길이를 나타낸다.
    </para>
			<para>
	세번째 인자는 참조에 의한 전달을 함으로서, <function>similar_text</function>는
	두 문자열간의 유사성을 퍼센티지로 계산할 수 있다.
	이 함수는 두 문자열의 매칭하는 문자 수를 리턴한다.
    </para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
