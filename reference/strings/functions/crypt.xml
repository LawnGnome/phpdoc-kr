<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/strings.xml, last change in rev 1.3 -->
<!-- last change to 'crypt' in en/ tree in rev 1.2 -->
	<refentry id="function.crypt">
		<refnamediv>
			<refname>crypt</refname>
			<refpurpose>문자열을 DES-암호화 한다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
				<methodsynopsis>
					<type>string</type><methodname>crypt</methodname>
					<methodparam><type>string</type><parameter>str</parameter></methodparam>
					<methodparam choice="opt"><type>string</type><parameter>
							salt
						</parameter></methodparam>
				</methodsynopsis>
			<para>
				<function>crypt</function>은 유닉스 표준인 <abbrev>DES</abbrev> 암호화 기법을 사용하여 문자열을 암호화 한다.
			인수로는 암호화 될 문자열과 선택적으로 암호화의 기본이 될 두 문자 salt 문자열이 올 수 있다.
			더 많은 정보를 위해 유닉스의 crypt 함수에 대한 man page를 참조하라.
    </para>
			<simpara>
			만약 salt 인자가 주어지지 않는다면, PHP에 의해 무작위로 생성된다.
    </simpara>
			<simpara>
			몇몇 운영체제는 한가지 타입 이상의 암호화를 제공한다. 실제로 표준 DES 암호화는 MD5에 기초한 암호화 알고리즘으로 대체되기도 한다.
			암호화 타입은 slat 인수에 의해 유발된다. 인스톨시, PHP는 암호화 함수의 가용 여부를 결정하고, 다른 암호화 타입을 위한  salt를 채택할 것이다.
			만약 slat가 제공되지 않으면, PHP는 기본적으로 두글자 DES salt를 자동 생성하고, 그렇지 않다면 이는 MD5 호환 salt가 생성되는 경우로 시스템의 기본 암호화 타입은 MD5가 된다.
			PHP는 CRYPT_SALT_LENGTH 라는 상수를 설정하는데 이는 시스템에 2문자 salt를 적용할 것인지 혹은 더 긴 12문자 MD5 salt를 적용할 것인지를 알려준다.
    </simpara>
			<simpara>
			만약 제공된 salt를 사용한다면, salt는 한번만 생성된다는 점을 주의하라.
			만약 이 함수를 재귀적으로 호출한다면, 이는 겉모습(appearance)과 더쩌면 좀 더 확장된 의미에서 본다면 보안에도 영향을 끼칠 수도 있다.
    </simpara>
			<simpara>
			기본적인 DES 암호화인 <function>crypt</function>는 처음 두 문자가 salt 인 문자열을 출력한다.
    </simpara>
			<simpara>
			crypt() 함수가 다양한 암호화 타입을 지원하는 시스템에서, 주어진 타입이 가능하느냐에 따라  다음 상수는 0 이나 1 로 지정된다.
    </simpara>
			<itemizedlist>
				<listitem>
					<simpara>
       CRYPT_STD_DES - 2-문자 SALT를 가지는 기본 DES 암호화
      </simpara>
				</listitem>
				<listitem>
					<simpara>
       CRYPT_EXT_DES - 9문자 SALT 를 가지는 확장된 DES 암화화
      </simpara>
				</listitem>
				<listitem>
					<simpara>
       CRYPT_MD5 - $1$로 시작하는 12문자 SALT를 가지는 MD5 암호화
      </simpara>
				</listitem>
				<listitem>
					<simpara>
       CRYPT_BLOWFISH - $2$로 시작하는 16문자 SALT를 갖는 확장된 DES 암호화
      </simpara>
				</listitem>
			</itemizedlist>
			<simpara>
				<function>crypt</function>는 one-way 알고리즘을 사용하므로 decrypt 함수는 존재하지 않는다.
    </simpara>
			<simpara>
				<function>md5</function> 을 참고하라.
    </simpara>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
