<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.6 Maintainer: progcom Status: ready -->
  <refentry id="function.chunk-split">
   <refnamediv>
    <refname>chunk_split</refname>
    <refpurpose>문자열을 작은 조각으로 나눕니다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>string</type><methodname>chunk_split</methodname>
      <methodparam><type>string</type><parameter>body</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>chunklen</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>end</parameter></methodparam>
     </methodsynopsis>
    <para>
     문자열을 작은 조각으로 나눕니다. <link
     linkend="function.base64-encode">base64_encode</link> 출력을 RFC 2045
     의미에 맞게 변환할 때 쓸 수 있습니다. 모든 <parameter>chunklen</parameter>
     문자마다 (기본값 76) <parameter>end</parameter>(기본값 "\r\n")를
     추가합니다. 원 문자열은 변경하지 않고, 새로운 문자열을 반환합니다.
     <example>
      <title><function>chunk_split</function> 예제</title>
      <programlisting role="php">
<![CDATA[
<?php
// RFC 2045 의의에 맞게 $data를 형식화
$new_string = chunk_split(base64_encode($data));
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     참고: <function>explode</function>, <function>split</function>, 
     <function>wordwrap</function>,
     <ulink url="&url.rfc;2045">RFC 2045</ulink>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

