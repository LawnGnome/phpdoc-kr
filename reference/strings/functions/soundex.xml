<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.4 Maintainer: progcom Status: ready -->
<!-- CREDITS: cycle98 -->
  <refentry xml:id="function.soundex" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>soundex</refname>
    <refpurpose>문자열의 soundex 키를 계산합니다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>string</type><methodname>soundex</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>str</parameter>의 soundex 키를 계산합니다.
    </para>
    <para>
     발음이 유사한 단어들은 같은 soundex 키를 생성하기에, 발음은 알고 있지만
     스펠은 모르는 단어를 데이터베이스에서 쉽게 찾을 수 있습니다. soundex
     함수는 문자로 시작하는 4 문자 문자열을 반환합니다.
    </para>
    <para>
     이 soundex 함수는 "The Art Of Computer Programming, vol. 3: Sorting And
     Searching", Addison-Wesley (1973), 391-392쪽에서 Donald Knuth가 기술한
     것입니다.
    </para>
    <para>
     <example>
      <title>Soundex 예제</title>
      <programlisting role="php">
<![CDATA[
<?php
soundex("Euler") == soundex("Ellery"); // E460
soundex("Gauss") == soundex("Ghosh"); // G200
soundex("Hilbert") == soundex("Heilbronn"); // H416
soundex("Knuth") == soundex("Kant"); // K530
soundex("Lloyd") == soundex("Ladd"); // L300
soundex("Lukasiewicz") == soundex("Lissajous"); // L222
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     참고: <function>levenshtein</function>, <function>metaphone</function>,
     <function>similar_text</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
