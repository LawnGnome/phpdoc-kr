<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/strings.xml, last change in rev 1.3 -->
<!-- last change to 'soundex' in en/ tree in rev 1.2 -->
	<refentry id="function.soundex">
		<refnamediv>
			<refname>soundex</refname>
			<refpurpose>문자열의 soundex 키를 계산한다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
				<methodsynopsis>
					<type>string</type><methodname>soundex</methodname>
					<methodparam><type>string</type><parameter>str</parameter></methodparam>
				</methodsynopsis>
			<para>
				<parameter>str</parameter>의 soundex키를 계산한다.
    </para>
			<para>
	Soundex 키는 단어의 발음이 같으면, 같은 soundex 키를 생성하는 특성을 가진다.
	그리고 이로인해 데이타베이스에서 발음은 알지만 스펠을 모르는 단어를 쉽게 찾을 수 가 있다.
	이 soundex 함수는 알파벳 문자로 시작하는 4 문자 길이의 문자열을 반환한다.
    </para>
			<para>
	이렇게 특별한 soundex 함수는  "The Art Of Computer Programming, vol. 3: Sorting And
     Searching", Addison-Wesley (1973), pp. 391-392 에서 Donald Knuth 에 의해 기술되었다.
    </para>
			<para>
				<example>
					<title>Soundex 예</title>
					<programlisting role="php">
soundex ("Euler") == soundex ("Ellery") == 'E460';
soundex ("Gauss") == soundex ("Ghosh") == 'G200';
soundex ("Hilbert") == soundex ("Heilbronn") == 'H416';
soundex ("Knuth") == soundex ("Kant") == 'K530';
soundex ("Lloyd") == soundex ("Ladd") == 'L300';
soundex ("Lukasiewicz") == soundex ("Lissajous") == 'L222';
      </programlisting>
				</example>
			</para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
