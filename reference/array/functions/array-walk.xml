<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.11 Maintainer: fuzzy74 Status: unknown -->
  <refentry id="function.array-walk">
   <refnamediv>
    <refname>array_walk</refname>
    <refpurpose>
     배열의 개개의 원소에 대해서 특정 함수를 적용하여 수행한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>bool</type><methodname>array_walk</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
      <methodparam><type>callback</type><parameter>function</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     &return.success;
    </simpara>
    <simpara>
     <parameter>array</parameter> 배열의 각 원소에 사용자 정의 함수
     <parameter>function</parameter>을 적용한다. 표준적으로 
     <parameter>function</parameter>는 두개의 매개변수를 갖는다.
     <parameter>array</parameter> 매개변수의 값이 첫번째가 되고,
     key/index가 두번째가 된다. 선택적인 <parameter>userdata</parameter>
     매개변수가 적용되면, 콜백 <parameter>function</parameter>에 세번째
     매개변수가 전달될것이다.
    </simpara>
    <simpara>
     함수 <parameter>function</parameter>이 주어진 것보다 더 많은 매개변수를
     요구하면 <function>array_walk</function>가 <parameter>function</parameter>을
     호출할때마다 <link linkend="errorfunc.constants">E_WARNING</link> 레벨의
     에러를 발생한다. 이런 경고는 <function>array_walk</function>에
     <link linkend="language.operators.errorcontrol">@</link> 기호를 덧붙이거나,
     <function>error_reporting</function>을 사용함으로써 은폐시킬 수 있다.
    </simpara>
    <note>
     <para>
      <parameter>function</parameter>은 배열의 실제 값들과 동작할 필요가 있다면,
      <parameter>function</parameter>의 첫번째 매개변수에
      <link linkend="language.references">reference</link>를 설정한다.
      그러면 원래 배열 자체에 그 원소들을 변경할수 있다.
     </para>
    </note>
    <note>
     <para>
      <parameter>function</parameter>에 key와 userdata를 전달하는 기능이
      4.0.0에서 추가되었다.
     </para>
    </note>
    <para>
     <function>array_walk</function>는 <parameter>array</parameter>의
     내부적인 배열 포인터에 의해 영향을 받지 않는다.
     <function>array_walk</function>는 포인터 위치에 상관없이 전체 배열를
     가로지를것이다. 포인터를 초기화(reset)시키려면,
     <function>reset</function>을 사용하도록 한다. PHP 3에서
     <function>array_walk</function>는 포인터를 초기화시킨다.
    </para>
    <para>
     유저가 콜백 함수에서 배열자체를 변경하지 않는다.
     즉, 원소를 추가/삭제, 원소를 unset 하는등. 
     <function>array_walk</function>에 적용된 배열이 변경되면, 이 함수의
     동작은 정의되지 않고, 원하는대로 되지 않는다.
    </para>
    <para>
     <example>
      <title><function>array_walk</function> 예제코드</title>
      <programlisting role="php">
<![CDATA[
<?php
$fruits = array ("d"=>"lemon", "a"=>"orange", "b"=>"banana", "c"=>"apple");

function test_alter (&$item1, $key, $prefix) {
    $item1 = "$prefix: $item1";
}

function test_print ($item2, $key) {
    echo "$key. $item2<br>\n";
}

echo "Before ...:\n";
array_walk ($fruits, 'test_print');

array_walk ($fruits, 'test_alter', 'fruit');
echo "... and after:\n";

array_walk ($fruits, 'test_print');
?>
]]>
      </programlisting>
      <para>
       위 프로그램의 출력정보는 다음과 같다:
      </para>
      <screen role="php">
<![CDATA[
Before ...:
d. lemon
a. orange
b. banana
c. apple
... and after:
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
]]>
      </screen>
     </example>
    </para>
    <simpara>
     <function>list</function>, 
     <link linkend="control-structures.foreach">foreach</link>, 
     <function>each</function>, <function>call_user_func_array</function> 참고.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
