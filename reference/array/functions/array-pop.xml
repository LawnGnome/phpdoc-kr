<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.7 Maintainer: fuzzy74 Status: unknown -->
  <refentry xml:id="function.array-pop" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_pop</refname>
    <refpurpose>배열 끝의 원소를 뽑아낸다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>mixed</type><methodname>array_pop</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_pop</function>은 <parameter>array</parameter>의 마지막값을
     뽑아 내고 그 값을 반환하며, <parameter>array</parameter>의 길이를 원소 하나
     만큼 줄인다. <parameter>array</parameter>가 비어있으면 (또는 배열이 아니면)
     &null;을 반환한다.
    </para>
    
    &array.resetspointer;
    
    <para>
     <example>
      <title><function>array_pop</function> 예제코드</title>
      <programlisting role="php">
<![CDATA[
<?php
$stack = array ("orange", "banana", "apple", "raspberry");
$fruit = array_pop ($stack);
print_r($stack);
?>
]]>
      </programlisting>
      <para>
       이 코드 수행후, <varname>$stack</varname>은 3개의 원소를 갖게될것이다:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => orange
    [1] => banana
    [2] => apple
)
]]>
      </screen>
      <para>
       그리고 <literal>raspberry</literal>는 <varname>$fruit</varname>값이
       된다.
      </para>
     </example>
    </para>
    &return.falseproblem;
    <para>
     <function>array_push</function>,
     <function>array_shift</function>,
     <function>array_unshift</function> 참고.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
