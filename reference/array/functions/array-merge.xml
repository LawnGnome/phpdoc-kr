<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.22 Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
<refentry xml:id="function.array-merge" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_merge</refname>
  <refpurpose>하나 이상의 배열을 병합</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_merge</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   하나 이상의 배열의 원소들을 병합하고 앞의 배열의 끝에 배열값들을 추가한다.
   그 결과 배열을 반환한다.
  </para>
  <para>
   입력되는 배열이 같은 문자열 키를 갖는다면, 그 키에 대해서 나중에 온 값이
   이전에 오는 키에 대한 값을 덮어쓸것이다. 하지만, 그 배열이 숫자 키를
   포함하면, 나중 값은 원래 값을 덮어쓰지 <emphasis>않고</emphasis>,
   뒤에 추가될것이다.
  </para>
  <para>
   하나의 배열만 주어지고, 그 배열이 숫자 인덱스로 되어 있으면, 키를
   연속적으로 재인덱스합니다.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       병합할 초기 배열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       재귀 병합할 배열 목록 변수.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   결과 배열을 반환합니다.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_merge</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("color" => "red", 2, 4);
$array2 = array("a", "b", "color" => "green", "shape" => "trapezoid", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [color] => green
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [shape] => trapezoid
    [4] => 4
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>간단한 <function>array_merge</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>
]]>
    </programlisting>
    <para>
     숫자 키는 다른 숫자로 재부여된다는것을 잊지 말것!
    </para>
    <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
    </screen>
    <para>
     배열을 온전히 보존하기를 원하고 그들 배열에 서로를 추가하고자 한다면(이전
     키를 덮어쓰지 않음), <literal>+</literal> 연산자를 사용한다:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = $array1 + $array2;
?>
]]>
    </programlisting>
    <para>
     숫자 키는 보존될것이고 따라서 그 조합이 남겨진다.
    </para>
    <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
    </screen>
   </example>
  </para>
  <warning>
   <para>
    <function>array_merge</function>의 동작은 PHP 5에서 바뀌었습니다. PHP
    4와는 달리, <function>array_merge</function>는 <type>array</type>형 변수만
    받습니다. 그러나, 자료형 변환으로 다른 자료형을 사용할 수 있습니다. 아래
    예제를 참고하십시오.
   </para>
   <para>
    <example>
     <title><function>array_merge</function> PHP 5 예제</title>
     <programlisting role="php">
<![CDATA[
<?php
$beginning = 'foo';
$end = array(1 => 'bar');
$result = array_merge((array)$beginning, (array)$end);
print_r($result);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen role="php">
<![CDATA[
Array
(
    [0] => foo
    [1] => bar
)
]]>
     </screen>
    </example>
   </para>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_merge_recursive</function></member>
    <member><function>array_combine</function></member>
    <member><link linkend="language.operators.array">배열 연산자</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
