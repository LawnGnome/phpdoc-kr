<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 297028 Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
<refentry xml:id="function.array-filter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_filter</refname>
  <refpurpose>콜백 함수를 사용하여 배열 원소를 필터</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_filter</methodname>
   <methodparam><type>array</type><parameter>input</parameter></methodparam>
   <methodparam choice="opt"><type>callback</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_filter</function>는 
   <parameter>input</parameter> 배열안의 각값에 
   <parameter>callback</parameter> 함수에 전달하는 작업을 반복한다.
   <parameter>callback</parameter> 함수가 true를 반환하면,
   <parameter>input</parameter>의 현재값이 결과 배열로 반환된다.
   배열 키들은 보존된다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       반복할 배열
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       사용할 콜백 함수
      </para>
      <para>
       <parameter>callback</parameter>을 지정하지 않으면,
       <parameter>input</parameter>에서 &false;와 같은(<link
        linkend="language.types.boolean.casting">논리형으로 변환</link> 참고)
       모든 원소는 제거됩니다.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   필터한 배열을 반환합니다.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_filter</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
function odd($var)
{
    return ($var & 1);
}

function even($var) {
    return (!($var & 1));
}

$array1 = array("a"=>1, "b"=>2, "c"=>3, "d"=>4, "e"=>5);
$array2 = array(6, 7, 8, 9, 10, 11, 12);

echo "홀수:\n";
print_r(array_filter($array1, "odd"));
echo "짝수:\n";
print_r(array_filter($array2, "even"));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Odd :
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Even:
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
]]>
    </screen>
   </example>
   <example>
    <title><parameter>callback</parameter> 없는
     <function>array_filter</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$entry = array(
             0 => 'foo',
             1 => 'false',
             2 => -1,
             3 => null,
             4 => ''
          );

print_r(array_filter($entry));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => foo
    [1] => -1
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    콜백 함수에서 배열을 변경할 때(원소 추가, 삭제, unset 등), 이 함수의
    동작은 정의되지 않습니다.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_map</function></member>
    <member><function>array_reduce</function></member>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
