<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
<refentry xml:id="function.each" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>each</refname>
  <refpurpose>배열에서 현재 키와 값 쌍을 반환하고 배열 커서를 전진</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>each</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   배열에서 현재 키와 값 쌍을 반환하고 배열 커서를 전진합니다.
  </para>
  <para>
   <function>each</function>를 실행한 후에, 배열 커서는 배열의 다음 원소를
   가르키거나, 배열의 끝이라면 마지막 원소 뒤를 가르킵니다. each를 사용해서
   배열을 다시 따라가려면 <function>reset</function>해야 합니다.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       입력 배열.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>array</parameter> 배열에서 현재의 키와 값 쌍을 반환하고
   배열 커서를 전진시킨다. 이 키/값 쌍은 4개 원소를 갖는 배열을 반환한다.
   <literal>0</literal>, <literal>1</literal>,
   <literal>key</literal>, <literal>value</literal> 이다.
   원소 <literal>0</literal>과 <literal>key</literal>는
   배열 원소의 키 이름을 포함하고, <literal>1</literal>과
   <literal>value</literal>는 데이터를 포함한다.
  </para>
  <para>
   배열의 내부 포인터가 배열의 끝을 벗어나면,
   <function>each</function>는 &false;를 반환한다.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>each</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     <varname>$bar</varname>는 현재 다음과 같은 key/value 쌍을 포함한다:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => bob
    [value] => bob
    [0] => 0
    [key] => 0
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$foo = array("Robert" => "Bob", "Seppo" => "Sepi");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     <varname>$bar</varname>는 현재 다음과 같은 key/value 쌍을 포함한다:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => Bob
    [value] => Bob
    [0] => Robert
    [key] => Robert
)
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   <function>each</function>는 배열을 따라가기 위해 일반적으로
   <function>list</function>와 같이 사용한다. 여기에 예제가 있습니다:
   <example>
    <title><function>each</function>로 배열 따라가기</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruit = array('a' => 'apple', 'b' => 'banana', 'c' => 'cranberry');

reset($fruit);
while (list($key, $val) = each($fruit)) {
    echo "$key => $val\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
a => apple
b => banana
c => cranberry
]]>
    </screen>
   </example>
  </para>
  <caution>
   <para>
    배열을 다른 변수로 지정하는 것은 원래의 배열 포인터를 초기화 하는것이기 
    때문에, 위 예제코드는 루프안에서 <varname>$fruit</varname>를 다른 변수로 
    지정하게 되면 무한 루프를 유발할수 있다.
   </para>
  </caution>
  <warning>
   <para>
    <function>each</function>는 객체를 받아들이지만, 기대하지 않은 결과를
    반환할 수 있습니다. 그러므로 객체 프로퍼티를 <function>each</function>로
    반복하는 일은 권장하지 않습니다.
   </para>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>key</function></member>
    <member><function>list</function></member>
    <member><function>current</function></member>
    <member><function>reset</function></member>
    <member><function>next</function></member>
    <member><function>prev</function></member>
    <member><link linkend="control-structures.foreach">foreach</link></member>
    <member><link linkend="language.oop5.iterations">객체 반복</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
