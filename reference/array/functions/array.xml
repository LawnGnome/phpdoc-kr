<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.10 Maintainer: fuzzy74 Status: unknown -->
  <refentry xml:id="function.array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>
     배열을 생성한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>array</type><methodname>array</methodname>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     매개변수의 배열을 반환한다. 매개변수는
     <literal>=&gt;</literal> 연산자를 통해 인덱스가 주어질수 있다.
     배열이 무엇인지에 대한 더 자세한 정보는
     <link linkend="language.types.array">배열 타입</link>에 관한 섹션을
     참고한다.
    </para>
    <para>
     <note>
      <para>
       <function>array</function>는 리터럴 배열을 표현하기 위해 사용되는
       언어 구조이지, 일반적인 함수가 아니다.
      </para>
     </note>
    </para>
    <para>
     "index =&gt; values" 구문은 콤마(,)로 구분되고, 인덱스와 값을 정의한다.
     인덱스는 문자열이나 숫자형이 될수 있다. 인덱스가 생략되면,
     0부터 시작되는 정수 인덱스가 자동적으로 생성된다. 인덱스가 정수이면,
     다음에 생성되는 인덱스는 더 큰 정수 index + 1 이 될것이다.
     두개의 동일한 인덱스가 생성되었을 경우, 마지막 값이 처음 값을 덮어쓰게
     된다는 것에 주의한다.
    </para>
    <para>
     다음 예제 코드는 2차원 배열을 생성하는 방법, 연관배열에 대한 키를 설정하는
     방법, 일반적인 배열의 숫자 인덱스를 건너뛰는 방법을 보여준다.
     <example>
      <title><function>array</function> 예제코드</title>
      <programlisting role="php">
<![CDATA[
<?php
$fruits = array (
    "fruits"  => array ("a"=>"orange", "b"=>"banana", "c"=>"apple"),
    "numbers" => array (1, 2, 3, 4, 5, 6),
    "holes"   => array ("first", 5 => "second", "third")
)
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>array</function>의 자동적인 인덱스</title>
      <programlisting role="php">
<![CDATA[
<?php
$array = array( 1, 1, 1, 1,  1, 8=>1,  4=>1, 19, 3=>13);
print_r($array);
?>
]]>
      </programlisting>
      <para>
       다음을 보여준다:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
      </screen>
     </example>
    </para>
    <para>
     인덱스 '3'이 두번 정의되었고, 마지막 값인 13이 유지된다는 것에 유의한다.
     인덱스 4는 인덱스 8 이후에 정의되었고, 더 큰 인덱스가 8이기 때문에,
     다음에 생성된 인덱스( 값 19)는 9가 된다.
    </para>
    <para>
     This example creates a 1-based array.
     이 예제코드는 1-베이스 배열을 생성한다.
     <example>
      <title><function>array</function>의 1-베이스 인덱스</title>
      <programlisting role="php">
<![CDATA[
<?php
$firstquarter  = array(1 => 'January', 'February', 'March');
print_r($firstquarter);
?>
]]>
      </programlisting>
      <para>
       다음을 보여준다:
      </para>
      <screen>
<![CDATA[
Array
(
    [1] => January
    [2] => February
    [3] => March
)
]]>
      </screen>
     </example>
    </para>
    <para>
     <function>array_pad</function>,
     <function>list</function>,
     <link linkend="control-structures.foreach">foreach</link>,
     <function>range</function> 참고.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
