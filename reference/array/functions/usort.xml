<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
<refentry xml:id="function.usort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>usort</refname>
  <refpurpose>사용자 정의 비교 함수를 사용하여 값에 의한 배열 정렬</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>usort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callback</type><parameter>cmp_function</parameter></methodparam>
  </methodsynopsis>
  <para>
   이 함수는 사용자 제공 비교 함수를 사용하여 값들에 의해
   배열을 정렬할 것이다. 정렬하고자 하는 배열이 흔히 사용되지 않는 방법에
   의해 정렬할 필요가 있으면, 이 함수를 사용해야 한다.
  </para>
  <note>
   <para>
    두 멤버가 같은 것으로 비교되면, 정렬한 배열에서 그들의 순서는 정의되지
    않습니다.
   </para>
  </note>
  &note.no-key-association;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       입력 배열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cmp_function</parameter></term>
     <listitem>
      <para>
       비교 함수는 첫번째 인수가 두번째 인수보다 작거나, 같거나, 크다고 판단되면
       0 보다 작거나, 같거나, 큰 정수를 반환해야 한다.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        새 정렬 알고리즘이 도입되었습니다.
        <parameter>cmp_function</parameter>은 같다고 비교되는 원소의 순서를
        유지하지 않습니다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>usort</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    if ($a == $b) {
        return 0;
    }
    return ($a < $b) ? -1 : 1;
}

$a = array(3, 2, 5, 6, 1);

usort ($a, "cmp");

foreach ($a as $key => $value) {
    echo "$key: $value\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
0: 1
1: 2
2: 3
3: 5
4: 6
]]>
    </screen>
   </example>
  </para>
  <note>
   <para>
    명백히 이런 흔한 경우에는 <function>sort</function> 함수가
    더욱 적절할것이다.
   </para>
  </note>
  <para>
   <example>
    <title>
     다차원 배열을 사용하는 <function>usort</function> 예제
    </title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    return strcmp($a["fruit"], $b["fruit"]);
}

$fruits[0]["fruit"] = "lemons";
$fruits[1]["fruit"] = "apples";
$fruits[2]["fruit"] = "grapes";

usort($fruits, "cmp");

while (list($key, $value) = each($fruits)) {
    echo "\$fruits[$key]: " . $value["fruit"] . "\n";
}
?>
]]>
    </programlisting>
    <para>
     다차원 배열을 정렬할 때에는, <varname>$a</varname>와
     <varname>$b</varname>는 배열의 첫번째 인덱스의 참조를 포함한다.
    </para>
    &example.outputs;
    <screen>
<![CDATA[
$fruits[0]: apples
$fruits[1]: grapes
$fruits[2]: lemons
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>
     객체의 멤버 함수를 사용하는 <function>usort</function> 예제
    </title>
    <programlisting role="php">
<![CDATA[
<?php
class TestObj {
    var $name;

    function TestObj($name)
    {
        $this->name = $name;
    }

    /* 정적 비교 함수: */
    static function cmp_obj($a, $b)
    {
        $al = strtolower($a->name);
        $bl = strtolower($b->name);
        if ($al == $bl) {
            return 0;
        }
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new TestObj("c");
$a[] = new TestObj("b");
$a[] = new TestObj("d");

usort($a, array("TestObj", "cmp_obj"));

foreach ($a as $item) {
    echo $item->name . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
b
c
d
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>uasort</function></member>
    <member><function>uksort</function></member>
    <member><function>sort</function></member>
    <member><function>asort</function></member>
    <member><function>arsort</function></member>
    <member><function>ksort</function></member>
    <member><function>natsort</function></member>
    <member><function>rsort</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
