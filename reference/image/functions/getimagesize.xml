<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/image.xml, last change in rev 1.1 -->
<!-- last change to 'getimagesize' in en/ tree in rev 1.36 -->
  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>Get the size of a GIF, JPEG, PNG or SWF image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>getimagesize</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>imageinfo</parameter></methodparam>
     </methodsynopsis>
    <para>
     The <function>GetImageSize</function> function will determine the
     size of any <acronym>GIF</acronym>, <acronym>JPG</acronym>,
     <acronym>PNG</acronym> or <acronym>SWF</acronym> image file and
     return the dimensions along with the file type and a height/width
     text string to be used inside a normal <acronym>HTML</acronym>
     <sgmltag>IMG</sgmltag> tag.
    </para>
    <para>
     Returns an array with 4 elements.  Index 0 contains the width of
     the image in pixels.  Index 1 contains the height.  Index 2 a
     flag indicating the type of the image.  1 = GIF, 2 = JPG, 3 =
     PNG, 4 = SWF.  Index 3 is a text string with the correct
     "height=xxx width=xxx" string that can be used directly in an IMG
     tag.
     <example>
      <title>GetImageSize</title>
      <programlisting role="php">
&lt;?php $size = GetImageSize ("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>
      </programlisting>
     </example>
    </para>
    <para>
     The optional <parameter>imageinfo</parameter> parameter allows
     you to extract some extended information from the image
     file. Currently this will return the diffrent
     <acronym>JPG</acronym> APP markers in an associative Array. Some
     Programs use these APP markers to embedd text information in
     images. A very common one in to embed <acronym>IPTC</acronym>
     <ulink url="&url.iptc;">&url.iptc;</ulink> information in the
     APP13 marker. You can use the <function>iptcparse</function>
     function to parse the binary APP13 marker into something
     readable.
     <example>
      <title>GetImageSize returning IPTC</title>
      <programlisting>
&lt;?php 
    $size = GetImageSize ("testimg.jpg",&amp;$info);
    if (isset ($info["APP13"])) {
        $iptc = iptcparse ($info["APP13"]);
        var_dump ($iptc);
    }
?&gt;
      </programlisting>
     </example>
     <note>
      <simpara>
       This function does not require the GD image library.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
