<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/image.xml, last change in rev 1.1 -->
<!-- last change to 'imagegif' in en/ tree in rev 1.3 -->
  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGIF</refname>
    <refpurpose>Output image to browser or file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>imagegif</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageGIF</function> creates the <acronym>GIF</acronym>
     file in filename from the image <parameter>im</parameter>. The
     <parameter>im</parameter> argument is the return from the
     <function>imagecreate</function> function.
    </para>
    <para>
     The image format will be <acronym>GIF87a</acronym> unless the
     image has been made transparent with
     <function>ImageColorTransparent</function>, in which case the
     image format will be <acronym>GIF89a</acronym>.
    </para>
    <para>
     The filename argument is optional, and if left off, the raw image
     stream will be output directly.  By sending an image/gif
     content-type using <function>header</function>, you can create a
     PHP script that outputs <acronym>GIF</acronym> images directly.
     <note>
      <para>
       Since all <acronym>GIF</acronym> support was removed from the
       <acronym>GD</acronym> library in version 1.6, this function is
       not available if you are using that version of the GD library.
      </para>
      <para>
       The following code snippet allows you to write more
       portable PHP applications by auto-detecting the
       type of GD support which is available. Replace
       the sequence <literal>Header("Content-type: image/gif");
       ImageGIF($im);</literal> by the more flexible sequence:
       <informalexample>
        <programlisting role="php">
&lt;?php
  if (function_exists("imagegif")) {
    Header("Content-type: image/gif");
    ImageGIF($im);
  }
  elseif (function_exists("imagejpeg")) {
    Header("Content-type: image/jpeg");
    ImageJPEG($im, "", 0.5);
  }
  elseif (function_exists("imagepng")) {
    Header("Content-type: image/png");
    ImagePNG($im);
  }
  elseif (function_exists("imagewbmp")) {
    Header("Content-type: image/vnd.wap.wbmp");
    ImageWBMP($im);
  }
  else
    die("No image support in this PHP server");
?&gt;
        </programlisting>
       </informalexample>
      </para>
     </note>
     <note>
      <para>
       As of version 3.0.18 and 4.0.2 you can use the function
       <function>imagetypes</function> in place of
       <function>function_exists</function> for checking
       the presence of the various supported image formats:
       <informalexample>
        <programlisting role="php">
if (ImageTypes() &amp; IMG_GIF) {
    Header("Content-type: image/gif");
    ImageGif($im);
}
elseif (ImageTypes() &amp; IMG_JPG) {
... etc.</programlisting>
       </informalexample>
      </para>
     </note>
    </para>
    <para>
     See also <function>ImagePNG</function>, <function>ImageWBMP</function>, 
     <function>ImageJPEG</function>, <function>ImageTypes</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
