<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/yaz.xml, last change in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: karoora Status: bad -->
	<refentry xml:id="function.yaz-search" xmlns="http://docbook.org/ns/docbook">
		<refnamediv>
			<refname>yaz_search</refname>
			<refpurpose>검색을 준비한다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>Description</title>
				<methodsynopsis>
					<type>int</type><methodname>yaz_search</methodname>
					<methodparam><type>int</type><parameter>id</parameter></methodparam>
					<methodparam><type>string</type><parameter>type</parameter></methodparam>
					<methodparam><type>string</type><parameter>query</parameter></methodparam>
				</methodsynopsis>
			<para>
				<function>yaz_search</function>은 주어진 ID로 target에 검색을 준비한다. type은 쿼리 타입을 나타낸다.-세번째 변수로 지정된 Type-1 query (RPN)인 경우 단지 "rpn"만을 지원한다. <function>yaz_connect</function>처럼 non-blocking 이고 <function>yaz_wait</function>이 호출된 이후에 검색을 준비한다.
    </para>
		</refsect1>
		<refsect1>
			<title>The RPN query</title>
			<para>
     The RPN query is a textual represenation of the Type-1 query as defined by the Z39.50 standard. However, in the text representation
     as used by YAZ a prefix notation is used, that is the operater
     precedes the operands. The query string is a sequence of tokens where
     white space is ignored is ignored unless surrounded by double
     quotes. Tokens beginning with an at-character (<literal>@</literal>)
     are considered operators, otherwise they are treated as search terms.
    </para>
			<table>
				<title>RPN Operators</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Syntax</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>
								<literal>@and query1 query2</literal>
							</entry>
							<entry>intersection of query1 and query2</entry>
						</row>
						<row>
							<entry>
								<literal>@or query1 query2</literal>
							</entry>
							<entry>union of query1 and query2</entry>
						</row>
						<row>
							<entry>
								<literal>@not query1 query2</literal>
							</entry>
							<entry>query1 and not query2</entry>
						</row>
						<row>
							<entry>
								<literal>@set name</literal>
							</entry>
							<entry>result set reference</entry>
						</row>
						<row>
							<entry>
								<literal>@attrset set query</literal>
							</entry>
							<entry>specifies attribute-set for query. This construction is only
                allowed once - in the beginning of the whole query</entry>
						</row>
						<row>
							<entry>
								<literal>@attr set type=value query</literal>
							</entry>
							<entry>applies attribute to query. The type and value are
                 integers specifying the attribute-type and attribute-value
                 respectively. The set, if given, specifies the
                 attribute-set.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<para>
     The following illustrates valid query constructions:
     <informalexample>
					<screen>computer</screen>
				</informalexample>
      Matches documents where "computer" occur. No attributes are specified.
    </para>
			<para>
				<informalexample>
					<screen>"donald knuth"</screen>
				</informalexample>
     Matches documents where "donald knuth" occur.
    </para>
			<para>
				<informalexample>
					<screen>@attr 1=4 art</screen>
				</informalexample>
     Attribute type is 1 (Bib-1 use), attribute value is 4
     Title), so this should match documents where "art" occur
     in the title.
    </para>
			<para>
				<informalexample>
					<screen>@attrset gils @and @attr 1=4 art @attr 1=1003 "donald knuth"</screen>
				</informalexample>
     The query as a whole uses the GILS attributeset. The query matches
     documents where "art" occur in the title and in which "donald knuth"
     occur in the author.
    </para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
