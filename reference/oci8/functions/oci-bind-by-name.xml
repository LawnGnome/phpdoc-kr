<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
  <refentry id="function.oci-bind-by-name">
   <refnamediv>
    <refname>oci_bind_by_name</refname>
    <refpurpose>
     Binds the PHP variable to the Oracle placeholder
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>bool</type><methodname>oci_bind_by_name</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_bind_by_name</function> PHP 변수 <parameter>variable</parameter>을
     오라클 변수 <parameter>ph_name</parameter>으로 바인드 한다. 인풋, 아웃풋 어느것으로 사용되더라도 
	 런타임 시에 결정되며 필요한 저장공간이 할당된다. <parameter>length</parameter> 
     인자는 바인드를 위한 최대 값을 설정한다. <parameter>length</parameter> 을 -1 로 설정할 경우
     <function>oci_bind_by_name</function>은 <parameter>variable</parameter>의 길이를 최대값으로 설정한다.
	</para>
    <para>
     추상 데이터 타입(LOB/ROWID/BFILE)을 바인드 하기 위해 
	 <function>oci_new_descriptor</function> 함수를 사용한 할당작업이 필요하다.
	<parameter>length</parameter>는 추상 데이터 타입에는 사용되지 않고 반드시 -1로 설정이 되어야 한다.
	<parameter>type</parameter> 인자는 어떤 descriptor가 사용될 지를 오라클에 알려준다.
	사용 가능한 값들: 
     <itemizedlist>
      <listitem>
       <para>
        <constant>OCI_B_FILE</constant> - BFILEs 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CFILE</constant> - CFILEs 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CLOB</constant> - CLOBs 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_BLOB</constant> - BLOBs 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_ROWID</constant> - ROWIDs 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_NTY</constant> - named datatypes 용;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CURSOR</constant> - <function>oci_new_cursor</function>로 생성되기 전의 cursors 용.
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>oci_bind_by_name</function>example</title>
      <programlisting role="php">
<![CDATA[
<?php
/* oci_bind_by_name example thies at thieso dot net (980221)
  inserts 3 records into emp, and uses the ROWID for updating the 
  records just after the insert.
*/

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "
                          INSERT INTO 
                                     emp (empno, ename) 
                                              VALUES 
                                     (:empno,:ename) 
                            RETURNING 
                                     ROWID 
                                 INTO 
                                     :rid
                                         ");

$data = array(
              1111 => "Larry", 
              2222 => "Bill", 
              3333 => "Jim"
             );

$rowid = oci_new_descriptor($conn, OCI_D_ROWID);

oci_bind_by_name($stmt, ":empno", $empno, 32);
oci_bind_by_name($stmt, ":ename", $ename, 32);
oci_bind_by_name($stmt, ":rid",   $rowid, -1, OCI_B_ROWID);

$update = oci_parse($conn, "
                            UPDATE
                                  emp 
                               SET 
                                  sal = :sal 
                             WHERE 
                                  ROWID = :rid
                             ");
oci_bind_by_name($update, ":rid", $rowid, -1, OCI_B_ROWID);
oci_bind_by_name($update, ":sal", $sal,   32);

$sal = 10000;

foreach ($data as $empno => $ename) {
    oci_execute($stmt);
    oci_execute($update);
} 

$rowid->free();

oci_free_statement($update);
oci_free_statement($stmt);

$stmt = oci_parse($conn, "
                          SELECT 
                                * 
                            FROM 
                                emp 
                           WHERE 
                                empno 
                              IN 
                                (1111,2222,3333)
                              ");
oci_execute($stmt);
                              
while ($row = oci_fetch_assoc($stmt)) {
    var_dump($row);
}

oci_free_statement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = oci_parse($conn, "
                          DELETE FROM
                                     emp 
                                WHERE 
                                     empno 
                                   IN 
                                     (1111,2222,3333)
                                   ");
oci_execute($stmt);
oci_free_statement($stmt);

oci_close($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Remember, this function strips trailing whitespaces. See the following
     example:
    </para>
    <para>
     <example>
      <title><function>oci_bind_by_name</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, :text)";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_bind_by_name($statement, ":text", "trailing spaces follow     ");
    oci_execute($statement);
    /*
     This code will insert into DB string 'trailing spaces follow', without
     trailing spaces
    */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>oci_bind_by_name</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, 'trailing spaces follow      ')";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_execute($statement);
    /*
     And this code will add 'trailing spaces follow      ', preserving
     trailing whitespaces
    */
?>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      Do not use <link
       linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> or 
      <function>addslashes</function> and <function>oci_bind_by_name</function> 
      simultaneously as no quoting is needed and any magically applied quotes 
      will be written into your database as <function>oci_bind_by_name</function> 
      is not able to distinguish magically added quotings from those added
      intentionally.
     </para> 
    </warning>
    <para>
     &return.success;
    </para>
    <note>
     <para>
      In PHP versions before 5.0.0 you must use <function>ocibindbyname</function> instead. 
      This name still can be used, it was left as alias of
      <function>oci_bind_by_name</function> for downwards compatability. 
      This, however, is deprecated and not recommended.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

