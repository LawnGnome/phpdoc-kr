<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 288721 Maintainer: progcom Status: ready -->
<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>문자열을 URL 인코드</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   이 함수는 URL의 쿼리 부분에 사용할 수 있도록 문자열을 인코드할 때
   편리합니다. 다음 페이지로 편하게 변수를 전달할 수 있습니다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       인코드할 문자열.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <literal>-_.</literal>을 제외한 모든 영숫자가 아닌 문자를
   퍼센트(<literal>%</literal>) 사인에 이어지는 두 16진수로 교체하고
   공백은 플러스(<literal>+</literal>) 사인으로 교체한 문자열을
   반환합니다. 이는 WWW 폼에서 인코드한 포스트 데이터,
   <literal>application/x-www-form-urlencoded</literal> 매체형과 같은
   방식의 인코드입니다. 역사적인 이유로 공백을 더하기 부호(+)로
   인코드 하는 점이 <link xlink:href="&url.rfc;1738">RFC 1738</link>
   인코딩(<function>rawurlencode</function> 참고)과 다릅니다.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>urlencode</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>urlencode</function>와 <function>htmlentities</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?foo=' . htmlentities($query_string) . '">';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    HTML 엔티티에 매치하는 변수에는 주의를 기울이십시오.
    &amp;amp, &amp;copy, &amp;pound 같은 것은 브라우저에 의해
    파싱되어 변수명 대신 엔티티가 사용됩니다. 이는 몇년동안
    W3C가 두드러지게 이야기해온 문제입니다. 레퍼런스는 여기에 있습니다:
    <link xlink:href="&url.argsep;">&url.argsep;</link>.
   </para>
   <para>
    PHP는 .ini 지시어의 arg_seperator를 통하여 W3C가 제시한 세미콜론 인수
    구분자 변경을 지원합니다. 불행하게도 대부분의 유저 에이전트는 폼 데이터를
    세미콜론 구분 형태로 전송하지 않습니다. 이를 해결하는 가장 현실적인
    방법은 구분자로 &amp;를 사용하는 대신 &amp;amp;를 사용하는 것입니다.
    이렇게 하면, PHP의 arg_separator를 변경할 필요가 없습니다.
    &amp;로 내버려두고, 간단히 <function>htmlentities</function>나
    <function>htmlspecialchars</function>를 사용하여 URL을 인코드 하십시오.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
