<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 1.8 Maintainer: progcom Status: ready -->
  <refentry xml:id="function.http-build-query" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>http_build_query</refname>
    <refpurpose>URL 인코드한 쿼리 문자열을 생성합니다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
    <methodsynopsis>
     <type>string</type><methodname>http_build_query</methodname>
     <methodparam><type>array</type><parameter>formdata</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>numeric_prefix</parameter></methodparam>
    </methodsynopsis>
    
    <simpara>
     주어진 연관(혹은 인덱스) 배열에서 URL 인코드한 쿼리 문자열을 생성합니다.
     <parameter>formdata</parameter>는 배열이나 속성을 가지는 객체일 수
     있습니다. <parameter>formdata</parameter>는 단순한 1차원 구조일수도, 혹은
     (다른 배열을 포함한)배열의 배열일 수 있습니다. 기본 배열에 숫자 인덱스를
     사용하고 <parameter>numeric_prefix</parameter>가 주어지면, 기본 배열 안의
     숫자 인덱스 앞에 덧붙여집니다. 이는 <literal>PHP</literal>나 다른 CGI
     어플리케이션에 적합한 변수명을 가지도록 합니다.
    </simpara>
    
    <example>
     <title><function>http_build_query</function>의 간단한 사용법</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('foo'=>'bar',
              'baz'=>'boom',
              'cow'=>'milk',
              'php'=>'hypertext processor');
              
echo http_build_query($data); // foo=bar&baz=boom&cow=milk&php=hypertext+processor
?>
]]>
     </programlisting>
    </example>

    <example>
     <title><function>http_build_query</function>와 숫자 인덱스 요소.</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('foo', 'bar', 'baz', 'boom', 'cow' => 'milk', 'php' =>'hypertext processor');
              
echo http_build_query($data);
/* 출력:
      0=foo&1=bar&2=baz&3=boom&cow=milk&php=hypertext+processor
 */
 
echo http_build_query($data, 'myvar_');
/* 출력:
      myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&cow=milk&php=hypertext+processor
 */
?>
]]>
     </programlisting>
    </example>

    <example>
     <title><function>http_build_query</function>와 복잡한 배열</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('user'=>array('name'=>'Bob Smith',
                            'age'=>47,
                            'sex'=>'M',
                            'dob'=>'5/12/1956'),
              'pastimes'=>array('golf', 'opera', 'poker', 'rap'),
              'children'=>array('bobby'=>array('age'=>12,
                                               'sex'=>'M'),
                                'sally'=>array('age'=>8,
                                               'sex'=>'F')),
              'CEO');
                                               
echo http_build_query($data, 'flags_');
?>
]]>
     </programlisting>
     <para>
      출력은(읽기 편하도록 줄바꿈 처리):
     </para>
     <screen>
<![CDATA[
user[name]=Bob+Smith&user[age]=47&user[sex]=M&user[dob]=5%1F12%1F1956&
pastimes[0]=golf&pastimes[1]=opera&pastimes[2]=poker&pastimes[3]=rap&
children[bobby][age]=12&children[bobby][sex]=M&children[sally][age]=8&
children[sally][sex]=F&flags_0=CEO
]]>
     </screen>
     <para>
      <note>
       <para>
        기본 배열의 숫자 인덱스 요소인 "CEO"만이 전치사를 가집니다.
        내부에 존재하는 다른 숫자 인덱스는, 적합한 변수명을 가지기
        위한 문자열 전치사가 필요하지 않습니다.
       </para>
      </note>
     </para>
    </example>
    
    <example>
     <title><function>http_build_query</function>에 객체 사용하기</title>
     <programlisting role="php">
<![CDATA[
<?php
class myClass {
  var $foo;
  var $baz;
  
  function myClass()
  {
    $this->foo = 'bar';
    $this->baz = 'boom';
  }
}

$data = new myClass();

echo http_build_query($data); // foo=bar&baz=boom
?>
]]>
     </programlisting>
    </example>

    <simpara>
     참고:
     <function>parse_str</function>,
     <function>parse_url</function>,
     <function>urlencode</function>,
     <function>array_walk</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
