<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.12 Maintainer: progcom Status: ready -->
<refentry xml:id="function.get-class" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>get_class</refname>
  <refpurpose>객체의 클래스명을 반환</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>get_class</methodname>
   <methodparam choice="opt"><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   주어진 <parameter>object</parameter>의 클래스명을 얻습니다.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       확인할 객체
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>object</parameter> 인스턴스의 클래스명을 반환합니다.
   <parameter>object</parameter>가 객체가 아니면 &false;를 반환합니다.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0부터</entry>
       <entry>
        클래스명을 원 문자대로 반환합니다.
       </entry>
      </row>
      <row>
       <entry>5.0.0부터</entry>
       <entry>
        객체 메쏘드에서 호출할 때, <parameter>object</parameter> 인수는
        선택적입니다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>get_class</function> 사용하기</title>
    <programlisting role="php">
<![CDATA[
<?php

class foo {
    function name()
    {
        echo "My name is " , get_class($this) , "\n";
    }
}

// 객체 만들기
$bar = new foo();

// 외부 호출
echo "Its name is " , get_class($bar) , "\n";

// 내부 호출
$bar->name();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Its name is foo
My name is foo
]]>
    </screen>
   </example>
   <example>
    <title>슈퍼클래스에서 <function>get_class</function> 사용하기</title>
    <programlisting role="php">
<![CDATA[
<?php

abstract class bar {
	public function __construct()
	{
		var_dump(get_class($this));
		var_dump(get_class());
	}
}

class foo extends bar {
}

new foo;

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(3) "foo"
string(3) "bar"
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_parent_class</function></member>
    <member><function>gettype</function></member>
    <member><function>is_subclass_of</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
