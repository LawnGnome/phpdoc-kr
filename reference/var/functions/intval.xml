<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.5 Maintainer: progcom Status: ready -->
<refentry xml:id="function.intval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>intval</refname>
  <refpurpose>변수의 정수값을 얻습니다</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>intval</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter></methodparam>
  </methodsynopsis>
  <para>
   지정한 <parameter>base</parameter> 값에 따른 <parameter>var</parameter>의
   <type>integer</type>값을 반환합니다. (기본 진법은 10입니다)
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       정수로 변환할 스칼라 값
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       변환에 사용할 진법 (기본값은 10진법)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   성공시엔 <parameter>var</parameter>의 정수 값, 실패시엔 0. 빈 배열과 객체는
   0을 반환하고, 비어있지 않은 배열과 객체는 1을 반환합니다.
  </para>
  <para>
   최대값은 시스템에 의존합니다. 32비트 시스템은 부호 있는 정수의 최대값
   범위로 -2147483648에서 2147483647을 가집니다. 그러한 시스템에서
   <literal>intval('1000000000000')</literal> 등은 2147483647을 반환합니다.
   64비트 시스템에서 부호 있는 정수의 최대값은 9223372036854775807입니다.
  </para>
  <para>
   문자열은 대부분 0을 반환하지만, 이는 문자열의 가장 왼쪽 문자들에 의해
   결정됩니다. <link linkend="language.types.integer.casting">정수형
    변환</link>의 기본 규칙이 적용됩니다.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>intval</function> 예제</title>
    <para>
     다음 예제는 32비트 시스템입니다.
    </para>
    <programlisting role="php">
<![CDATA[
echo intval(42);                      // 42
echo intval(4.2);                     // 4
echo intval('42');                    // 42
echo intval('+42');                   // 42
echo intval('-42');                   // -42
echo intval(042);                     // 34
echo intval('042');                   // 42
echo intval(1e10);                    // 1410065408
echo intval('1e10');                  // 1
echo intval(0x1A);                    // 26
echo intval(42000000);                // 42000000
echo intval(420000000000000000000);   // 0
echo intval('420000000000000000000'); // 2147483647
echo intval(42, 8);                   // 42
echo intval('42', 8);                 // 34
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <parameter>var</parameter> 인수가 문자열이 아니면
    <parameter>base</parameter> 인수는 아무런 영향을 주지 않습니다.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>floatval</function></member>
    <member><function>strval</function></member>
    <member><function>settype</function></member>
    <member><function>is_numeric</function></member>
    <member><link linkend="language.types.type-juggling">자료형 조절</link></member>
    <member><link linkend="ref.bc">BCMath 임의 정밀도 수학 함수</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
