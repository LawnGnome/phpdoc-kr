<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<refentry xml:id="function.unserialize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unserialize</refname>
  <refpurpose>
   저장 표현에서 PHP 값을 작성
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>unserialize</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>unserialize</function>은 하나의 일렬화된 변수를 받아서 PHP 값으로
   변환합니다.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       일렬화된 문자열.
      </para>
      <para>
       변수가 객체로 unserialize되고, 성공적으로 객체로 재구성되면, PHP는
       자동적으로 <function>__wakeup</function> 멤버 함수를 호출합니다.
       (존재한다면)
      </para>
      <para>
       <note>
        <title>unserialize_callback_func 지시어</title>
        <para>
         일렬화를 푸는 도중에 미정의된 클래스가 생성될 때 호출할 콜백 함수를
         설정할 수 있습니다. (미완성된 <type>object</type>
         "__PHP_Incomplete_Class"를 방지합니다) &php.ini;,
         <function>ini_set</function>, &htaccess; 등을 이용해서
         'unserialize_callback_func'를 정의하십시오. 미정의 클래스가
         생성되어야 할 때마다 호출됩니다. 이 기능을 끄려면 설정을 비워두면
         됩니다.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   변환된 값이 반환되며, <type>boolean</type>, <type>integer</type>,
   <type>float</type>, <type>string</type>, <type>array</type>,
   <type>object</type>가 될 수 있습니다.
  </para>
  <para>
   주어진 문자열에서 일렬화를 풀 수 없을 때는 &false;를 반환하고
   <literal>E_NOTICE</literal>가 발생합니다.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.2.0</entry>
       <entry>
        unserialize_callback_func 지시어를 사용할 수 있게 되었습니다.
       </entry>
      </row>
      <row>
       <entry>4.0.0</entry>
       <entry>
        객체를 일렬화 할 때, 메쏘드를 잃어버리지 않습니다. 자세한 정보는 <link
         linkend="language.oop.serialization">객체 일렬화</link>를
        참고하십시오.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>unserialize</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
// 여기서는, 데이터베이스에서 가져온 문자열로부터 $session_data
// 배열에 세션 데이터를 읽어들일 때 unserialize()를 사용합니다.
// 이 예제는 serialize()에 설명된 예제를 보완합니다.

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn, "SELECT data FROM sessions WHERE id = ?");
$sqldata = array($_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, &$sqldata) || !odbc_fetch_into($stmt, &$tmp)) {
    // excute나 fetch가 실패하면, 빈 배열로 초기화합니다.
    $session_data = array();
} else {
    // 여기서는 일렬화된 데이터를 $tmp[0]에 가집니다.
    $session_data = unserialize($tmp[0]);
    if (!is_array($session_data)) {
        // 무언가 잘못되면, 빈 배열로 초기화합니다.
        $session_data = array();
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>unserialize_callback_func 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$serialized_object='O:1:"a":1:{s:5:"value";s:3:"100";}';

// unserialize_callback_func 지시어는 PHP 4.2.0부터 사용할 수 있습니다.
ini_set('unserialize_callback_func', 'mycallback'); // 콜백 함수를 설정

function mycallback($classname)
{
    // 단지 클래스를 정의하는 파일을 포함합니다.
    // 어떤 클래스 정의가 필요한가는 $classname에서 얻을 수 있습니다.
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    오류가 발생했을 때와 일렬화된 &false; 값을 복구했을 때, 둘 다 &false;를
    반환합니다. <parameter>str</parameter>를
    <literal>serialize(false)</literal>와 비교하거나,
    <literal>E_NOTICE</literal> 발생을 확인해서 이러한 특별한 경우를 처리할 수
    있습니다.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>serialize</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
