<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<refentry xml:id="function.serialize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>serialize</refname>
  <refpurpose>값의 저장 표현을 생성</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>serialize</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   값의 저장 표현을 생성합니다.
  </para>
  <para>
   이는 PHP 값을 저장하거나 전달할 때 자료형이나 구조를 잃어버리지 않게 합니다.
  </para>
  <para>
   일렬화된 문자열을 다시 PHP 변수로 만드려면,
   <function>unserialize</function>를 사용합니다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       일렬화할 값. <function>serialize</function>는 <type>resource</type>형을
       제외한 모든 형을 다룹니다. 자기 자신을 참조하는 배열을
       <function>serialize</function>할 수도 있습니다. 배열/객체 안의 순환
       참조도 일렬화하여 저장됩니다. 그 외의 다른 참조는 읽어버립니다.
      </para>
      <para>
       객체를 일렬화할 때, 일렬화 전에 <link
        linkend="language.oop5.magic">__sleep</link> 멤버 함수를 호출합니다.
       이로써 일렬화하기 전에 객체를 마지막으로 정리할 수 있습니다.
       마찬가지로, <function>unserialize</function>을 사용하여 객체를 되돌릴
       때는 <link linkend="language.oop5.magic">__wakeup</link> 멤버 함수를
       호출합니다.
      </para>
      <note>
       <para>
        객체의 private 멤버는 이름 앞에 클래스 이름을 덧붙입니다; protected
        멤버는 이름 앞에 '*'를 덧붙입니다. 이런 덧붙인 값은 모두 null 바이트를
        가집니다.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>value</parameter>의 어디에라도 저장할 수 있는 바이트 스트림
   표현을 가지는 문자열을 반환합니다.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>serialize</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
// $session_data는 현재 사용자의 세션 정보를 다차원 배열로
// 가집니다. 요청의 마지막에 이것을 데이터베이스에 저장하기
// 위해서 serialize()를 사용합니다.

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
        /* 무언가 잘못되었을때 할 일.. */
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.7</entry>
       <entry>
        객체 일렬화 처리가 고정되었습니다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    PHP 내부 객체를 일렬화할 수 없습니다.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>unserialize</function></member>
    <member><link linkend="language.oop5.serialization">Serializing Objects</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
