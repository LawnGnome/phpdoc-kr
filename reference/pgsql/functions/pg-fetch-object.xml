<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/pgsql.xml, last change in rev 1.3 -->
<!-- EN-Revision: n/a Maintainer: noribsd Status: bad -->
	<refentry xml:id="function.pg-fetch-object" xmlns="http://docbook.org/ns/docbook">
		<refnamediv>
			<refname>pg_fetch_object</refname>
			<refpurpose>데이터베이스의 행을 오브젝트로 가져온다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>함수 설명</title>
				<methodsynopsis>
					<type>object</type><methodname>pg_fetch_object</methodname>
					<methodparam><type>int</type><parameter>result</parameter></methodparam>
					<methodparam><type>int</type><parameter>row</parameter></methodparam>
					<methodparam choice="opt"><type>int</type><parameter>
							result_type
						</parameter></methodparam>
				</methodsynopsis>
			<para> 
			데이터베이스의 행을 그 행이 가진 프로퍼티와 함께 오브젝트의 형태로 돌려주며,
			더이상 가져올 행이 없을 경우 거짓(&false;)을 돌려준다.
        </para>
			<para>
				<function>pg_fetch_object</function> 함수는 <function>pg_fetch_array</function> 함수와
			   거의 비슷하지만, 중요한 한가지가 다르다 -- 배열을 돌려주는 대신 오브젝트를 돌려준다.
			   간접적인 의미로, 여러분은 그 데이터를 오직 그 필드의 이름으로만 접근(access)할 수 
			   있으며 오프셋(offsets)으로는 접근이 불가능하다. (숫자는 올바른 프로퍼티 이름이 아니다)
			 </para>
			<para>
			세번째로 정의된 <parameter>result_type</parameter> 인수는 선택적으로 주어질 수 있는
			상수의 형태로 다음과 같은 값을 취할 수 있다: PGSQL_ASSOC, PGSQL_NUM, 그리고 PGSQL_BOTH.
     <note>
					<para>
						<parameter>Result_type</parameter> 은 PHP 4.0 버전부터 추가되었다.
      </para>
				</note>
			</para>
			<para>
			함수 실행 속도는 <function>pg_fetch_array</function> 함수와 마찬가지로,
			<function>pg_fetch_row</function> 함수만큼 충분히 빠르다. (그 차이는 미미하다)
     </para>
			<para>
				<function>pg_fetch_array</function> 와
     <function>pg_fetch_row</function> 도 참고하라.
     <example>
					<title>Postgres fetch object</title>
					<programlisting role="php">
&lt;?php 
$database = "verlag";
$db_conn = pg_connect ("host=localhost port=5432 dbname=$database");
if (!$db_conn): ?>
    &lt;H1>Failed connecting to postgres database &lt;?php echo $database ?>&lt;/H1> &lt;?php
    exit;
endif;

$qu = pg_exec ($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // postgres는 다른 데이터베이스들이 필요로 하지 않는 행카운터(row counter)를 필요로 한다

while ($data = pg_fetch_object ($qu, $row)):
    echo $data->autor." (";
    echo $data->jahr ."): ";
    echo $data->titel."&lt;BR>";
    $row++;
endwhile; ?>

&lt;PRE>&lt;?php
$fields[] = Array ("autor", "Author");
$fields[] = Array ("jahr",  "  Year");
$fields[] = Array ("titel", " Title");

$row= 0; // postgres는 다른 데이터베이스들이 필요로 하지 않는 행카운터를 필요로 한다
while ($data = pg_fetch_object ($qu, $row)):
    echo "----------\n";
    reset ($fields);
    while (list (,$item) = each ($fields)):
        echo $item[1].": ".$data->$item[0]."\n";
    endwhile;
    $row++;
endwhile;
echo "----------\n"; ?>
&lt;/PRE> &lt;?php
pg_freeResult ($qu);
pg_close ($db_conn);
?>
      </programlisting>
				</example>
			</para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
