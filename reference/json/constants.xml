<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 331700 Maintainer: progcom Status: ready -->

<appendix xml:id="json.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  다음 상수들은 <function>json_last_error</function>에서 반환하는 오류 형식을
  나타냅니다.
 </para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_NONE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     오류가 발생하지 않았습니다. PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_DEPTH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     최대 스택 깊이 초과. PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-state-mismatch">
   <term>
    <constant>JSON_ERROR_STATE_MISMATCH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     언더플로우나 모드가 매치하지 않을 경우 발생합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_CTRL_CHAR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     제어 문자 오류, 인코드 오류일 수 있음.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_SYNTAX</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     문법 오류.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-utf8">
   <term>
    <constant>JSON_ERROR_UTF8</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     잘못된 UTF-8 문자들. 인코드 오류일 수 있음. PHP 5.3.3부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-recursion">
   <term>
    <constant>JSON_ERROR_RECURSION</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     <function>json_encode</function>에 전달한 객체나 배열이 재귀 참조를
     가지고 있어서, 인코드 할 수 없습니다.
     <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 옵션을 설정하면,
     재귀 참조를 &null;로 인코드 합니다.
    </para>
    <para>
     이 상수는 PHP 5.5.0부터 존재합니다.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-inf-or-nan">
   <term>
    <constant>JSON_ERROR_INF_OR_NAN</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     <function>json_encode</function>로 전달한 값이
     <link linkend="language.types.float.nan"><constant>NAN</constant></link>이나
     <link linkend="function.is-infinite"><constant>INF</constant></link>입니다.
     <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 옵션을 설정하면,
     이러한 특수한 수를 <literal>0</literal>으로 인코드 합니다.
    </para>
    <para>
     이 상수는 PHP 5.5.0부터 존재합니다.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-unsupported-type">
   <term>
    <constant>JSON_ERROR_UNSUPPORTED_TYPE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     <type>resource</type> 등의 지원하지 않는 형식의 값이
     <function>json_encode</function>에 주어졌습니다.
     <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 옵션을 설정하면,
     지원하지 않는 값을 &null;로 인코드 합니다.
    </para>
    <para>
     이 상수는 PHP 5.5.0부터 존재합니다.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  다음 상수는 <function>json_encode</function> 옵션으로 조합할 수 있습니다.
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-hex-tag">
   <term>
    <constant>JSON_HEX_TAG</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     모든 &lt;와 &gt;를 \u003C와 \u003E로 변환합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-amp">
   <term>
    <constant>JSON_HEX_AMP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     모든 &amp;를 \u0026으로 변환합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-apos">
   <term>
    <constant>JSON_HEX_APOS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     모든 '를 \u0027로 변환합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-quot">
   <term>
    <constant>JSON_HEX_QUOT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     모든 "를 \u0022로 변환합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-force-object">
   <term>
    <constant>JSON_FORCE_OBJECT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     연관 배열이 아닐 경우에도 배열 대신 객체로 출력합니다.
     객체 출력이 필요하지만, 배열이 비어 있을 경우에 유용합니다.
     PHP 5.3.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-numeric-check">
   <term>
    <constant>JSON_NUMERIC_CHECK</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     수치 문자열을 수로 인코드합니다.
     PHP 5.3.3부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-bigint-as-string">
   <term>
    <constant>JSON_BIGINT_AS_STRING</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     큰 정수를 원 문자열 값으로 인코드합니다.
     PHP 5.4.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-pretty-print">
   <term>
    <constant>JSON_PRETTY_PRINT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     반환하는 데이터를 형식화하기 위하여 공백을 사용합니다.
     PHP 5.4.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-slashes">
   <term>
    <constant>JSON_UNESCAPED_SLASHES</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <literal>/</literal>를 회피하지 않습니다.
     PHP 5.4.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-unicode">
   <term>
    <constant>JSON_UNESCAPED_UNICODE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     멀티바이트 유니코드 문자를 그대로 인코드합니다. (기본값은 \uXXXX로 회피합니다)
     PHP 5.4.0부터 존재합니다.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
