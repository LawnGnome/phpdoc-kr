<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/misc.xml, last change in rev 1.1 -->
<!-- last change to 'eval' in en/ tree in rev 1.58 -->
  <refentry id="function.eval">
   <refnamediv>
    <refname>eval</refname>
    <refpurpose>Evaluate a string as PHP code</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>eval</methodname>
      <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>eval</function> evaluates the string given in
     <parameter>code_str</parameter> as PHP code. Among other things,
     this can be useful for storing code in a database text field for
     later execution.
    </simpara>
    <simpara>
     There are some factors to keep in mind when using
     <function>eval</function>. Remember that the string passed must
     be valid PHP code, including things like terminating statements
     with a semicolon so the parser doesn't die on the line after the
     <function>eval</function>, and properly escaping things in
     <parameter>code_str</parameter>.
    </simpara> 
    <simpara>
     Also remember that variables given values under
     <function>eval</function> will retain these values in the main
     script afterwards.
    </simpara>
    <simpara>
     A <literal>return</literal> statement will terminate the evaluation of 
     the string immediatley. In PHP 4 you may use <literal>return</literal>
     to return a value that will become the result of the 
     <function>eval</function> function while in PHP 3 
     <function>eval</function> was of type <literal>void</literal> and did 
     never return anything.
    </simpara>
    <para>
     <example>
      <title>
       <function>eval</function> example - simple text merge
      </title>
      <programlisting role="php">
&lt;?php
$string = 'cup';
$name = 'coffee';
$str = 'This is a $string with my $name in it.&lt;br&gt;';
echo $str;
eval ("\$str = \"$str\";");
echo $str;
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     The above example will show:
     <programlisting>
This is a $string with my $name in it.
This is a cup with my coffee in it.
     </programlisting>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
