<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/sybase.xml, last change in rev 1.3 -->
<!-- last change to 'sybase-result' in en/ tree in rev 1.2 -->
	<refentry id="function.sybase-result">
		<refnamediv>
			<refname>sybase_result</refname>
			<refpurpose>결과 데이타를 추출한다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>Description</title>
				<methodsynopsis>
					<type>string</type><methodname>sybase_result</methodname>
					<methodparam><type>int</type><parameter>result</parameter></methodparam>
					<methodparam><type>int</type><parameter>row</parameter></methodparam>
					<methodparam><type>mixed</type><parameter>field</parameter></methodparam>
				</methodsynopsis>
			<para>     
    result 인수에 의한 특정 결과 셋에서 row 와 field 인수의 의해 정해진 특정한 하나의 셀의 내용을 반환한다.
    </para>
			<para>
     sybase_result() 함수는 Sybase 결과 셋에서 한셀의 내용을 반환한다.
     field 인수는 필드의 offset(위치값) 또는 필드의 이름이거나, 필드의 테이블 점 필드의 이름의 형태(tablename.fieldname) 이다.
     만약 컬럼 이름이 alias된다면 ('select foo as bar from...')형식으로 컬럼 이름 대신에 alias된 이름을 사용한다.
    </para>
			<para>
     결과 셋의 크기가 클 경우, 한번 의 호출로 대용량의 데이타를 추출할수 있는 함수들을 사용하는 것을 고려해 보는
것이 좋을 것이다.  그 함수들은 sybase_result()합수보다 많이 빠르다.  또한  field 인수로 필드 이름이나 테이블이름.필드이름의 형태를 사용하는 것보다
숫자 offset(위치)값을 사용하는 것이 속도가 더 빠르다.
    </para>
			<para>
     한꺼번에 대용량의 데이타를 추출할경우 다음의 함수를 추천한다.:
     <function>sybase_fetch_row</function>, 
     <function>sybase_fetch_array</function>,
     <function>sybase_fetch_object</function>.
    </para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
