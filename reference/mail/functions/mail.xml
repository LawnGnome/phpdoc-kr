<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/mail.xml, last change in rev 1.1 -->
<!-- last change to 'mail' in en/ tree in rev 1.2 -->
  <refentry id="function.mail">
   <refnamediv>
    <refname>mail</refname>
    <refpurpose>send mail</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>mail</methodname>
      <methodparam><type>string</type><parameter>to</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam><type>string</type><parameter>message</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>additional_headers
       </parameter></methodparam>
     </methodsynopsis>
    <simpara>
      <function>mail</function> automatically mails the message specified
      in <parameter>message</parameter> to the receiver specified in
      <parameter>to</parameter>. Multiple recipients can be specified by
      putting a comma between each address in <parameter>to</parameter>.
    </simpara>
    <para>
     <example>
      <title>Sending mail.</title>
      <programlisting>
mail("rasmus@lerdorf.on.ca", "My Subject", "Line 1\nLine 2\nLine 3");
      </programlisting>
     </example></para>
    <simpara>
     If a fourth string argument is passed, this string is inserted at
     the end of the header.  This is typically used to add extra
     headers.  Multiple extra headers are separated with a newline.</simpara>
    <para>
     <example>
      <title>Sending mail with extra headers.</title>
      <programlisting>
mail("nobody@aol.com", "the subject", $message,
     "From: webmaster@$SERVER_NAME\nReply-To: webmaster@$SERVER_NAME\nX-Mailer: PHP/" . phpversion());
      </programlisting>
     </example>
     You can also use fairly simple string building techniques to
     build complex email messages.
     <example>
      <title>Sending complex email.</title>
      <programlisting>
/* recipients */
$recipient .= "Mary &lt;mary@u.college.edu>" . ", " ; //note the comma
$recipient .= "Kelly &lt;kelly@u.college.edu> . ", ";
$recipient .= "ronabop@php.net";

/* subject */
$subject = "Birthday Reminders for August";

/* message */
$message .= "The following email includes a formatted ASCII table\n";
$message .= "Day \t\tMonth \t\tYear\n";
$message .= "3rd \t\tAug \t\t1970\n";
$message .= "17rd\t\tAug \t\t1973\n";

/* you can add a stock signature */ 
$message .= "--\r\n"; //Signature delimiter
$message .= "Birthday reminder copylefted by public domain";

/* additional header pieces for errors, From cc's, bcc's, etc */

$headers .= "From: Birthday Reminder &lt;birthday@php.net>\n";
$headers .= "X-Sender: &lt;birthday@php.net>\n"; 
$headers .= "X-Mailer: PHP\n"; // mailer
$headers .= "X-Priority: 1\n"; // Urgent message!
$headers .= "Return-Path: &lt;birthday@php.net>\n";  // Return path for errors

/* If you want to send html mail, uncomment the following line */
// $headers .= "Content-Type: text/html; charset=iso-8859-1\n"; // Mime type

$headers .= "cc:birthdayarchive@php.net\n"; // CC to
$headers .= "bcc:birthdaycheck@php.net, birthdaygifts@php.net\n"; // BCCs to

/* and now mail it */
mail($recipient, $subject, $message, $headers);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
