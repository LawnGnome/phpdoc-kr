<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 283831 Maintainer: progcom Status: ready -->
<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.pdo-pgsqllobcreate" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::pgsqlLOBCreate</refname>
  <refpurpose>새 라지 오브젝트를 생성합니다</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>PDO::pgsqlLOBCreate</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>PDO::pgsqlLOBCreate</function>는 라지 오브젝트를 만들고 해당
   오브젝트의 OID를 반환합니다. <function>PDO::pgsqlLOBOpen</function>으로
   해당 오브젝트에 스트림을 열어서 읽고 쓰기를 할 수 있습니다. OID는 OID
   형식의 컬럼에 저장하여, 열이 마음대로 늘어나는 일이 없도록 참조하여
   사용할 수 있습니다. 라지 오브젝트는
   <function>PDO::pgsqlLOBUnlink</function>를 호출하여 제거할 때 까지 계속해서
   데이터베이스에 존재합니다.
  </para>
  <para>
   라지 오브젝트는 2GB 크기까지 사용할 수 있지만, 사용하기 편하지 않습니다;
   <function>PDO::pgsqlLOBUnlink</function>를 제대로 호출한 후 데이터베이스에서
   해당 OID를 참조하는 줄을 삭제해야 합니다. 추가로, 라지 오브젝트는
   접근 제어가 없습니다. bytea 컬럼형으로 대체할 수 있습니다; PostgreSQL 최근
   버전에선 bytea 컬럼을 1GB까지 사용할 수 있고, 스토리지를 적절한 행 크기로
   관리합니다.
  </para>
  <note>
   <simpara>
    이 함수는 트랙젝션 안에서 호출해야 합니다.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <function>PDO::pgsqlLOBCreate</function>는 인수가 없습니다.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   성공시엔 새로 만들어진 라지 오브젝트의 OID, 실패시엔 &false;를 반환합니다.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>PDO::pgsqlLOBCreate</function> 예제</title>
    <para>
     이 예제는 새 라지 오브젝트를 만들고 파일 내용을 복사해 넣습니다. 그리고
     OID는 테이블에 저장합니다.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$db = new PDO('pgsql:dbname=test host=localhost', $user, $pass);
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->beginTransaction();
$oid = $db->pgsqlLOBCreate();
$stream = $db->pgsqlLOBOpen($oid, 'w');
$local = fopen($filename, 'rb');
stream_copy_to_stream($local, $stream);
$local = null;
$stream = null;
$stmt = $db->prepare("INSERT INTO BLOBS (ident, oid) VALUES (?, ?)");
$stmt->execute(array($some_id, $oid));
$db->commit();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::pgsqlLOBOpen</function></member>
    <member><function>PDO::pgsqlLOBUnlink</function></member>
    <member><function>pg_lo_create</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
