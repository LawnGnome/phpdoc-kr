<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.7 -->
  <refentry id="function.preg-match">
   <refnamediv>
    <refname>preg_match</refname>
    <refpurpose>정규표현식 매치를 합니다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>int</type><methodname>preg_match</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>matches</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>pattern</parameter>에 주어진 정규표현식을
     <parameter>subject</parameter>에서 찾습니다.
    </para>
    <para>
     <parameter>matches</parameter>가 주어지면, 검색 결과를 채워넣습니다.
     <varname>$matches[0]</varname>는 전체 패턴 텍스트가 들어가고,
     <varname>$matches[1]</varname>부터 괄호로 둘러싸인 서브 패턴을
     채워넣습니다.
    </para>
    <para>
     <parameter>flags</parameter>는 다음과 같은 플래그를 사용할 수 있습니다:
     <variablelist>
      <varlistentry>
       <term>PREG_OFFSET_CAPTURE</term>
       <listitem>
        <simpara>
         이 플래그를 설정하면, for every occuring match the appendant string
         offset will also be returned. Note that this changes the return value
         in an array where every element is an array consisting of the matched
         string at offset <literal>0</literal> and it's string offset into
         <parameter>subject</parameter> at offset <literal>1</literal>.
         이 플래그는 <literal>PHP</literal> 4.3.0부터 사용할 수 있습니다.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     <parameter>flags</parameter> 인자는 <literal>PHP</literal> 4.3.0부터
     사용할 수 있습니다.
    </para>

    <para>
     <function>preg_match</function>는 <parameter>pattern</parameter>이
     매치된 횟수를 반환합니다. 이는 0(매치 없음)이나 1입니다.
     <function>preg_match</function>는 처음 매치 후에 검색을 중지하기
     때문입니다. 대조적으로, <function>preg_match_all</function>는
     <parameter>subject</parameter>의 끝까지 계속해서 실행합니다.
     에러가 발생하면, <function>preg_match</function>는 &false;를 반환합니다.
    </para>
    <tip>
     <para>
      단순히 하나의 문자열이 다른 문자열에 들어있는지를 확인하고 싶을때는
      <function>preg_match</function>를 사용하지 마십시오. 대신,
      <function>strpos</function>나 <function>strstr</function>를 사용하는
      편이 더욱 빠릅니다.
     </para>
    </tip>
    <para>
     <example>
      <title>문자열 "php" 찾기</title>
      <programlisting role="php">
<![CDATA[
<?php
// 패턴 구분자 뒤의 "i"는 대소문자를 구별하지 않게 합니다.
if (preg_match ("/php/i", "PHP is the web scripting language of choice.")) {
    print "발견하였습니다.";
} else {
    print "발견하지 못했습니다.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>단어 "Web" 찾기</title>
      <programlisting role="php">
<![CDATA[
<?php
/* 패턴에서 \b는 단어를 지시합니다. 단어 "web"만 매치하고,
 * "webbing"이나 "cobweb" 등의 부분적인 경우에는 매치하지 않습니다. */
if (preg_match ("/\bweb\b/i", "PHP is the web scripting language of choice.")) {
    print "발견하였습니다.";
} else {
    print "발견하지 못했습니다.";
}

if (preg_match ("/\bweb\b/i", "PHP is the website scripting language of choice.")) {
    print "발견하였습니다.";
} else {
    print "발견하지 못했습니다.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>URL에서 도메인 이름 얻기</title>
      <programlisting role="php">
<![CDATA[
<?php
// URL에서 호스트 이름 얻기
preg_match("/^(http:\/\/)?([^\/]+)/i",
    "http://www.php.net/index.html", $matches);
$host = $matches[2];

// 호스트 이름에서 마지막 두 세그멘트 얻기
preg_match("/[^\.\/]+\.[^\.\/]+$/", $host, $matches);
echo "도메인 이름은: {$matches[0]}\n";
?>
]]>
      </programlisting>
      <para>
       이 예제의 결과:
      </para>
      <screen>
<![CDATA[
도메인 이름은: php.net
]]>
      </screen>
     </example>
    </para>
    <para>
     참고: <function>preg_match_all</function>, 
     <function>preg_replace</function>,
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
