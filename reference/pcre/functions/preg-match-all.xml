<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.7 Maintainer: progcom Status: partial -->
  <refentry id="function.preg-match-all">
   <refnamediv>
    <refname>preg_match_all</refname>
    <refpurpose>전역 정규 표현식 매치를 수행합니다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
     <methodsynopsis>
      <type>int</type><methodname>preg_match_all</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam><type>array</type><parameter>matches</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>pattern</parameter>에 주어진 정규 표현식으로
     <parameter>subject</parameter>에서 모든 매치를 찾아내고,
     <parameter>flags</parameter>에 지정된 방법에 따라서
     <parameter>matches</parameter>에 넣습니다.
    </para>
    <para>
     처음 매치가 발견된 후, 이후 검색은 마지막 매치의 끝에서부터 이루어집니다.
    </para>
    <para>
     <parameter>flags</parameter>는 다음 플래그들을 조합할 수 있습니다
     (<constant>PREG_PATTERN_ORDER</constant>와 <constant>PREG_SET_ORDER</constant>를
     동시에 사용하지 마십시오):
     <variablelist>
      <varlistentry>
       <term>PREG_PATTERN_ORDER</term>
       <listitem>
        <para>
         $matches[0] 배열이 전체 패턴을 가지고, $matches[1] 배열부터 괄호
         안의 서브 패턴을 가지도록 결과를 지정합니다.
        </para>
        <para>
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
preg_match_all ("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=left>this is a test</div>", 
    $out, PREG_PATTERN_ORDER);
print $out[0][0].", ".$out[0][1]."\n";
print $out[1][0].", ".$out[1][1]."\n";
?>
]]>
          </programlisting>
          <para>
           이 예제의 결과:
          </para>
          <screen role="html">
<![CDATA[
<b>example: </b>, <div align=left>this is a test</div>
example: , this is a test
]]>
          </screen>
          <para>
           $out[0]는 전체 패턴의 문자열 배열을 가지고,
           $out[1]은 태그 안의 문자열 배열을 가집니다.
          </para>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>PREG_SET_ORDER</term>
       <listitem>
        <para>
         $matchs[0]가 처음 매치의 배열을 가지도록 하고, $matches[1]가
         두번째 매치의 배열을 가지도록 결과를 지정합니다.
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
preg_match_all ("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=left>this is a test</div>", 
    $out, PREG_SET_ORDER);
print $out[0][0].", ".$out[0][1]."\n";
print $out[1][0].", ".$out[1][1]."\n";
?>
]]>
          </programlisting>
          <para>
           이 예제의 결과:
          </para>
          <screen role="html">
<![CDATA[
<b>example: </b>, example: 
<div align=left>this is a test</div>, this is a test
]]>
          </screen>
         </informalexample>
        </para>
        <para>
         이 경우에는, $matches[0]는 처음 매치의 집합으로, $matches[0][0]는
         전체 패턴을 가지고, $matches[0][1]부터 처음 서브 패턴을 가지게 됩니다.
         동일하게, $matches[1]는 두번째 매치의 집합입니다.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>PREG_OFFSET_CAPTURE</term>
       <listitem>
        <para>
         이 플래그를 지정하면, for every occuring match the appendant string
         offset will also be returned. Note that this changes the return
         value in an array where every element is an array consisting of the
         matched string at offset <literal>0</literal> and it's string offset
         into <parameter>subject</parameter> at offset <literal>1</literal>.
         이 플래그는 <literal>PHP</literal> 4.3.0부터 사용할 수 있습니다.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     플러그가 주어지지 않으면, <constant>PREG_PATTERN_ORDER</constant>로
     지정됩니다.
    </para>
    <para>
     전체 패턴이 매치된 횟수(0이 될 수 있음)나,
     에러 발생시에 &false;를 반환합니다.
    </para>
    <para>
     <example>
      <title>어떤 텍스트로부터 모든 전화번호 가져오기</title>
      <programlisting role="php">
<![CDATA[
<?php
preg_match_all ("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
                "Call 555-1212 or 1-800-555-1212", $phones);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>HTML 태그 찾기 (greedy)</title>
      <programlisting role="php">
<![CDATA[
<?php
// \\2는 역참조의 예제입니다. 이는 PCRE가 정규표현식 자체의
// 두번째 괄호를 가르키며, 이 경우에는 ([\w]+)입니다.
// 문자열이 더블 쿼터(")안에 있을 경우에는 백슬래쉬가 하나 더 필요합니다.
$html = "<b>bold text</b><a href=howdy.html>click me</a>";

preg_match_all ("/(<([\w]+)[^>]*>)(.*)(<\/\\2>)/", $html, $matches);

for ($i=0; $i< count($matches[0]); $i++) {
  echo "matched: ".$matches[0][$i]."\n";
  echo "part 1: ".$matches[1][$i]."\n";
  echo "part 2: ".$matches[3][$i]."\n";
  echo "part 3: ".$matches[4][$i]."\n\n";
}
?>
]]>
      </programlisting>
      <para>
       이 예제의 결과:
      </para>
      <screen role="html">
<![CDATA[
matched: <b>bold text</b>
part 1: <b>
part 2: bold text
part 3: </b>

matched: <a href=howdy.html>click me</a>
part 1: <a href=howdy.html>
part 2: click me
part 3: </a>
]]>
      </screen>
     </example>
    </para>
    <simpara>
     참고: <function>preg_match</function>,
     <function>preg_replace</function>,
     <function>preg_split</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
