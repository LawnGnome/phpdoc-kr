<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.26 Maintainer: progcom Status: ready -->
<refentry xml:id="function.preg-match-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_match_all</refname>
  <refpurpose>전역 정규 표현식 매치를 수행합니다</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>preg_match_all</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">matches</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>pattern</parameter>에 주어진 정규 표현식으로
   <parameter>subject</parameter>에서 모든 매치를 찾아내고,
   <parameter>flags</parameter>에 지정한 방법에 따라서
   <parameter>matches</parameter>에 넣습니다.
  </para>
  <para>
   처음 매치가 발견된 후, 이후 검색은 마지막 매치의 끝에서부터 이루어집니다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       탐색할 문자열 패턴.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       입력 문자열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>matches</parameter></term>
     <listitem>
      <para>
       모든 매치의 배열. <parameter>flags</parameter>에 따라서는, 다차원 배열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       다음 플래그들을 조합할 수 있습니다
       (<constant>PREG_PATTERN_ORDER</constant>와
       <constant>PREG_SET_ORDER</constant>를 동시에 사용할 수 없습니다):
       <variablelist>
        <varlistentry>
         <term><constant>PREG_PATTERN_ORDER</constant></term>
         <listitem>
          <para>
           $matches[0] 배열이 전체 패턴을 가지고, $matches[1] 배열부터 괄호 안의
           서브 패턴을 가지도록 결과를 지정합니다.
          </para>
          <para>
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>example: </b><div align=left>this is a test</div>",
    $out, PREG_PATTERN_ORDER);
echo $out[0][0].", ".$out[0][1]."\n";
echo $out[1][0].", ".$out[1][1]."\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>example: </b>, <div align=left>this is a test</div>
example: , this is a test
]]>
            </screen>
            <para>
             $out[0]는 전체 패턴의 문자열 배열을 가지고,
             $out[1]은 태그 안의 문자열 배열을 가집니다.
            </para>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SET_ORDER</constant></term>
         <listitem>
          <para>
           $matchs[0]가 처음 매치의 배열을 가지도록 하고, $matches[1]가
           두번째 매치의 배열을 가지도록 결과를 지정합니다.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>example: </b><div align=\"left\">this is a test</div>",
    $out, PREG_SET_ORDER);
echo $out[0][0].", ".$out[0][1]."\n";
echo $out[1][0].", ".$out[1][1]."\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>example: </b>, example: 
<div align="left">this is a test</div>, this is a test
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           이 플래그를 넘기면, 모든 발생한 매치와 함께 오프셋을 반환합니다.
           이는 배열에서 <parameter>matches</parameter>의 값을 변경하는 점에
           주의하십시오. 배열의 모든 원소는 매치한 문자열을
           <literal>0</literal> 오프셋에 가지고, 문자열 오프셋을
           <literal>1</literal> 오프셋에 가지게 됩니다.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       플래그가 주어지지 않으면, <constant>PREG_PATTERN_ORDER</constant>로
       취급합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       일반적으로, 주제 문자열의 처음부터 탐색을 시작합니다. 선택적인
       <parameter>offset</parameter> 인수로 탐색을 시작할 다른 위치를 지정할
       수 있습니다. (바이트 단위)
      </para>
      <note>
       <para>
        <parameter>offset</parameter>을 사용하는 것은
        <function>preg_match_all</function>의 주제 문자열로
        <literal>substr($subject, $offset)</literal>을 사용하는 것과는
        다릅니다. <parameter>pattern</parameter>로 <emphasis>^</emphasis>,
        <emphasis>$</emphasis>, <emphasis>(?&lt;=x)</emphasis> 등을 사용할 수
        있기 때문입니다. <function>preg_match</function>에서 예제를
        확인해 보십시오.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   전체 패턴이 매치된 횟수(0이 될 수 있음)나,
   에러 발생시에 &false;를 반환합니다.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.3</entry>
       <entry>
        <parameter>offset</parameter> 인수 추가
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <constant>PREG_OFFSET_CAPTURE</constant> 플래그 추가
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>어떤 텍스트로부터 모든 전화번호 가져오기</title>
    <programlisting role="php">
<![CDATA[
<?php
preg_match_all("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
               "Call 555-1212 or 1-800-555-1212", $phones);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>HTML 태그 찾기 (greedy)</title>
    <programlisting role="php">
<![CDATA[
<?php
// \\2는 역참조의 예제입니다. 이는 PCRE가 정규표현식 자체의
// 두번째 괄호를 가르키며, 이 경우에는 ([\w]+)입니다.
// 문자열이 더블 쿼터(")안에 있을 경우에는 백슬래시가 하나 더 필요합니다.
$html = "<b>bold text</b><a href=howdy.html>click me</a>";

preg_match_all("/(<([\w]+)[^>]*>)(.*)(<\/\\2>)/", $html, $matches);

foreach ($matches as $val) {
  echo "matched: " . $val[0] . "\n";
  echo "part 1: " . $val[1] . "\n";
  echo "part 2: " . $val[3] . "\n";
  echo "part 3: " . $val[4] . "\n\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
matched: <b>bold text</b>
part 1: <b>
part 2: bold text
part 3: </b>

matched: <a href=howdy.html>click me</a>
part 1: <a href=howdy.html>
part 2: click me
part 3: </a>
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>이름 있는 서브패턴 사용하기</title>
    <programlisting role="php">
<![CDATA[
<?php

$str = <<<FOO
a: 1
b: 2
c: 3
FOO;

preg_match_all('/(?<name>\w+): (?<digit>\d+)/', $str, $matches);

print_r($matches);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => a: 1
            [1] => b: 2
            [2] => c: 3
        )

    [name] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [1] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [digit] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

    [2] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_match</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_split</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
