<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/errorfunc.xml, last change in rev 1.1 -->
<!-- last change to 'error-reporting' in en/ tree in rev 1.1 -->
  <refentry id="function.error-reporting">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>set which PHP errors are reported</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>error_reporting</methodname>
      <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
     </methodsynopsis>
    <para>
     Sets PHP's error reporting level and returns the old level.  The
     error reporting level is either a bitmask, or named constant. Using
     named constants is strongly encouraged to ensure compatibility for
     future versions. As error levels are added, the range of integers
     increases, so older integer-based error levels will not always
     behave as expected.
     <example role="php">
      <title>Error Integer changes</title>
      <programlisting role="php">
error_reporting (55);   // PHP 3 equivalent to E_ALL ^ E_NOTICE

/* ...in PHP 4, '55' would mean (E_ERROR | E_WARNING | E_PARSE |
E_CORE_ERROR | E_CORE_WARNING) */

error_reporting (2039); // PHP 4 equivalent to E_ALL ^ E_NOTICE

error_reporting (E_ALL ^ E_NOTICE); // The same in both PHP 3 and 4
      </programlisting>
     </example>
     Follow the links for the internal values to get their meanings:
     <table>
      <title><function>error_reporting</function> bit values</title>
      <tgroup cols="2">
       <thead>
	<row>
	 <entry>constant</entry>
	 <entry>value</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>1</entry>
	 <entry>
	  <link linkend="internal.e-error">E_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>
	  <link linkend="internal.e-warning">E_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>
	  <link linkend="internal.e-parse">E_PARSE</link>
	 </entry>
	</row>
	<row>
	 <entry>8</entry>
	 <entry>
	  <link linkend="internal.e-notice">E_NOTICE</link>
	 </entry>
	</row>
	<row>
	 <entry>16</entry>
	 <entry>
	  <link linkend="internal.e-core-error">E_CORE_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>32</entry>
	 <entry>
	  <link linkend="internal.e-core-warning">E_CORE_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>64</entry>
	 <entry>
	  <link linkend="internal.e-compile-error">E_COMPILE_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>128</entry>
	 <entry>
	  <link linkend="internal.e-compile-warning">E_COMPILE_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>256</entry>
	 <entry>
	  <link linkend="internal.e-user-error">E_USER_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>512</entry>
	 <entry>
	  <link linkend="internal.e-user-warning">E_USER_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>1024</entry>
	 <entry>
	  <link linkend="internal.e-user-error">E_USER_NOTICE</link>
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example role="php">
      <title><function>error_reporting</function> examples</title>
      <programlisting role="php">
error_reporting(0);
/* Turn off all reporting */

error_reporting (7); // Old syntax, PHP 2/3
error_reporting  (E_ERROR | E_WARNING | E_PARSE); // New syntax for PHP 3/4
/* Good to use for simple running errors  */

error_reporting  (15); // Old syntax, PHP 2/3
error_reporting (E_ERROR | E_WARNING | E_PARSE | E_NOTICE); // New syntax for PHP 3/4
/*  good for code authoring to report uninitialized or (possibly mis-spelled) variables */

error_reporting (63); // Old syntax, PHP 2/3
error_reporting (E_ALL); // New syntax for PHP 3/4
/* report all PHP errors */
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
