<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./kr/functions/zlib.xml, last change in rev 1.2 -->
<!-- last change to 'gzseek' in en/ tree in rev 1.2 -->
	<refentry id="function.gzseek">
		<refnamediv>
			<refname>gzseek</refname>
			<refpurpose>지정된 .gz 파일을 검색한다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>Description</title>
				<methodsynopsis>
					<type>int</type><methodname>gzseek</methodname>
					<methodparam><type>int</type><parameter>zp</parameter></methodparam>
					<methodparam><type>int</type><parameter>offset</parameter></methodparam>
				</methodsynopsis>
			<para>
     파일 스트림 내부에서 zp참조로 지정된 파일 포지션을 offset으로 이동한다. C에서 <literal>gzseek( zp, offset, SEEK_SET )</literal>의 호출과 동일하다.
    </para>
			<para>
     만약 파일이 읽기속성으로 열린 경우, 이 함수는 에뮬레이트 될 수 있지만 매우 느릴수도 있다. 만일 쓰기 속성으로 열린경우에는, 오직 순차검색만을 지원한다.
:gzseek는 새 시작위치까지 0의 연속으로 압축한다.(이상해서 원문을 포함합니다.) 원문:If the file is opened for reading, this function is emulated but
     can be extremely slow. If the file is opened for writing, only
     forward seeks are supported; gzseek then compresses a sequence of
     zeroes up to the new starting position.
    </para>
			<para>
     성공할 경우 0을 반환하고; 그렇지 않은 경우 -1을 반환한다. EOF를 지나는 검색은 error을 고려하지 않는다.
    </para>
			<para>
     참고 <function>gztell</function>, <function>gzrewind</function>.
    </para>
		</refsect1>
	</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
