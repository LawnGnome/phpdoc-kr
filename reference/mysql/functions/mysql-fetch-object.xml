<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.14 Maintainer: pcraft Status: ok -->
<refentry id="function.mysql-fetch-object">
 <refnamediv>
  <refname>mysql_fetch_object</refname>
  <refpurpose>객체형으로 결과 행을 인출</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mysql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
내부 데이터 포인터 바로 앞으로 이동하여 인출된 행으로부터 속성을 가진 객체로 반환한다.  
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
속성을 가진 <type>object</type>로 반환하거나, 더 이상의 행이 없을 때에는 &false;를 반환한다.
  </para>
  <para>
<function>mysql_fetch_row</function>는 지정된 result identifier와 연관된 결과로부터
한 행의 데이터를 인출하여 배열로 반환한다.
각 결과 컬럼은 0부터 시작하고 저장된다.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_fetch_object</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
mysql_connect("hostname", "user", "password");
mysql_select_db("mydb");
$result = mysql_query("select * from mytable");
while ($row = mysql_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}
mysql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_fetch_object</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php

$row = mysql_fetch_object($result);

/* this is valid */
echo $row->field;
/* this is invalid */
// echo $row->0;

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>성능</title>
   <para>
<function>mysql_fetch_array</function>와 
<function>mysql_fetch_row</function>의 성능은 거의 동일하게 빠르다(차이점을 못느낄 정도로).
   </para>
  </note>
  <note>
   <para>
<function>mysql_fetch_object</function>는    
배열 대신 객체를 반환하는 한 가지 차이점을 제외하고는
<function>mysql_fetch_array</function>와 비슷하다.
즉, 오프셋(offset)을 이용하는 것이 아닌 필드 이름에 의해
데이터를 접근할 수 있다(숫자를 사용하면 잘못된 속성 이름이 된다).
   </para>
  </note>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_fetch_array</function></member>
    <member><function>mysql_fetch_assoc</function></member>
    <member><function>mysql_fetch_row</function></member>
    <member><function>mysql_data_seek</function></member>
    <member><function>mysql_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
