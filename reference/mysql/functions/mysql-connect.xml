<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.24 Maintainer: progcom Status: ready -->
<!-- CREDITS: pcraft -->
<refentry xml:id="function.mysql-connect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_connect</refname>
  <refpurpose>MySQL 서버에 접속</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>mysql_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>server</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>new_link</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>client_flags</parameter></methodparam>
  </methodsynopsis>
  <para>
MySQL 서버에 접속을 생성하거나 기존 접속을 재사용한다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>server</parameter></term>
     <listitem>
      <para>
MySQL 서버명을 입력하며, 포트번호가 포함될 수 있다.
예) "hostname:port"
또는, 로컬호스트를 위해 로컬 소켓 경로가 될 수도 있다.
예) ":/path/to/socket"
      </para>
      <para>
       PHP 지시어 <link
        linkend="ini.mysql.default-host">mysql.default_host</link>를 지정하지
       않았다면(기본값), 'localhost:3306'입니다. &sqlsafemode;에서는, 이
       인수를 무시하고 항상 'localhost:3306' 값을 사용합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       사용자명. 기본값은 <link
        linkend="ini.mysql.default-user">mysql.default_user</link>로
       지정합니다. &sqlsafemode;에서는, 이 인수를 무시하고 사용중인 서버
       프로세스를 소유하는 사용자 이름을 사용합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       비밀번호. 기본값은 <link
        linkend="ini.mysql.default-password">mysql.default_password</link>로
       지정합니다. &sqlsafemode;에서는, 이 인수를 무시하고 빈 비밀번호를
       사용합니다.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term><parameter>new_link</parameter></term>
     <listitem>
      <para>
동일한 인수로 <function>mysql_connect</function>을 다시 호출하면,
새로운 link가 생성되는 것이 아니라, 이미 생성된 link 식별자 값을
돌려받게 된다.
단, <parameter>new_link</parameter>로 <function>mysql_connect</function>를
호출하면 동일한 인수로 <function>mysql_connect</function>를 이미 호출하였다 하더라도
항상 새로운 접속을 생성한다.
       &sqlsafemode;에서는, 이 인수를 무시합니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>client_flags</parameter></term>
     <listitem>
      <para>
       <parameter>client_flags</parameter> 인수는 다음 상수들을 조합하여
       사용할 수 있습니다:
       128 (<literal>LOAD DATA LOCAL</literal> 핸들링 활성화),
       <constant>MYSQL_CLIENT_SSL</constant>,
       <constant>MYSQL_CLIENT_COMPRESS</constant>, 
       <constant>MYSQL_CLIENT_IGNORE_SPACE</constant>,
       <constant>MYSQL_CLIENT_INTERACTIVE</constant>.
       자세한 정보는 <xref linkend="mysql.client-flags" />를 읽어보십시오.
       &sqlsafemode;에서는, 이 인수를 무시합니다.
      </para>
     </listitem>
    </varlistentry> 
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
접속 성공시 MySQL link 식별자를 반환하고, 실패시에는 &false;를 반환한다.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
<parameter>client_flags</parameter>가 추가되었다.
       </entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry>
<parameter>new_link</parameter>가 추가되었다.
       </entry>
      </row>
      <row>
       <entry>3.0.10</entry>
       <entry>
<parameter>server</parameter>에 ":/path/to/socket" 를 사용할 수 있게 되었다.
       </entry>
      </row>
      <row>
       <entry>3.0.0</entry>
       <entry>
<parameter>server</parameter>에 ":port" 를 사용 가능하게 되었다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_connect</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><literal>hostname:port</literal> 문법을 사용한 <function>mysql_connect</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
// we connect to example.com and port 3307
$link = mysql_connect('example.com:3307', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully';
mysql_close($link);

// we connect to localhost at port 3307
$link = mysql_connect('127.0.0.1:3307', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>":/path/to/socket" 문법을 사용한 <function>mysql_connect</function> 예제</title>
    <programlisting role="php">
<![CDATA[
<?php
// we connect to localhost and socket e.g. /tmp/mysql.sock

//variant 1: ommit localhost
$link = mysql_connect(':/tmp/mysql', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully';
mysql_close($link);


// variant 2: with localhost
$link = mysql_connect('localhost:/tmp/mysql.sock', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
서버에서는 &quot;localhost&quot; 및 &quot;localhost:port&quot;를 사용할 때마다 
로컬 소켓(윈도우즈에서는 named pipe)으로 접속을 시도한다.
TCP/IP를 이용하려면 &quot;localhost&quot; 대신 &quot;127.0.0.1&quot;를
사용하면 된다.
MySQL 클라이언트 라이브러리가 로컬 소켓으로 잘못된 접속을 시도한다면,
PHP 환경설정에 있는 <xref linkend="ini.mysql.default-host" /> 항목에 경로를 수정하고,
server에 빈 값으로 호출해야 한다.
   </para>
  </note>
  <note>
   <para>
서버로 접속은 <function>mysql_close</function>을 명시적으로 호출하여 종료하지 않더라도
스크립트가 종료되는 순간 종료될 것이다.
   </para>
  </note>
  <note>
   <para>
    함수 이름 앞에 <link linkend="language.operators.errorcontrol">@</link>를
    이용하여 접속 실패 에러 메시지를 출력되지 않도록 할 수 있다.
   </para>
  </note>
  <note>
   <para>
    "Can't create TCP/IP socket (10106)" 오류는 보통 <link
     linkend="ini.variables-order">variables_order</link> 설정 지시어에
    <literal>E</literal>가 없을 때 발생합니다. 윈도우에서
    <literal>SYSTEMROOT</literal> 환경 변수를 복사할 수 없다면, PHP에서
    Winsock을 로딩할 수 없을 수 있습니다.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_pconnect</function></member>
    <member><function>mysql_close</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
