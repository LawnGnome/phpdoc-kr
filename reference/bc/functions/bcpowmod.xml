<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 297028 Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
<refentry xml:id="function.bcpowmod" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bcpowmod</refname>
  <refpurpose>임의 정밀도 수를 거듭제곱하고, 지정한 제수로 나머지를 구합니다</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>bcpowmod</methodname>
   <methodparam><type>string</type><parameter>left_operand</parameter></methodparam>
   <methodparam><type>string</type><parameter>right_operand</parameter></methodparam>
   <methodparam><type>string</type><parameter>modulus</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scale</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>left_operand</parameter>의
   <parameter>right_operand</parameter>승에 대한
   <parameter>modulus</parameter>의 나머지를 구하기 위한 빠른 누승법을
   사용합니다.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>left_operand</parameter></term>
     <listitem>
      <para>
       왼쪽 연산수, 문자열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>right_operand</parameter></term>
     <listitem>
      <para>
       오른쪽 연산수, 문자열.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>modulus</parameter></term>
     <listitem>
      <para>
       제수, 문자열.
      </para>
     </listitem>
    </varlistentry>
    &bc.scale.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   결과를 문자열로 반환하거나, <parameter>modulus</parameter>가 0이면 &null;을
   반환합니다.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    이 방법은 나머지 연산을 사용하기에, 자연수가 아닌 수는 예측할 수 없는
    결과를 가져옵니다. 자연수는 0이 아닌 양의 정수입니다.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   다음 두 구문은 기능상 동일합니다. 
   그러나 <function>bcpowmod</function> 버전이 짧은 시간에 수행되고
   더 큰 인수를 허용합니다.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = bcpowmod($x, $y, $mod);

$b = bcmod(bcpow($x, $y), $mod);

// $a와 $b는 동일합니다.

?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>bcpow</function></member>
    <member><function>bcmod</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
