<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.ncurses">
  <title>Ncurses terminal screen control functions</title>
  <titleabbrev>ncurses functions</titleabbrev>
  
  <partintro>
   <para>
   ncurses (new curses) is a free software emulation of curses in
   System V Rel 4.0 (and above). It uses terminfo format, supports pads, colors, multiple
   highlights, form characters and function key mapping.
   </para>
   <para>
    To get these functions to work, you have to compile the CGI
    version of PHP with <option
    role="configure">--with-ncurses</option>.
    That requires the ncurses library to be installed. Download the
    latest version from <ulink
    url="&url.ncurses;">&url.ncurses;</ulink>,
    compile and install it.
   </para>
  </partintro>
  
  
  <refentry id="function.ncurses-can-change-color">
   <refnamediv>
    <refname>ncurses_can_change_color</refname>
    <refpurpose>Check if we can change terminals colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_can_change_color</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     The function <function>ncurses_can_change_color</function> returns 
     &true; or &false;, depending on whether the terminal has color
     capabilities and whether the programmer can change the colors.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.ncurses-cbreak">
   <refnamediv>
    <refname>ncurses_cbreak</refname>
    <refpurpose>Switch of input buffering </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_cbreak</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_cbreak</function> disables line buffering and
    character processing (interrupt and flow control characters are
    unaffected), making characters typed by the user immediately
    available to the program.
    </para>
    <para>
    <function>ncurses_cbreak</function> returns &true; if any error
    occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_nocbreak</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clear">
   <refnamediv>
    <refname>ncurses_clear</refname>
    <refpurpose>Clear screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_clear</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_clear</function> clears the screen completely
    without setting blanks. Returns &false; on success, otherwise &true;.     
    </para>
    <para>
    Note: <function>ncurses_clear</function> clears the screen without
    setting blanks, which have the current background rendition. To
    clear screen with blanks, use <function>ncurses_erase</function>.
    </para>
    <para>
    See also: <function>ncurses_erase</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clrtobot">
   <refnamediv>
    <refname>ncurses_clrtobot</refname>
    <refpurpose>Clear screen from current position to bottom </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_clrtobot</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_clrtobot</function> erases all lines from cursor
    to end of screen and creates blanks. Blanks created by 
    <function>ncurses_clrtobot</function> have the current background
    rendition. Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_clear</function>, 
    <function>ncurses_clrtoeol</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clrtoeol">
   <refnamediv>
    <refname>ncurses_clrtoeol</refname>
    <refpurpose>Clear screen from current position to end of line </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_clrtoeol</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_clrtoeol</function> erases the current line from
    cursor position to the end. Blanks created by 
    <function>ncurses_clrtoeol</function> have the current background
    rendition. Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_clear</function>, 
    <function>ncurses_clrtobot</function>
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-def-prog-mode">
   <refnamediv>
    <refname>ncurses_def_prog_mode</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_def_prog_mode</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_def_prog_mode</function> saves the current
    terminal modes for program (in curses) for use by
    <function>ncurses_reset_prog_mode</function>. Returns &false; on
    success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_reset_prog_mode</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-def-shell-mode">
   <refnamediv>
    <refname>ncurses_def_shell_mode</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_def_shell_mode</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_def_shell_mode</function> saves the current
    terminal modes for shell (not in curses) for use by
    <function>ncurses_reset_shell_mode</function>. Returns &false; on
    success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_reset_shell_mode</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delch">
   <refnamediv>
    <refname>ncurses_delch</refname>
    <refpurpose>Delete character at current position, move rest of line left </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_delch</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_delch</function> deletes the character under
     the cursor. All characters to the right of the cursor on the same
     line are moved to the left one position and the last character on
     the line is filled with a blank. The cursor position does
     not change. Returns &false; on success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_deleteln</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-deleteln">
   <refnamediv>
    <refname>ncurses_deleteln</refname>
    <refpurpose>Delete line at current position, move rest of screen up </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_deleteln</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_deleteln</function> deletes the current line under
    cursorposition. All lines below the current line are moved up one
    line.
    The bottom line of window is cleared. Cursor position does not
    change.
    Returns &false; on success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_delch</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-doupdate">
   <refnamediv>
    <refname>ncurses_doupdate</refname>
    <refpurpose>Write all prepared refreshes to terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_doupdate</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_doupdate()</function> compares the virtual screen to the
    physical screen and updates the physical screen. This way is more
    effective than using multiple refresh calls.
    Returns &false; on success, &true; if any error occured. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-echo">
   <refnamediv>
    <refname>ncurses_echo</refname>
    <refpurpose>Activate keyboard input echo </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_echo</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_echo</function> enables echo mode.
    All characters typed by user are echoed by
    <function>ncurses_getch</function>.
    Returns &false; on success, &true; if any error occured. 
    </para>
    <para>
    To disable echo mode use <function>ncurses_noecho</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-erase">
   <refnamediv>
    <refname>ncurses_erase</refname>
    <refpurpose>Erase terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_erase</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_erase</function> fills the terminal screen with
     blanks. Created blanks have the current background rendition, set
     by <function>ncurses_bkgd</function>.
     Returns &false; on success, &true; if any error occured.
    </para>
    <para>
    See also: <function>ncurses_bkgd</function>,
    <function>ncurses_clear</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-erasechar">
   <refnamediv>
    <refname>ncurses_erasechar</refname>
    <refpurpose>Returns current erase character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>ncurses_erasechar</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_erasechar</function> returns the current erase
     char character.
    </para>
    <para>
    See also: <function>ncurses_killchar</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-flash">
   <refnamediv>
    <refname>ncurses_flash</refname>
    <refpurpose>Flash terminal screen (visual bell) </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_flash</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_flash</function> flashes the screen, and if
     its not possible, sends an audible alert (bell).
     Returns &false; on success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_beep</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-flushinp">
   <refnamediv>
    <refname>ncurses_flushinp</refname>
    <refpurpose>Flush keyboard input buffer </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_flushinp</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     The <function>ncurses_flushinp</function> throws away any
     typeahead that has been typed and has not yet been read by your
     program.
     Returns &false; on success, otherwise &true;. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-colors">
   <refnamediv>
    <refname>ncurses_has_colors</refname>
    <refpurpose>Check if terminal has colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_has_colors</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_has_colors</function> returns &true; or &false;
     depending on whether the terminal has color capacitites.
    </para>
    <para>
    See also: <function>ncurses_can_change_color</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-ic">
   <refnamediv>
    <refname>ncurses_has_ic</refname>
    <refpurpose>Check for insert- and delete-capabilities </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_has_ic</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_has_ic</function> checks terminals insert- and
     delete capabilitites. It returns &true; when terminal has
     insert/delete-capabilities, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_has_il</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-il">
   <refnamediv>
    <refname>ncurses_has_il</refname>
    <refpurpose>Check for line insert- and delete-capabilities </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_has_il</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_has_il</function> checks terminals insert- and
     delete-line-capabilities. It returns &true; when terminal has
     insert/delete-line capabilities, otherwise &false;
    </para>
    <para>
    See also: <function>ncurses_has_ic</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-inch">
   <refnamediv>
    <refname>ncurses_inch</refname>
    <refpurpose>Get character and attribute at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>ncurses_inch</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_inch</function> returns the character from the
     current position.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insertln">
   <refnamediv>
    <refname>ncurses_insertln</refname>
    <refpurpose>Insert a line, move rest of screen down </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_insertln</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_insertln</function> inserts a new line above
     the current line. The bottom line will be lost.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-isendwin">
   <refnamediv>
    <refname>ncurses_isendwin</refname>
    <refpurpose>Ncurses is in endwin mode, normal screen output may be performed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_isendwin</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
    <function>ncurses_isendwin</function> returns &true;, if
    <function>ncurses_endwin</function> has been called without any
    subsequent calls to <function>ncurses_wrefresh</function>, 
    otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_endwin</function>
              <function>ncurses_wrefresh()</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-killchar">
   <refnamediv>
    <refname>ncurses_killchar</refname>
    <refpurpose>Returns current line kill character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_killchar</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_killchar</function> returns the current line
     kill character.
    </para>
    <para>
    See also: <function>ncurses_erasechar</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nl">
   <refnamediv>
    <refname>ncurses_nl</refname>
    <refpurpose>Translate newline and carriage return / line feed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_nl</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nocbreak">
   <refnamediv>
    <refname>ncurses_nocbreak</refname>
    <refpurpose>Switch terminal to cooked mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_nocbreak</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_nocbreak</function> routine returns terminal to
     normal (cooked) mode. Initially the terminal may or may not in
     cbreak mode as the mode is inherited. Therefore a program should
     call <function>ncurses_cbreak</function> and
     <function>ncurses_nocbreak</function> explicitly.
     Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_cbreak</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noecho">
   <refnamediv>
    <refname>ncurses_noecho</refname>
    <refpurpose>Switch off keyboard input echo </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_noecho</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_noecho</function> prevents echoing of user
     typed characters.
     Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_echo</function>,
    <function>ncurses_getch</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nonl">
   <refnamediv>
    <refname>ncurses_nonl</refname>
    <refpurpose>Do not translate newline and carriage return / line feed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_nonl</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noraw">
   <refnamediv>
    <refname>ncurses_noraw</refname>
    <refpurpose>Switch terminal out of raw mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_noraw</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_noraw</function> switches the terminal out of raw
     mode. Raw mode is similar to cbreak mode, in that characters
     typed are immediately passed through to the user program. The
     differences that are that in raw mode, the interrupt, quit,
     suspend and flow control characters are all passed through
     uninterpreted, instead of generating a signal.
     Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_raw</function>,
    <function>ncurses_cbreak</function>, 
    <function>ncurses_nocbreak</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-raw">
   <refnamediv>
    <refname>ncurses_raw</refname>
    <refpurpose>Switch terminal into raw mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_raw</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_raw</function> places the terminal in raw
     mode. Raw mode is similar to cbreak mode, in that characters
     typed are immediately passed through to the user program. The
     differences that are that in raw mode, the interrupt, quit,
     suspend and flow control characters are all passed through
     uninterpreted, instead of generating a signal.
     Returns &true; if any error occured, otherwise &false;.
    </para>
    <para>
    See also: <function>ncurses_noraw</function>,
    <function>ncurses_cbreak</function>, 
    <function>ncurses_nocbreak</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-resetty">
   <refnamediv>
    <refname>ncurses_resetty</refname>
    <refpurpose>Restore saved terminal state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_resetty</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-savetty">
   <refnamediv>
    <refname>ncurses_savetty</refname>
    <refpurpose>Save terminal state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_savetty</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attr">
   <refnamediv>
    <refname>ncurses_slk_attr</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_attr</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-clear">
   <refnamediv>
    <refname>ncurses_slk_clear</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_clear</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-noutrefresh">
   <refnamediv>
    <refname>ncurses_slk_noutrefresh</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_noutrefresh</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-refresh">
   <refnamediv>
    <refname>ncurses_slk_refresh</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_refresh</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-restore">
   <refnamediv>
    <refname>ncurses_slk_restore</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_restore</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-touch">
   <refnamediv>
    <refname>ncurses_slk_touch</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_slk_touch</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-termattrs">
   <refnamediv>
    <refname>ncurses_termattrs</refname>
    <refpurpose>Returns a logical OR of all attribute flags supported by terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_termattrs</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-use-default-colors">
   <refnamediv>
    <refname>ncurses_use_default_colors</refname>
    <refpurpose>Assign terminal default colors to color id -1 </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ncurses_use_default_colors</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addch">
   <refnamediv>
    <refname>ncurses_addch</refname>
    <refpurpose>Add character at current position and advance cursor </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_addch</methodname>
      <methodparam><type>int</type><parameter>ch</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addchnstr">
   <refnamediv>
    <refname>ncurses_addchnstr</refname>
    <refpurpose>Add attributed string with specified length at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_addchnstr</methodname>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addchstr">
   <refnamediv>
    <refname>ncurses_addchstr</refname>
    <refpurpose>Add attributed string at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_addchstr</methodname>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addnstr">
   <refnamediv>
    <refname>ncurses_addnstr</refname>
    <refpurpose>Add string with specified length at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_addnstr</methodname>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addstr">
   <refnamediv>
    <refname>ncurses_addstr</refname>
    <refpurpose>Output text at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_addstr</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-assume-default-colors">
   <refnamediv>
    <refname>ncurses_assume_default_colors</refname>
    <refpurpose>Define default colors for color 0 </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_assume_default_colors</methodname>
      <methodparam><type>int</type><parameter>fg</parameter></methodparam>
      <methodparam><type>int</type><parameter>bg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attroff">
   <refnamediv>
    <refname>ncurses_attroff</refname>
    <refpurpose>Turn off the given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_attroff</methodname>
      <methodparam><type>int</type><parameter>attributes</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attron">
   <refnamediv>
    <refname>ncurses_attron</refname>
    <refpurpose>Turn on the given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_attron</methodname>
      <methodparam><type>int</type><parameter>attributes</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attrset">
   <refnamediv>
    <refname>ncurses_attrset</refname>
    <refpurpose>Set given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_attrset</methodname>
      <methodparam><type>int</type><parameter>attributes</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-baudrate">
   <refnamediv>
    <refname>ncurses_baudrate</refname>
    <refpurpose>Returns baudrate of terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_baudrate</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-beep">
   <refnamediv>
    <refname>ncurses_beep</refname>
    <refpurpose>Let the terminal beep </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_beep</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_beep</function> sends an audlible alert (bell)
     and if its not possible flashes the screen.
     Returns &false; on success, otherwise &true;.
    </para>
    <para>
    See also: <function>ncurses_flash</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-bkgd">
   <refnamediv>
    <refname>ncurses_bkgd</refname>
    <refpurpose>Set background property for terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_bkgd</methodname>
      <methodparam><type>int</type><parameter>attrchar</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-border">
   <refnamediv>
    <refname>ncurses_border</refname>
    <refpurpose>Draw a border around the screen using attributed characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_border</methodname>
      <methodparam><type>int</type><parameter>left</parameter></methodparam>
      <methodparam><type>int</type><parameter>right</parameter></methodparam>
      <methodparam><type>int</type><parameter>top</parameter></methodparam>
      <methodparam><type>int</type><parameter>bottom</parameter></methodparam>
      <methodparam><type>int</type><parameter>tl_corner</parameter></methodparam>
      <methodparam><type>int</type><parameter>tr_corner</parameter></methodparam>
      <methodparam><type>int</type><parameter>bl_corner</parameter></methodparam>
      <methodparam><type>int</type><parameter>br_corner</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-color-set">
   <refnamediv>
    <refname>ncurses_color_set</refname>
    <refpurpose>Set fore- and background color </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_color_set</methodname>
      <methodparam><type>int</type><parameter>pair</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-curs-set">
   <refnamediv>
    <refname>ncurses_curs_set</refname>
    <refpurpose>Set cursor state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_curs_set</methodname>
      <methodparam><type>int</type><parameter>visibility</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-define-key">
   <refnamediv>
    <refname>ncurses_define_key</refname>
    <refpurpose>Define a keycode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_define_key</methodname>
      <methodparam><type>string</type><parameter>definition</parameter></methodparam>
      <methodparam><type>int</type><parameter>keycode</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delay-output">
   <refnamediv>
    <refname>ncurses_delay_output</refname>
    <refpurpose>Delay output on terminal using padding characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_delay_output</methodname>
      <methodparam><type>int</type><parameter>milliseconds</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delwin">
   <refnamediv>
    <refname>ncurses_delwin</refname>
    <refpurpose>Delete a ncurses window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_delwin</methodname>
      <methodparam><type>resource</type><parameter>window</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-echochar">
   <refnamediv>
    <refname>ncurses_echochar</refname>
    <refpurpose>Single character output including refresh </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_echochar</methodname>
      <methodparam><type>int</type><parameter>character</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-end">
   <refnamediv>
    <refname>ncurses_end</refname>
    <refpurpose>Stop using ncurses, clean up the screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_end</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-filter">
   <refnamediv>
    <refname>ncurses_filter</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_filter</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-getch">
   <refnamediv>
    <refname>ncurses_getch</refname>
    <refpurpose>Read a character from keyboard </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_getch</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-halfdelay">
   <refnamediv>
    <refname>ncurses_halfdelay</refname>
    <refpurpose>Put terminal into halfdelay mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_halfdelay</methodname>
      <methodparam><type>int</type><parameter>tenth</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-key">
   <refnamediv>
    <refname>ncurses_has_key</refname>
    <refpurpose>Check for presence of a function key on terminal keyboard </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_has_key</methodname>
      <methodparam><type>int</type><parameter>keycode</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-hline">
   <refnamediv>
    <refname>ncurses_hline</refname>
    <refpurpose>Draw a horizontal line at current position using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_hline</methodname>
      <methodparam><type>int</type><parameter>charattr</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init">
   <refnamediv>
    <refname>ncurses_init</refname>
    <refpurpose>Initialize ncurses </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_init</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init-color">
   <refnamediv>
    <refname>ncurses_init_color</refname>
    <refpurpose>Set new RGB value for color </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_init_color</methodname>
      <methodparam><type>int</type><parameter>color</parameter></methodparam>
      <methodparam><type>int</type><parameter>r</parameter></methodparam>
      <methodparam><type>int</type><parameter>g</parameter></methodparam>
      <methodparam><type>int</type><parameter>b</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init-pair">
   <refnamediv>
    <refname>ncurses_init_pair</refname>
    <refpurpose>Allocate a color pair </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_init_pair</methodname>
      <methodparam><type>int</type><parameter>pair</parameter></methodparam>
      <methodparam><type>int</type><parameter>fg</parameter></methodparam>
      <methodparam><type>int</type><parameter>bg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insch">
   <refnamediv>
    <refname>ncurses_insch</refname>
    <refpurpose>Insert character moving rest of line including character at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_insch</methodname>
      <methodparam><type>int</type><parameter>character</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insdelln">
   <refnamediv>
    <refname>ncurses_insdelln</refname>
    <refpurpose>Insert lines before current line scrolling down (negative numbers delete and scroll up) </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_insdelln</methodname>
      <methodparam><type>int</type><parameter>count</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insstr">
   <refnamediv>
    <refname>ncurses_insstr</refname>
    <refpurpose>Insert string at current position, moving rest of line right </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_insstr</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-instr">
   <refnamediv>
    <refname>ncurses_instr</refname>
    <refpurpose>Reads string from terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_instr</methodname>
      <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     <function>ncurses_instr</function> returns the number of
     charaters read from the current character position until end of
     line.
     <parameter>buffer</parameter> contains the characters. Atrributes
     are stripped from the characters. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-keyok">
   <refnamediv>
    <refname>ncurses_keyok</refname>
    <refpurpose>Enable or disable a keycode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_keyok</methodname>
      <methodparam><type>int</type><parameter>keycode</parameter></methodparam>
      <methodparam><type>bool</type><parameter>enable</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mouseinterval">
   <refnamediv>
    <refname>ncurses_mouseinterval</refname>
    <refpurpose>Set timeout for mouse button clicks </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mouseinterval</methodname>
      <methodparam><type>int</type><parameter>milliseconds</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-move">
   <refnamediv>
    <refname>ncurses_move</refname>
    <refpurpose>Move output position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_move</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddch">
   <refnamediv>
    <refname>ncurses_mvaddch</refname>
    <refpurpose>Move current position and add character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvaddch</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>c</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddchnstr">
   <refnamediv>
    <refname>ncurses_mvaddchnstr</refname>
    <refpurpose>Move position and add attrributed string with specified length </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvaddchnstr</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddchstr">
   <refnamediv>
    <refname>ncurses_mvaddchstr</refname>
    <refpurpose>Move position and add attributed string </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvaddchstr</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddnstr">
   <refnamediv>
    <refname>ncurses_mvaddnstr</refname>
    <refpurpose>Move position and add string with specified length </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvaddnstr</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddstr">
   <refnamediv>
    <refname>ncurses_mvaddstr</refname>
    <refpurpose>Move position and add string </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvaddstr</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvcur">
   <refnamediv>
    <refname>ncurses_mvcur</refname>
    <refpurpose>Move cursor immediately </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvcur</methodname>
      <methodparam><type>int</type><parameter>old_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>old_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>new_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>new_x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvdelch">
   <refnamediv>
    <refname>ncurses_mvdelch</refname>
    <refpurpose>Move position and delete character, shift rest of line left </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvdelch</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvgetch">
   <refnamediv>
    <refname>ncurses_mvgetch</refname>
    <refpurpose>Move position and get character at new position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvgetch</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvhline">
   <refnamediv>
    <refname>ncurses_mvhline</refname>
    <refpurpose>Set new position and draw a horizontal line using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvhline</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>attrchar</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvinch">
   <refnamediv>
    <refname>ncurses_mvinch</refname>
    <refpurpose>Move position and get attributed character at new position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvinch</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvvline">
   <refnamediv>
    <refname>ncurses_mvvline</refname>
    <refpurpose>Set new position and draw a vertical line using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvvline</methodname>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>attrchar</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvwaddstr">
   <refnamediv>
    <refname>ncurses_mvwaddstr</refname>
    <refpurpose>Add string at new position in window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_mvwaddstr</methodname>
      <methodparam><type>resource</type><parameter>window</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-napms">
   <refnamediv>
    <refname>ncurses_napms</refname>
    <refpurpose>Sleep </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_napms</methodname>
      <methodparam><type>int</type><parameter>milliseconds</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-newwin">
   <refnamediv>
    <refname>ncurses_newwin</refname>
    <refpurpose>Create a new window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_newwin</methodname>
      <methodparam><type>int</type><parameter>rows</parameter></methodparam>
      <methodparam><type>int</type><parameter>cols</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noqiflush">
   <refnamediv>
    <refname>ncurses_noqiflush</refname>
    <refpurpose>Do not flush on signal characters</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_noqiflush</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-putp">
   <refnamediv>
    <refname>ncurses_putp</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_putp</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-qiflush">
   <refnamediv>
    <refname>ncurses_qiflush</refname>
    <refpurpose>Flush on signal characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_qiflush</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-refresh">
   <refnamediv>
    <refname>ncurses_refresh</refname>
    <refpurpose>Refresh screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_refresh</methodname>
      <methodparam><type>int</type><parameter>ch</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-dump">
   <refnamediv>
    <refname>ncurses_scr_dump</refname>
    <refpurpose>Dump screen content to file </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_scr_dump</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-init">
   <refnamediv>
    <refname>ncurses_scr_init</refname>
    <refpurpose>Initialize screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_scr_init</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-restore">
   <refnamediv>
    <refname>ncurses_scr_restore</refname>
    <refpurpose>Restore screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_scr_restore</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-set">
   <refnamediv>
    <refname>ncurses_scr_set</refname>
    <refpurpose>Inherit screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_scr_set</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scrl">
   <refnamediv>
    <refname>ncurses_scrl</refname>
    <refpurpose>Scroll window content up or down without changing current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_scrl</methodname>
      <methodparam><type>int</type><parameter>count</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attroff">
   <refnamediv>
    <refname>ncurses_slk_attroff</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_slk_attroff</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attron">
   <refnamediv>
    <refname>ncurses_slk_attron</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_slk_attron</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attrset">
   <refnamediv>
    <refname>ncurses_slk_attrset</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_slk_attrset</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-color">
   <refnamediv>
    <refname>ncurses_slk_color</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_slk_color</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-init">
   <refnamediv>
    <refname>ncurses_slk_init</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_slk_init</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-standend">
   <refnamediv>
    <refname>ncurses_standend</refname>
    <refpurpose>Stop using 'standout' attribute </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_standend</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-standout">
   <refnamediv>
    <refname>ncurses_standout</refname>
    <refpurpose>Start using 'standout' attribute </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_standout</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-start-color">
   <refnamediv>
    <refname>ncurses_start_color</refname>
    <refpurpose>Start using colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_start_color</methodname>
      <void/>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-typeahead">
   <refnamediv>
    <refname>ncurses_typeahead</refname>
    <refpurpose>Specify different filedescriptor for typeahead checking </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_typeahead</methodname>
      <methodparam><type>int</type><parameter>fd</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-ungetch">
   <refnamediv>
    <refname>ncurses_ungetch</refname>
    <refpurpose>Put a character back into the input stream </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_ungetch</methodname>
      <methodparam><type>int</type><parameter>keycode</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-use-extended-names">
   <refnamediv>
    <refname>ncurses_use_extended_names</refname>
    <refpurpose>Control use of extended names in terminfo descriptions </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_use_extended_names</methodname>
      <methodparam><type>bool</type><parameter>flag</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-vidattr">
   <refnamediv>
    <refname>ncurses_vidattr</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_vidattr</methodname>
      <methodparam><type>int</type><parameter>intarg</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-vline">
   <refnamediv>
    <refname>ncurses_vline</refname>
    <refpurpose>Draw a vertical line at current position using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_vline</methodname>
      <methodparam><type>int</type><parameter>charattr</parameter></methodparam>
      <methodparam><type>int</type><parameter>n</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-wrefresh">
   <refnamediv>
    <refname>ncurses_wrefresh</refname>
    <refpurpose>Refresh window on terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ncurses_wrefresh</methodname>
      <methodparam><type>resource</type><parameter>window</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-bkgdset">
   <refnamediv>
    <refname>ncurses_bkgdset</refname>
    <refpurpose>Control screen background </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>ncurses_bkgdset</methodname>
      <methodparam><type>int</type><parameter>attrchar</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-timeout">
   <refnamediv>
    <refname>ncurses_timeout</refname>
    <refpurpose>Set timeout for special key sequences </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>ncurses_timeout</methodname>
      <methodparam><type>int</type><parameter>millisec</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

<refentry id="function.ncurses-use-env">
   <refnamediv>
    <refname>ncurses_use_env</refname>
    <refpurpose>Control use of environment information about terminal size </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>ncurses_use_env</methodname>
      <methodparam><type>bool</type><parameter>flag</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

</reference>
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->


