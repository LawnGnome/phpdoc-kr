 <reference id="ref.shmop">
  <title>공유 메모리 함수</title>
  <titleabbrev>shmop</titleabbrev>
  
  <partintro>
   <para>
    Shmop는 Unix 공유 메모리 세그먼트를 php에서 읽고, 기록하고,
    생성하고, 삭제하기 쉽도록 하는 함수 모음이다.
    이 함수는 윈도우즈에서는 공유 메모리를 지원하지 않기 때문에 동작하지 않는다.
    shmop를 사용하기 위해서는 --enable-shmop 인자로 php를 컴파일해야한다.
   </para>
   <note>
    <simpara>
     이번 장에서는 PHP 4.0.3의 <function>shm_</function> 단어로
     시작되는 함수를 설명할 것이다.
     그러나 PHP 4.0.4 이후 버전의 경우 <function>shmop_</function>로
     이름만 바뀌었다.
    </simpara>
   </note>
   <para>
    <example>
     <title>공유 메모리 작동의 개관</title> 
     <programlisting role="php">
&lt;?php
   
// Create 100 byte shared memory block with system id if 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
	echo "Couldn't create shared memory segment\n";
}

// Get shared memory block's size
$shm_size = shmop_size($shm_id);
echo "SHM Block Size: ".$shm_size. " has been created.\n";

// Lets write a test string into shared memory
$shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0);
if($shm_bytes_written != strlen("my shared memory block")) {
	echo "Couldn't write the entire length of data\n";
}

// Now lets read the string back
$my_string = shmop_read($shm_id, 0, $shm_size);
if(!$my_string) {
	echo "Couldn't read from shared memory block\n";
}
echo "The data inside shared memory was: ".$my_string."\n";

//Now lets delete the block and close the shared memory segment
if(!shmop_delete($shm_id)) {
	echo "Couldn't mark shared memory block for deletion.";
}
shmop_close($shm_id);
   
?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>  

  <refentry id="function.shmop_open">
   <refnamediv>
    <refname>shmop_open</refname>
    <refpurpose>공유 메모리 블럭을 열거나 생성</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_open</function></funcdef>
      <paramdef>int <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>flags</parameter></paramdef>
      <paramdef>int <parameter>mode</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_open</function>은 공유 메모리 블럭을 생성하거나 여는데 쓰인다.
    </para>
    <para>
     <function>shmop_open</function>은 4가지 인자가 쓰인다:
     첫번째 인자인 공유 메모리 블럭의 시스템의 id를 위한 key. 이 인자는 10진수 또는 16진수로 지정된다.
     두번째 인자는 flags로 다음과 같이 쓰인다:
     <itemizedlist>
      <listitem>
       <simpara>
        "a" : 접근 (IPC_EXCL 상수로 설정)
        존재하고 있는 공유 메모리 세그먼트를 여는데 이 flag를 사용.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "c" : 생성 (IPC_CREATE 상수로 설정)
        새로운 공유 메모리 세그먼트를 생성하려할 때 이 flag를 사용.
       </simpara>
      </listitem>
     </itemizedlist>
     세번째 인자는 메모리 세그컨트를 할당하기를 원하는
     파일의 퍼미션과 동일한 방식의 퍼미션 모드이다.
     퍼미션은 0644와 같이 8진수로 지정되어야 한다.
     마지막 인자는 바이트 단위의 생성할 공유 메모리 블럭 크기이다.
     <note><simpara>
      주의: 세번째와 네번째 인자는 존재하고 있는
      메모리 세그먼트를 열때는 0을 지정해야만 한다.
      <function>shmop_open</function>함수가 성공하면
      생성된 공유 메모리 세그먼트를 접근하기 위해 사용될 id를 반환할 것이다.
     </simpara></note>
    </para> 
    <para>
     <example>
      <title>Create a new shared memory block</title>
      <programlisting role="php">
&lt;?php
$shm_id = shmop_open(0x0fff, "c", 0644, 100);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위의 예제는 시스템 id 0x0fff를 가진 공유 메모리 블럭을 열도록 한다.
    </para>
   </refsect1>
  </refentry>  
  
  <refentry id="function.shmop_read">
   <refnamediv>
    <refname>shmop_read</refname>
    <refpurpose>공유 메모리 블럭으로부터 데이터를 판독</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>shmop_read</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
      <paramdef>int <parameter>start</parameter></paramdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_read</function>함수는 공유 메모리 블럭으로부터 문자열을 읽는다.
    </para>
    <para>
     <function>shmop_read</function>함수는 3개의 인자를 가진다:
     <function>shmop_open</function>에 의해 생성된 공유 메모리 블럭 identifier인 shmid,
     읽기 시작할 offset, 읽어낼 바이트 수를 나타내는 count.
    </para> 
    <para>
     <example>
      <title>공유 메모리 블럭 판독</title>
      <programlisting role="php">
&lt;?php
$shm_data = shmop_read($shm_id, 0, 50);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위의 예제는 공유 메모리 블럭에서 50 바이트를 읽어 <literal>$shm_data</literal> 변수에 기록할 것이다.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shmop_write">
   <refnamediv>
    <refname>shmop_write</refname>
     <refpurpose>공유 메모리 블럭에 자료 기록</refpurpose>
    </refnamediv>
    <refsect1>
     <title>설명</title>
     <funcsynopsis>
      <funcprototype>
       <funcdef>int <function>shmop_write</function></funcdef>
       <paramdef>int <parameter>shmid</parameter></paramdef>
       <paramdef>string <parameter>data</parameter></paramdef>
       <paramdef>int <parameter>offset</parameter></paramdef>
      </funcprototype>
     </funcsynopsis>
     <para>
      <function>shmop_write</function>함수는 공유 메모리 블럭으로 문자열을 기록할 것이다.
     </para>
     <para>
      <function>shmop_write</function>함수는 3개의 인자를 가진다:
      <function>shmop_open</function>에 의해 생성된 공유 메모리 블럭 identifier인 shmid,
      공유 메모리 블럭에 기록하기를 원하는 문자열인 data, 공유 메모리 세그먼트 내부에 기록을 시작할 
      데이터의 위치를 지정한 offset.
     </para> 
     <para>
      <example>
      <title>공유 메모리 블럭으로 기록</title>
      <programlisting role="php">
&lt;?php
$shm_bytes_written = shmop_write($shm_id, $my_string, 0);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위의 예제는 <literal>$my_string</literal>을 공유 메모리 블럭에 기록하고,
     기록된 바이트 수를 <literal>$shm_bytes_written</literal>에 반환한다.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.size">
  <refnamediv>
   <refname>shmop_size</refname>
   <refpurpose>공유 메모리 블럭의 크기를 얻음</refpurpose>
  </refnamediv>
  <refsect1>
   <title>설명</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>shmop_size</function></funcdef>
     <paramdef>int <parameter>shmid</parameter></paramdef>
    </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_size</function>는 공유 메모리 블럭 크기를 바이트 단위로 얻는데 사용된다.
    </para>
    <para>
     <function>shmop_size</function>는 <function>shmop_open</function>으로 생성된
     공유 메모리 블럭 identifier인 shmid 인자를 지정하면,
     공유 메모리 블럭이 차지하고 있는 바이트 수를 정수형으로 반환한다.
    </para> 
    <para>
     <example>
      <title>공유 메모리 블럭 크기 얻기</title>
      <programlisting role="php">
&lt;?php
$shm_size = shmop_size($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위의 예제는 <literal>$shm_id</literal>에 의해 지정된 공유 메모리 블럭의 크기를 
     <literal>$shm_size</literal>에 할당한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.shmop_delete">
   <refnamediv>
    <refname>shmop_delete</refname>
    <refpurpose>공유 메모리 블럭을 삭제</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_delete</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_delete</function>는 공유 메모리 블럭을 삭제하는데 사용된다.
    </para>
    <para>
     <function>shmop_delete</function>함수는 <function>shmop_open</function>으로 생성된
     공유 메모리 블럭 identifier인 shmid를 인자로 가진다.
     성공하면 1을 반환하고 실패하면 0을 반환한다.
    </para> 
    <para>
     <example>
      <title>공유 메모리 블럭 삭제</title>
      <programlisting role="php">
&lt;?php
shmop_delete($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위 예제는 <literal>$shm_id</literal> 인자로 지정된 공유 메모리 블럭을 삭제한다.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shmop_close">
   <refnamediv>
    <refname>shmop_close</refname>
    <refpurpose>공유 메모리 블럭을 닫음</refpurpose>
   </refnamediv>
   <refsect1>
    <title>설명</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_close</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_close</function>는 공유 메모리 블럭을 닫는데 사용된다.
    </para>
    <para>
     <function>shmop_close</function>는 <function>shmop_open</function>으로 생성된
     공유 메모리 블럭 identifier인 shmid를 인자로 가진다.
    </para> 
    <para>
     <example>
      <title>공유 메모리 블럭 닫기</title>
      <programlisting role="php">
&lt;?php
shmop_close($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     위의 예제는 <literal>$shm_id</literal> 인자로 지정된 공유 메모리 블럭을 닫는다.
    </para>
   </refsect1>
  </refentry>
 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
