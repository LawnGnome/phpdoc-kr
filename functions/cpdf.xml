<reference id="ref.cpdf">
	<title>ClibPDF functions</title>
	<titleabbrev>ClibPDF</titleabbrev>
	<partintro>
		<simpara>
	ClibPDF는 PHP에서 pdf 문서를 만들 수 있게 해 준다. 
	ClibPDF는 <ulink url="&url.fastio;">FastIO</ulink>에서 구할 수 있으나 공개(free software)는 아니다. 
	여러분은 ClibPDF를 사용하기 전에 라이센스를 자세히 읽어봐야 할 것이다. 
	만약 여러분이 이 라이센스에 동의하기를 원하지 않으면 Thomas Merz의 pdflib의 사용을 고려 할 수도 있다. 
	pdflib도 역시 강력한 기능을 가지고 있다. ClibPDF는 Thomas Merz의 pdflib와 기능이나 API가 매우 유사하지만, 
	FastIO에 따르면 ClibPDF는 문서를 더 작은 크기로 더 빠르게 만들 수 있다고 한다. 
	ClibPDF는 pdflib 새로운 2.0 버전을 변환한 것 같다. 
	간단한 예제(pdflib 2.0의 pdfclock.c를 php 스크립트로 고친 것)에서는 실질적인 속도의 차이는 없었다. 
	또한 압축기능을 꺼 놓으면 두 개의 파일 크기도 비슷하다.
   </simpara>
		<simpara>
	여기의 설명은 ClibPDF의 매뉴얼과 같이 읽는 것이 좋다. 
	이 매뉴얼은 라이브러리에 대해 더 자세히 설명하고 있다. 
	ClibPDF의 매뉴얼의 내용을 이해여야 PHP에서의 이 라이브러리를 사용할 수 있을 것이다.
   </simpara>
		<simpara>
	대부분의 PHP 모듈의 함수이름은 ClibPDF 고유의 함수(pdflib도 마찬가지고) 이름과 동일하다. 
	<function>cpdf_open</function> 을 제외한 모든 함수들은 첫 번째 인수로 작업할 문서의 핸들을 가지게 된다. 
   </simpara>
		<simpara>
	현재 ClibPDF가 동시에 여러개의 PDF 문서를 만들지 못하기 때문에 이 핸들은 내부적으로 아무 의미가 없다. 
	그러나 이를 시험하지는 말라. 어떤 결과가 나올지 알 수 없다. 
	더구나 멀티 쓰레드 환경에서는 중대한 오류가 생길 수도 있다. 
	ClibPDF의 제작자에 따르면 이 내용은 다음 버전에서 수정될 것이라고 한다.(현재 버전은 1.10이다.) 
	여러문서를 동시에 만드는 기능이 필요하다면 pdflib module을 사용하도록 하라.
   </simpara>
		<note>
			<simpara>
	PHP3 이후로 <function>cpdf_set_font</function> 함수는 2byte의 아시안 폰트를 지원하도록 바뀌었다. 
	그리고, 이 함수의 엔코딩 파라메터는 이제 정수값이 아니고 문자열이다.
    </simpara>
		</note>
		<simpara>
	pdflib에 비해서 ClibPDF의 가장 큰 장점은 pdf 문서를 임시 파일을 
	사용하지 않고 메모리 상에서 만들 수 있다는 점이다. 
	또한 ClibPDF는 미리 정의된 유닛 길이의 좌표를 넘겨줄 수 있다. 
	이것은 매유 편리한 기능이지만 pdflib에서도 <function>pdf_translate</function>를 사용하면 비슷한 기능을 지원할 수 있다.
   </simpara>
		<simpara>
    Another nice feature of ClibPDF is the fact that any page can be modified
    at any time even if a new page has been already opened. The function
    <function>cpdf_set_current_page</function> allows to leave the current
    page and presume modifying an other page.
   </simpara>
		<simpara>
	대부분의 함수들은 사용하기 쉽다. 간단한 pdf 문서를 하나 만들어보면 
	별로 어렵지 않다는 것을 알 수 있을 것이다. 다음 예를 보면 쉽게 시작할 수 있다. 
	이 예제은 한 장짜리 test.pdf라는 파일을 만드는 것이다. 
	이 페이지에는 외곽선 30pt의 "Times-Roman" 폰트의 text가 쓰여진다. 이 text는 밑줄이 그어진다. 
   </simpara>
		<example>
			<title>Simple ClibPDF Example</title>
			<programlisting>
&lt;?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
cpdf_begin_text($cpdf);
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 750);
cpdf_end_text($cpdf);	
cpdf_moveto($cpdf, 50, 740);
cpdf_lineto($cpdf, 330, 740);
cpdf_stroke($cpdf);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?&gt;
    </programlisting>
		</example>
		<simpara>
	pdflib 배포본에 보면 아나로그 시계가 포함된 여러 페이지의 문서를 만드는 조금은 복잡한 예제가 있다. 
	아래 예제는 그 예제를 ClibPDF 확장을 사용한 PHP로 변환한 것이다. :
   </simpara>
		<example>
			<title>pdfclock example from pdflib 2.0 distribution</title>
			<programlisting>
&lt;?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php3");
cpdf_set_title($pdf, "Analog Clock");
  
while($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);
  
  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* wipe */
  
  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);
  
  /* minute strokes */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha &lt; 360; $alpha += 6)
    {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
    }
  
  cpdf_restore($pdf);
  cpdf_save($pdf);
 
  /* 5 minute strokes */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha &lt; 360; $alpha += 30)
  {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* draw hour hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutes']/60.0) + $ltime['hours'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw minute hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds']/60.0) + $ltime['minutes'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw second hand */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* draw little circle at center */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?&gt;
    </programlisting>
		</example>
	</partintro>
	<refentry id="function.cpdf-global-set-document-limits">
		<refnamediv>
			<refname>cpdf_global_set_document_limits</refname>
			<refpurpose>임의의 pds 문서의 한계를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>
       void <function>cpdf_global_set_document_limits</function>
					</funcdef>
					<paramdef>int <parameter>maxpages</parameter>
					</paramdef>
					<paramdef>int <parameter>maxfonts</parameter>
					</paramdef>
					<paramdef>int <parameter>maximages</parameter>
					</paramdef>
					<paramdef>int <parameter>maxannotations</parameter>
					</paramdef>
					<paramdef>int <parameter>maxobjects</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_global_set_document_limits</function>함수는 여러 문서의 한계를 설정합니다. 이 함수는 <function>cpdf_open</function>보다 이전에 호출되어야 효과를 발휘합니다. 이것은 이후에 여는 모든 문서에 적용될것입니다. 
</para>
			<para>
				<function>cpdf_open</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-creator">
		<refnamediv>
			<refname>cpdf_set_creator</refname>
			<refpurpose>pdf 문서의 작성자 항목을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_creator</function>
					</funcdef>
					<paramdef>string <parameter>creator</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_creator</function>함수는 pdf 문서의 작성자를 설정합니다
    </para>
			<para>
				<function>cpdf_set_subject</function>,
              <function>cpdf_set_title</function>,
              <function>cpdf_set_keywords</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-title">
		<refnamediv>
			<refname>cpdf_set_title</refname>
			<refpurpose>pdf 문서의 타이틀 항목을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_title</function>
					</funcdef>
					<paramdef>string <parameter>title</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_set_title</function>함수는 pdf 문서의 타이틀을 설정합니다.
    </para>
			<para>
<function>cpdf_set_subject</function>,
              <function>cpdf_set_creator</function>,
              <function>cpdf_set_keywords</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-subject">
		<refnamediv>
			<refname>cpdf_set_subject</refname>
			<refpurpose>pdf문서의 제목 항목을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_subject</function>
					</funcdef>
					<paramdef>string <parameter>subject</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_subject</function>함수는 pdf 문서의 제목을 설정합니다.
    </para>
			<para>
     See also <function>cpdf_set_title</function>,
              <function>cpdf_set_creator</function>,
              <function>cpdf_set_keywords</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-keywords">
		<refnamediv>
			<refname>cpdf_set_keywords</refname>
			<refpurpose>pdf 문서의 키워드를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_keywords</function>
					</funcdef>
					<paramdef>string <parameter>keywords</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_keywords</function>함수는 pdf 문서의 키워드를 설정해줍니다.
    </para>
			<para>
				<function>cpdf_set_title</function>,
              <function>cpdf_set_creator</function>,
              <function>cpdf_set_subject</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-open">
		<refnamediv>
			<refname>cpdf_open</refname>
			<refpurpose>새로운 pds 문서를 엽니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>int <function>cpdf_open</function>
					</funcdef>
					<paramdef>int <parameter>compression</parameter>
					</paramdef>
					<paramdef>
       string <parameter>
							<optional>filename</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_open</function>함수는 새로운 pdf 문서를 엽니다. 첫번째 매개변수가 0이 아니라면 문서를 압축해줍니다. 두번째 선택적 매개변수는 문서가 쓰여질 파일명을 설정합니다. 만약 그것이 생략되었다면 문서는 메모리에 작성되며 <function>cpdf_save_to_file</function>함수를 통해 저장되거나 <function>cpdf_output_buffer</function>함수를 통해 표준 출력으로 쓰여질수 있습니다.
     <note>
					<simpara>
리턴값은 차기버전의 ClibPDF 에서 pdf문서를 작성하는데 쓰이는 모든 함수의 첫번째 매개변수로 필요로할 것입니다.
</simpara>
					<simpara>
ClibPDF 라이브러리는 파일명 "-" 을 표준출력(stdout)과 동의어로 취급합니다. 만약 PHP 가 아파치(apache)의 모듈로 컴파일 되었다면 이것은 동작하지 않을것입니다. 왜냐하면 ClibPDF 를 표준출력으로 출력하는것은 아파치와 함께 작동하지 않기 때문입니다. 당신은 파일명을 생략하고 <function>cpdf_output_buffer</function>를 사용하여 pdf 문서를 출력함으로써 이 문제를 해결할수 있습니다.
      </simpara>
				</note>
			</para>
			<para>
				<function>cpdf_close</function>,
              <function>cpdf_output_buffer</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-close">
		<refnamediv>
			<refname>cpdf_close</refname>
			<refpurpose>pdf문서를 닫습니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_close</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_close</function> 함수는 pdf 문서를 닫습니다. 이것은 <function>cpdf_finalize</function>, <function>cpdf_output_buffer</function> 와 <function>cpdf_save_to_file</function>보다 마지막에 사용되어야 합니다
    </para>
			<para>
				<function>cpdf_open</function>을 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-page-init">
		<refnamediv>
			<refname>cpdf_page_init</refname>
			<refpurpose>새 페이지를 시작합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_page_init</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>page number</parameter>
					</paramdef>
					<paramdef>int <parameter>orientation</parameter>
					</paramdef>
					<paramdef>double <parameter>height</parameter>
					</paramdef>
					<paramdef>double <parameter>width</parameter>
					</paramdef>
					<paramdef>
       double <parameter>
							<optional>unit</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_page_init</function>함수는 높이 <parameter>height</parameter>와 넓이 <parameter>width</parameter>인 새 페이지를 시작합니다. 페이지는 쪽번호 <parameter>page number</parameter>와 방향 orientation값을 가집니다. <parameter>orientation</parameter>은 세로방향일때 0 , 가로방향일때 1의 값을 가집니다. 마지막 옵션변수인 <parameter>unit</parameter>은 좌표시스템의 단위를 설정합니다. 값은 단위(unit)당 postscript points 의 숫자 값을 가집니다. 가령 1인치가 72 포인트(point)와 같다면, 단위 1인치는 72가 될것입니다. 기본값역시 72입니다
</para>
			<para>
				<function>cpdf_set_current_page</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-finalize-page">
		<refnamediv>
			<refname>cpdf_finalize_page</refname>
			<refpurpose>페이지를 끝냅니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_finalize_page</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>page number</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_finalize_page</function>함수는 쪽번호 <parameter>page number</parameter>인 페이지를 마무리합니다.
    </para>
			<para>
이 함수는 오직 메모리를 절약하기 위해 사용됩니다. 페이지를 마무리하면 메모리를 적게 차지하게 되지만 더이상 편집할수 없게 됩니다    </para>
			<para>
				<function>cpdf_page_init</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-finalize">
		<refnamediv>
			<refname>cpdf_finalize</refname>
			<refpurpose>문서를 끝냅니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_finalize</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_finalize</function>함수는 현재 문서를 끝냅니다. 당신은 여전히 <function>cpdf_close</function>
함수를 사용해야 할 필요가 있습니다
			</para>
			<para>
				<function>cpdf_close</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-output-buffer">
		<refnamediv>
			<refname>cpdf_output_buffer</refname>
			<refpurpose>메모리 버퍼에 있는 pdf 문서를 출력합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_output_buffer</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_output_buffer</function>함수는 pdf문서를 표준출력(stdout)으로 출력합니다. 문서는 <function>cpdf_open</function>를 매개변수 파일명을 사용하지 않고 호출한것과 같은 경우처럼 메모리에 작성되어 있어야만 합니다
    </para>
			<para>
     See also <function>cpdf_open</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-save-to-file">
		<refnamediv>
			<refname>cpdf_save_to_file</refname>
			<refpurpose>pdf 문서를 파일에 기록합니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_save_to_file</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>filename</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_save_to_file</function>함수는 pdf 문서가 메모리에 작성되어있다면 그것을 파일에 기록합니다. 
</para>
			<para>
이 함수는 pdf 문서를 <function>cpdf_open</function>의 매개변수 파일명(filename)을 명시하여 열어야할 필요가 없습니다		
    </para>
			<para>
				<function>cpdf_output_buffer</function>,
              <function>cpdf_open</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-current-page">
		<refnamediv>
			<refname>cpdf_set_current_page</refname>
			<refpurpose>현재 페이지를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_current_page</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>page number</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_current_page</function>함수는 수행중인 모든 작용되는 페이지에 설정합니다.
페이지들에서 <function>cpdf_finalize_page</function>로 완료된 페이지까지 전환할수 있습니다.
    </para>
			<para>
				<function>cpdf_finalize_page</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-begin-text">
		<refnamediv>
			<refname>cpdf_begin_text</refname>
			<refpurpose>문자열 부분 시작</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_begin_text</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_begin_text</function> 수는 문자열 부분을 시작합니다. 이것은 반드시 <function>cpdf_end_text</function>로 끝나야 합니다. 
     <example>
					<title>텍스트 출력</title>
					<programlisting>
&lt;?php
cpdf_begin_text($pdf);
cpdf_set_font($pdf, 16, "Helvetica", "WinAnsiEncoding");
cpdf_text($pdf, 100, 100, "Some text");
cpdf_end_text($pdf)
?&gt;
      </programlisting>
				</example>
			</para>
			<para>
     See also <function>cpdf_end_text</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-end-text">
		<refnamediv>
			<refname>cpdf_end_text</refname>
			<refpurpose>텍스트 부분을 끝냅니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_end_text</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_end_text</function>함수는 <function>cpdf_end_text</function>cpdf_begin_text()로 시작된 텍스트부분을 끝냅니다
     <example>
					<title>텍스트 출력</title>
					<programlisting>
&lt;?php
cpdf_begin_text($pdf);
cpdf_set_font($pdf, 16, "Helvetica", "WinAnsiEncoding");
cpdf_text($pdf, 100, 100, "Some text");
cpdf_end_text($pdf)
?&gt;
      </programlisting>
				</example>
			</para>
			<para>
				<function>cpdf_begin_text</function>참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-show">
		<refnamediv>
			<refname>cpdf_show</refname>
			<refpurpose>현재 위치에 글자를 출력합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_show</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_show</function> 함수는 문자열 <parameter>text</parameter>를 현재 위치에 출력합니다
    </para>
			<para>
<function>cpdf_text</function>,
              <function>cpdf_begin_text</function>,
              <function>cpdf_end_text</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-show-xy">
		<refnamediv>
			<refname>cpdf_show_xy</refname>
			<refpurpose>특정위치에 문자열을 출력합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_show_xy</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_show_xy</function>함수는 문자열text 를 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>)좌표에 출력합니다.</para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
<note>
<simpara>
<function>cpdf_show_xy</function>함수는 추가 매개변수 없이 사용하였을때는 <function>cpdf_text</function>와 동일합니다. 
</simpara>
				</note>
			</para>
			<para>
<function>cpdf_text</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-text">
		<refnamediv>
			<refname>cpdf_text</refname>
			<refpurpose>매개변수를 통해 문자열을 출력합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_text</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
					<paramdef>
       double <parameter>
							<optional>orientation</optional>
						</parameter>
					</paramdef>
					<paramdef>
       int <parameter>
							<optional>alignmode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_text</function>함수는 문자열 <parameter>text</parameter>를 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>) 좌표에 출력합니다
 function outputs the string
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다. 선택적 매개변수 <parameter>orientation</parameter>은 문자의 회전 각도입니다. 선택적 매개변수 <parameter>alignmode</parameter>는 문자열의 정렬방식을 결정합니다
    </para>
			<para>
사용 가능한 값을 보시려면 ClibPDF 문서를 참조하세요.
    </para>
			<para>
<function>cpdf_show_xy</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-font">
		<refnamediv>
			<refname>cpdf_set_font</refname>
			<refpurpose>현재 글꼴과 크기를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_font</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>font name</parameter>
					</paramdef>
					<paramdef>double <parameter>size</parameter>
					</paramdef>
					<paramdef>string <parameter>encoding</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_font</function>함수는 현재 글꼴,크기와 인코딩을 설정합니다. 현재 표준 postscript 글꼴만 지원됩니다.
    </para>
			<para>마지막 매개변수 <parameter>encoding</parameter>은 "MacRomanEncoding", "MacExpertEncoding", "WinAnsiEncoding", "NULL" 과같은 값들을 가질수 있습니다. "NULL" 은 폰트 자체의 인코딩을 따릅니다
    </para>
			<para>
특별히 아시아 글꼴 지원등, 더 많은 정보를 얻으려면 ClibPDF 메뉴얼 을 참조하세요</para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-leading">
		<refnamediv>
			<refname>cpdf_set_leading</refname>
			<refpurpose>줄간격을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set leading</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>distance</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_leading</function>함수는 문자열의 줄사이 간격을 설정합니다. 이것은 문자열이 <function>cpdf_continue_text</function>로 출력될때 사용될것입니다
    </para>
			<para>
				<function>cpdf_continue_text</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-text-rendering">
		<refnamediv>
			<refname>cpdf_set_text_rendering</refname>
			<refpurpose>글자가 어떻게 렌더링(rendering)될것인지 결정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_text_rendering</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>mode</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_set_text_rendering</function>함수는 글자가 어떻게 렌더링될것인지를 결정합니다.
    </para>
			<para>
<parameter>mode</parameter>에 사용 가능한 값들은 0=채움글자, 1=외곽선 글자, 2=외곽선 및 채움 글자, 3=투명, 4=채움글자로 하고 잘라내기 패스(path)에 추가, 5=외곽선글자로 하고 잘라내기 패스에 추가, 6=외곽선 및 채움글자로 하고 잘라내기 패스에 추가, 7=잘라내기 패스에 추가 입니다. 			
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-horiz-scaling">
		<refnamediv>
			<refname>cpdf_set_horiz_scaling</refname>
			<refpurpose>글자의 가로비율을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_horiz_scaling</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>scale</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_horiz_scaling</function>함수는 가로비율을 <parameter>scale</parameter>퍼센트로 설정합니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-text-rise">
		<refnamediv>
			<refname>cpdf_set_text_rise</refname>
			<refpurpose>글자의 떠오름정도를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_text_rise</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_set_text_rise</function>함수는 글자의 떠오름정도를 <parameter>value</parameter>로 설정합니다.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-text-matrix">
		<refnamediv>
			<refname>cpdf_set_text_matrix</refname>
			<refpurpose>문자열의 행열을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_text_matrix</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>array <parameter>matrix</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_text_matrix</function> 함수는 현재 글꼴에 대한 변형 적용이 기술된 행열을 설정합니다. 
</para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-text-pos">
		<refnamediv>
			<refname>cpdf_set_text_pos</refname>
			<refpurpose>글자 위치를 지정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_text_pos</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_text_pos</function>함수는 다음 <function>cpdf_show</function>함수 호출의 글자 위치를 지정합니다
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
				<function>cpdf_show</function>,
              <function>cpdf_text</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-char-spacing">
		<refnamediv>
			<refname>cpdf_set_char_spacing</refname>
			<refpurpose>글자 간격을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_char_spacing</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>space</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_char_spacing</function>함수는 문자간의 간격을 설정합니다
     The <function>cpdf_set_char_spacing</function> function sets the
     spacing between characters.
    </para>
			<para>
				<function>cpdf_set_word_spacing</function>,
              <function>cpdf_set_leading</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-word-spacing">
		<refnamediv>
			<refname>cpdf_set_word_spacing</refname>
			<refpurpose>글자간의 간격을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_word_spacing</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>space</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_set_word_spacing</function>함수는 글자간의 간격을 설정합니다.
    </para>
			<para>
     See also <function>cpdf_set_char_spacing</function>,
              <function>cpdf_set_leading</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-continue-text">
		<refnamediv>
			<refname>cpdf_continue_text</refname>
			<refpurpose>다음줄에 문자열을 출력합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_continue_text</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_continue_text</function>함수는 <parameter>text</parameter>의 문자열을 다음줄에 출력합니다. 
 <parameter>text</parameter> in the next line.
    </para>
			<para>
				<function>cpdf_show_xy</function>,
              <function>cpdf_text</function>,
              <function>cpdf_set_leading</function>,
              <function>cpdf_set_text_pos</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-stringwidth">
		<refnamediv>
			<refname>cpdf_stringwidth</refname>
			<refpurpose>현재 글꼴로 쓰여진 글자의 넓이를 반환합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>double <function>cpdf_stringwidth</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_stringwidth</function>함수는 문자열 <parameter>text</parameter>의 넓이를 반환합니다. 이것은 반드시 글꼴이 먼저 설정되어있어야 합니다
    </para>
			<para>
<function>cpdf_set_font</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-save">
		<refnamediv>
			<refname>cpdf_save</refname>
			<refpurpose>현재 환경을 저장합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_save</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_save</function>함수는 현재 환경을 저장합니다.. 이것은 postscript 명령 gsave처럼 동작합니다. 만약 당신이 개체(object)를 다른 개체에 영항을 미치지 않고 변형 또는 회전시키고자 할때 매우 유용합니다
    </para>
			<para>
				<function>cpdf_restore</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-restore">
		<refnamediv>
			<refname>cpdf_restore</refname>
			<refpurpose>이전에 저장된 환경을 복원합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_restore</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_restore</function>함수는 <function>cpdf_save</function>함수를 통해 저장된 환경을 복원합니다. 이것은 postscript 명령어 grestore 처럼 동작합니다.
오브젝트가 다른 오브젝트에 영향없이 변형 또는 회전하길 원할때 매우 유용합니다.
     <example>
					<title>Save/Restore</title>
					<programlisting>
&lt;?php
cpdf_save($pdf);
// do all kinds of rotations, transformations, ...
cpdf_restore($pdf)
?&gt;
      </programlisting>
				</example>
			</para>
			<para>
				<function>cpdf_save</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-translate">
		<refnamediv>
			<refname>cpdf_translate</refname>
			<refpurpose>좌표시스템의 원점을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_translate</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_translate</function>함수는 좌표시스템의 원점을 (<parameter>x-coor</parameter>,
     <parameter>y-coor</parameter>)로 설정합니다
</para>
<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
</para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-scale">
		<refnamediv>
			<refname>cpdf_scale</refname>
			<refpurpose>축척(scaling) 을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_scale</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-scale</parameter>
					</paramdef>
					<paramdef>double <parameter>y-scale</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_scale</function>함수는 양방향의 요소의 축척(scaling)을 설정합니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-rotate">
		<refnamediv>
			<refname>cpdf_rotate</refname>
			<refpurpose>회전을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_rotate</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>angle</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_rotate</function>함수는 각도 <parameter>angle</parameter>만큼 회전을 설정합니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setflat">
		<refnamediv>
			<refname>cpdf_setflat</refname>
			<refpurpose>평탄도(flatness)를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setflat</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setflat</function>함수는 평탄도를 0에서 100사의의 값으로 설정합니다.     </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setlinejoin">
		<refnamediv>
			<refname>cpdf_setlinejoin</refname>
			<refpurpose>linejoin인자를 설정합니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setlinejoin</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>long <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setlinejoin</function>함수는 0에서 2의 값을 가지는 linejoin인자를 설정합니다.
0 = miter, 1 = round, 2 = bevel.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setlinecap">
		<refnamediv>
			<refname>cpdf_setlinecap</refname>
			<refpurpose>linecap 인자 설정</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setlinecap</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setlinecap</function>함수는 lincap 인자를 0에서 2까지의 값으로 설정합니다.
0 = butt end, 1 = round, 2 = projecting square
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setmiterlimit">
		<refnamediv>
			<refname>cpdf_setmiterlimit</refname>
			<refpurpose>Sets miter limit</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setmiterlimit</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
     The <function>cpdf_setmiterlimit</function> function set the
     miter limit to a value greater or equal than 1.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setlinewidth">
		<refnamediv>
			<refname>cpdf_setlinewidth</refname>
			<refpurpose>선굵기를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setlinewidth</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>width</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setlinewidth</function>함수는 선굵기를 <parameter>width</parameter>로 설정합니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setdash">
		<refnamediv>
			<refname>cpdf_setdash</refname>
			<refpurpose>점선 패턴을 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setdash</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>white</parameter>
					</paramdef>
					<paramdef>double <parameter>black</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setdash</function>함수는 흰부분 <parameter>white</parameter>와 검은부분 <parameter>black</parameter>으로 점선 패턴을 설정합니다. 만약 둘다 0 이라면 실선으로 설정됩니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-newpath">
		<refnamediv>
			<refname>cpdf_newpath</refname>
			<refpurpose>새로운 패스(path)를 시작합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void 
       <function>cpdf_newpath</function>
					</funcdef>
					<paramdef>int 
       <parameter>pdf_document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_newpath</function>는 매개변수 <parameter>pdf_document</parameter>로 주어진 문서에 새로운 패스(path)를 시작합니다. 			
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-moveto">
		<refnamediv>
			<refname>cpdf_moveto</refname>
			<refpurpose>현재 위치를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_moveto</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int
       <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_moveto</function>함수는 좌표 <parameter>x-coor</parameter>와 <parameter>y-coor</parameter>를 현재 위치로 설정합니다.
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다		
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-rmoveto">
		<refnamediv>
			<refname>cpdf_rmoveto</refname>
			<refpurpose>현재 위치를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_rmoveto</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_rmoveto</function>함수는 좌표 <parameter>x-coor</parameter>와 <parameter>y-coor</parameter>에 비례하여 현재 위치를 설정합니다
</para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
     See also <function>cpdf_moveto</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-curveto">
		<refnamediv>
			<refname>cpdf_curveto</refname>
			<refpurpose>곡선을 그립니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_curveto</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x1</parameter>
					</paramdef>
					<paramdef>double <parameter>y1</parameter>
					</paramdef>
					<paramdef>double <parameter>x2</parameter>
					</paramdef>
					<paramdef>double <parameter>y2</parameter>
					</paramdef>
					<paramdef>double <parameter>x3</parameter>
					</paramdef>
					<paramdef>double <parameter>y3</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_curveto</function>함수는 현재 위치부터 (<parameter>x3</parameter>, <parameter>y3</parameter>) 
까지 (<parameter>x1</parameter>, <parameter>y1</parameter>)와 (<parameter>x2</parameter>, <parameter>y2</parameter>)를 통제점(control points)으로 사용하여 베지어(Bezier) 곡선을 그립니다. 
</para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
				<function>cpdf_moveto</function>,
              <function>cpdf_rmoveto</function>,
              <function>cpdf_rlineto</function>,
              <function>cpdf_lineto</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-lineto">
		<refnamediv>
			<refname>cpdf_lineto</refname>
			<refpurpose>선을 그립니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_lineto</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_lineto</function>함수는 현재 위치부터 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>)까지의 직선을 그립니다
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
     See also <function>cpdf_moveto</function>,
              <function>cpdf_rmoveto</function>,
              <function>cpdf_curveto</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-rlineto">
		<refnamediv>
			<refname>cpdf_rlineto</refname>
			<refpurpose>직선을 그려줍니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_rlineto</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_rlineto</function>함수는 현재점부터 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>)에 비례하여 선을 그립니다.
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
				<function>cpdf_moveto</function>,
              <function>cpdf_rmoveto</function>,
              <function>cpdf_curveto</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-circle">
		<refnamediv>
			<refname>cpdf_circle</refname>
			<refpurpose>원을 그립니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_circle</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>radius</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_circle</function> 함수는 중심점 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>) 에 반지름 <parameter>radius</parameter> 인 원을 그립니다
    </para>
			<para>
			선택적 매개변수 <parameter>mode</parameter> 는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다. 
    </para>
			<para>
     See also <function>cpdf_arc</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-arc">
		<refnamediv>
			<refname>cpdf_arc</refname>
			<refpurpose>원호를 그립니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_arc</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>radius</parameter>
					</paramdef>
					<paramdef>double <parameter>start</parameter>
					</paramdef>
					<paramdef>double <parameter>end</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_arc</function> 함수는 중심점 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>)와 반지름 <parameter>radius</parameter>, 시작 각도 <parameter>start</parameter>와 끝 각도 <parameter>end</parameter>로 호를 그립니다.     </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다.     </para>
			<para>
				<function>cpdf_circle</function>를 참조.     </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-rect">
		<refnamediv>
			<refname>cpdf_rect</refname>
			<refpurpose>직사각형을 그립니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_rect</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>width</parameter>
					</paramdef>
					<paramdef>double <parameter>height</parameter>
					</paramdef>
					<paramdef>int <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_rect</function>함수는 왼쪽 아래 모서리 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>) 지점에 직사각형을 그립니다. 이것의 넓이는 <parameter>widgth</parameter>로 설정됩니다.. 높이는 <parameter>height</parameter>로 설정됩니다
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-closepath">
		<refnamediv>
			<refname>cpdf_closepath</refname>
			<refpurpose>패스(path)를 닫습니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_closepath</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_closepath</function> 함수는 현재 패스(path)를 닫습니다. 
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-stroke">
		<refnamediv>
			<refname>cpdf_stroke</refname>
			<refpurpose>패스(path)를 따라 선을 그립니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
<function>cpdf_stroke</function>함수는 현재 패스를 따라 선을 그립니다    </para>
			<para>
<function>cpdf_closepath</function>,
              <function>cpdf_closepath_stroke</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-closepath-stroke">
		<refnamediv>
			<refname>cpdf_closepath_stroke</refname>
			<refpurpose>현재 패스(path)를 닫고 패스를 따라 선을 그려줍니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_closepath_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_closepath_stroke</function> 함수는 <function>cpdf_closepath</function>와 <function>cpdf_stroke</function>의 조합과 같습니다. 그다음 패스를 지웁니다. 
    </para>
			<para>
				<function>cpdf_closepath</function>,
<function>cpdf_stroke</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-fill">
		<refnamediv>
			<refname>cpdf_fill</refname>
			<refpurpose>현재 패스(path)를 칠합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_fill</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_fill</function>함수는 현재 패스(path)의 내부를 현재 채움색상으로 칠합니다
    </para>
			<para>
				<function>cpdf_closepath</function>,
              <function>cpdf_stroke</function>,
              <function>cpdf_setgray_fill</function>,
              <function>cpdf_setgray</function>,
              <function>cpdf_setrgbcolor_fill</function>,
              <function>cpdf_setrgbcolor</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-fill-stroke">
		<refnamediv>
			<refname>cpdf_fill_stroke</refname>
			<refpurpose>현재 패스(path)를 칠하고, 패스를 따라 선을 그려줍니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_fill_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_fill_stroke</function>함수는 현재 패스(path)를 따라 선을 그리고 내부를 채움색상으로 칠해줍니다. 
    </para>
			<para>
				<function>cpdf_closepath</function>,
              <function>cpdf_stroke</function>,
              <function>cpdf_fill</function>,
              <function>cpdf_setgray_fill</function>,
              <function>cpdf_setgray</function>,
              <function>cpdf_setrgbcolor_fill</function>,
              <function>cpdf_setrgbcolor</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-closepath-fill-stroke">
		<refnamediv>
			<refname>cpdf_closepath_fill_stroke</refname>
			<refpurpose>현재 패스(path)를 닫고, 칠해줍니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_closepath_fill_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_closepath_fill_stroke</function> 함수는 현재 패스(path)를 닫고, 내부를 현재 채움색상으로 칠하고 현재 패스(path)를 그려줍니다
    </para>
			<para>
				<function>cpdf_closepath</function>,
<function>cpdf_stroke</function>,
<function>cpdf_fill</function>,
<function>cpdf_setgray_fill</function>,
<function>cpdf_setgray</function>,
<function>cpdf_setrgbcolor_fill</function>,
<function>cpdf_setrgbcolor</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-clip">
		<refnamediv>
			<refname>cpdf_clip</refname>
			<refpurpose>현재 패스(path)로 잘라냅니다.</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_clip</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_clip</function> 함수는 모든 그림을 현재 패스(path)로 잘라냅니다. 
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setgray-fill">
		<refnamediv>
			<refname>cpdf_setgray_fill</refname>
			<refpurpose>채움색상을 음영값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setgray_fill</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setgray_fill</function>함수는 현재 음영값을 패스(path)를 채색하기위해 설정합니다. 
    </para>
			<para>
				<function>cpdf_setrgbcolor_fill</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setgray-stroke">
		<refnamediv>
			<refname>cpdf_setgray_stroke</refname>
			<refpurpose>그리기 색상을 음영값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setgray_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>gray value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setgray_stroke</function>함수는 현재 그리기 색상을 주어진 음영값으로 설정합니다.
    </para>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setgray">
		<refnamediv>
			<refname>cpdf_setgray</refname>
			<refpurpose>그리기와 채움 색상을 음영값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setgray</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>gray value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setgray_stroke</function>함수는 현재 그리기와 채움 색상을 주어진 음영값으로 설정합니다. 
    </para>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>,
              <function>cpdf_setrgbcolor_fill</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setrgbcolor-fill">
		<refnamediv>
			<refname>cpdf_setrgbcolor_fill</refname>
			<refpurpose>채움색상을 rgb 색상값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setrgbcolor_fill</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>red value</parameter>
					</paramdef>
					<paramdef>double <parameter>green value</parameter>
					</paramdef>
					<paramdef>double <parameter>blue value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setrgbcolor_fill</function>함수는 현재 채움색상을 rgb 색상값으로 설정합니다.
    </para>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>,
              <function>cpdf_setrgbcolor</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setrgbcolor-stroke">
		<refnamediv>
			<refname>cpdf_setrgbcolor_stroke</refname>
			<refpurpose>그리기 색상을 rgb색상값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setrgbcolor_stroke</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>red value</parameter>
					</paramdef>
					<paramdef>double <parameter>green value</parameter>
					</paramdef>
					<paramdef>double <parameter>blue value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>함수는 현재 그리기 색상을 주어진 rgb 색상값으로 설정합니다.
    </para>
			<para>
				<function>cpdf_setrgbcolor_fill</function>,
              <function>cpdf_setrgbcolor</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-setrgbcolor">
		<refnamediv>
			<refname>cpdf_setrgbcolor</refname>
			<refpurpose>그리기와 채움 색상을 rgb 값으로 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_setrgbcolor</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>red value</parameter>
					</paramdef>
					<paramdef>double <parameter>green value</parameter>
					</paramdef>
					<paramdef>double <parameter>blue value</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>함수는 현재 그리기와 채움색상을 주어진 rgb 색상값으로 설정합니다.
    </para>
			<para>
				<function>cpdf_setrgbcolor_stroke</function>,
              <function>cpdf_setrgbcolor_fill</function>를 참조.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-add-outline">
		<refnamediv>
			<refname>cpdf_add_outline</refname>
			<refpurpose>현재 페이지에 대한 북마크를 추가</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_add_outline</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>text</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_add_outline</function>은 현재 페이지의 요점을 나타내는<parameter>text</parameter>로 북마크를 작성합니다. 
     <example>
					<title>페이지 요점 추가</title>
					<programlisting>
&lt;?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
// ...
// some drawing
// ...
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?&gt;
      </programlisting>
				</example>
			</para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-set-page-animation">
		<refnamediv>
			<refname>cpdf_set_page_animation</refname>
			<refpurpose>페이지간의 변화를 설정합니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_set_page_animation</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>transition</parameter>
					</paramdef>
					<paramdef>double <parameter>duration</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_set_page_animation</function>함수는 뒤따르는 페이지들간의 트렌지션(transition)효과를 설정합니다.
    </para>
			<para>
				<parameter>transition</parameter>은 다음의 값을 가질 수 있습니다

     <simplelist>
					<member>0은 없음,</member>
					<member>
       1은 두개의 직선이 화면을 광범위하게 가로지르며 페이지를 나타냅니다,
      </member>
					<member>
       2는 여러개의 직선이 화면을 광범위하게 가로지르며 페이지를 나타냅니다,
      </member>
					<member>3은 사각형 형태로 페이지를 나타냅니다,</member>
					<member>
       4는 한개의 직선이 화면을 광범위하게 가로지르며 페이지를 나타냅니다,
      </member>
					<member>5는 이전페이지가 디졸브(dessolve)되며 페이지를 나타냅니다,</member>
					<member>
       6은 디졸브 효과가 화면 한쪽모서리로부터 다른쪽 모서리로 이동하며 나타납니다,
      </member>
					<member>
       7은 이전페이지가 단순히 새로운페이지로 교체되어 나타납니다. (기본값) </member>
				</simplelist>
			</para>
			<para>
     The value of <parameter>duration</parameter> is the number of seconds
     between page flipping.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-import-jpeg">
		<refnamediv>
			<refname>cpdf_import_jpeg</refname>
			<refpurpose>JPEG 이미지를 엽니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>int <function>cpdf_import_jpeg</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>string <parameter>file name</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>angle</parameter>
					</paramdef>
					<paramdef>double <parameter>width</parameter>
					</paramdef>
					<paramdef>double <parameter>height</parameter>
					</paramdef>
					<paramdef>double <parameter>x-scale</parameter>
					</paramdef>
					<paramdef>double <parameter>y-scale</parameter>
					</paramdef>
					<paramdef>int 
       <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_import_jpeg</function>함수는 <parameter>file
     name</parameter>에 저장된 이미지를 열어줍니다. 이미지의 형식은 jpeg이어야 합니다. 이미지는 현재 페이지의 (<parameter>x-coor</parameter>, <parameter>y-coor</parameter>) 위치에 놓여집니다. 이미지는 <parameter>angle</parameter>각도만큼 회전됩니다
</para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다. 
    </para>
			<para>
     See also <function>cpdf_place_inline_image</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-place-inline-image">
		<refnamediv>
			<refname>cpdf_place_inline_image</refname>
			<refpurpose>그림을 페이지에 위치시킵니다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_place_inline_image</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>int <parameter>image</parameter>
					</paramdef>
					<paramdef>double <parameter>x-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>y-coor</parameter>
					</paramdef>
					<paramdef>double <parameter>angle</parameter>
					</paramdef>
					<paramdef>double <parameter>width</parameter>
					</paramdef>
					<paramdef>double <parameter>height</parameter>
					</paramdef>
					<paramdef>int 
       <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_place_inline_image</function>함수는 php 이미지 함수로 작성된 이미지를 (<parameter>x-coor</parameter>,
     <parameter>y-coor</parameter>)지점에 위치시킵니다. 이미지는 동시에 확대 및 축소(scaled) 될수 있습니다.
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
			<para>
     See also <function>cpdf_import_jpeg</function>.
    </para>
		</refsect1>
	</refentry>
	<refentry id="function.cpdf-add-annotation">
		<refnamediv>
			<refname>cpdf_add_annotation</refname>
			<refpurpose>주석을 추가한다</refpurpose>
		</refnamediv>
		<refsect1>
			<title>설 명</title>
			<funcsynopsis>
				<funcprototype>
					<funcdef>void <function>cpdf_add_annotation</function>
					</funcdef>
					<paramdef>int <parameter>pdf document</parameter>
					</paramdef>
					<paramdef>double <parameter>llx</parameter>
					</paramdef>
					<paramdef>double <parameter>lly</parameter>
					</paramdef>
					<paramdef>double <parameter>urx</parameter>
					</paramdef>
					<paramdef>double <parameter>ury</parameter>
					</paramdef>
					<paramdef>string <parameter>title</parameter>
					</paramdef>
					<paramdef>string <parameter>content</parameter>
					</paramdef>
					<paramdef>int 
       <parameter>
							<optional>mode</optional>
						</parameter>
					</paramdef>
				</funcprototype>
			</funcsynopsis>
			<para>
				<function>cpdf_add_annotation</function>은 왼쪽 아래 (<parameter>llx</parameter>, <parameter>lly</parameter>) 와 오른쪽 위 (<parameter>urx</parameter>, <parameter>ury</parameter>) 에 주석을 추가합니다. 
    </para>
			<para>
선택적 매개변수 <parameter>mode</parameter>는 단위 길이를 결정합니다. 만약 그것이 0 이거나 생략되었을때는 기본단위로 현재 페이지에 사용된 값이 사용됩니다.. 그렇지 않고 좌표가 postscript points로 명기되어있다면 현재 단위는 무시됩니다
    </para>
		</refsect1>
	</refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
