 <reference id="ref.imap">
  <title>IMAP, POP3 그리고 NNTP 함수</title>
  <titleabbrev>IMAP</titleabbrev>

  <partintro>
   <simpara>
    이 함수를 작동시키려면, <option role="configure">--with-imap</option>
    옵션으로 PHP를 컴파일해야 한다. 이 옵션은 c-client 라이브러리가 요구된다.
    <ulink url="&url.imap;">&url.imap;</ulink>으로부터 최신 버전을 내려받아
    컴파일 하시오. 그리고 <filename>c-client/c-client.a</filename>파일을
    <filename>/usr/local/lib/libc-client.a</filename>로,또는 다른 링크 경로에
    복사하시오.  
    <filename>c-client/rfc822.h</filename>,
    <filename>mail.h</filename> 과 <filename>linkage.h</filename>를 
    <filename>/usr/local/include</filename>이나 다른 include경로에
    복사하시오.
   </simpara>
   <simpara>
    이 함수는 그 이름에도 불구하고, <acronym>IMAP</acronym> 프로토콜에만
    한정되어 있지 않다. 이함수의 기초를 이루는 c-client 라이브러리는 또한
    <acronym>NNTP</acronym>, <acronym>POP3</acronym> 그리고 로컬 메일함
    접근 메쏘드를 지원한다. 
   </simpara>
   <para>
    이 문서는 여기서 제공되는 함수에 관계된 모든 주제를 설명 할 수는 없다.
    더 자세한 정보는 c-client 라이브러리 소스의 문서에 제공된다 
		(<filename>docs/internal.txt</filename>). 
    그리고 다음 RFC 문서들도 이와 관련된 정보를 제공한다:
    <itemizedlist>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc821.html">RFC821</ulink>: Simple Mail
			 Transfer Protocol (SMTP).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc822.html">RFC822</ulink>: Standard for
			 ARPA internet text messages.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>: Internet
			 Message Access Protocol (IMAP) Version 4rev1. 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc1939.html">RFC1939</ulink>:  Post
			 Office Protocol Version 3 (POP3).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc977.html">RFC977</ulink>: Network News
			 Transfer Protocol (NNTP).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2076.html">RFC2076</ulink>: Common
			 Internet Message Headers.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink> , <ulink
				url="&url.rfc;rfc2046.html">RFC2046</ulink> , <ulink
				url="&url.rfc;rfc2047.html">RFC2047</ulink> , <ulink
				url="&url.rfc;rfc2048.html">RFC2048</ulink> &amp; <ulink
				url="&url.rfc;rfc2049.html">RFC2049</ulink>: Multipurpose
			 Internet Mail Extensions (MIME).
      </simpara>
     </listitem>
    </itemizedlist> 
    더 자세한 사항은 David Wood씨가 저술한  
		<ulink url="&url.email.book;">Programming Internet Email</ulink>
		과 Dianna Mullet씨와 Kevin Mullet씨가 같이 저술한 
    <ulink url="&url.imap.book;">Managing IMAP</ulink>를 참고하시오. 
   </para>
  </partintro>

  <refentry id="function.imap-append">
   <refnamediv>
    <refname>imap_append</refname> 
    <refpurpose>
     특정 메일박스에 문자열 메시지를 덧붙인다.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_append</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     성공하면 true를 에러가 발생하면 false를 리턴한다.
    </para>  
    <para>
     <function>imap_append</function>함수는 특정 
     메일박스<parameter>mbox</parameter>에 문자열 메시지를 덧붙인다.
     선택적 인수<parameter>flags</parameter>가 부여되면,
     <parameter>flags</parameter>도 그 메일박스에 쓴다.
    </para>
    <para>
     Cyrus IMAP 서버에 접근할 때에는, end-of-line terminator로 "\n" 대신에
     "\r\n"을 사용해야 한다. 그렇지 않으면 실패할 것이다.
    </para>
    <para>     
     <example>
      <title><function>imap_append</function> example</title>
      <programlisting role="php">
$stream = imap_open("{your.imap.host}INBOX.Drafts","username", "password");

$check = imap_check($stream);
print "Msg Count before append: ". $check->Nmsgs."\n";

imap_append($stream,"{your.imap.host}INBOX.Drafts"
                   ,"From: me@my.host\r\n"
                   ."To: you@your.host\r\n"
                   ."Subject: test\r\n"
                   ."\r\n"
                   ."this is a test message, please ignore\r\n"
                   );

$check = imap_check($stream);
print "Msg Count after append : ". $check->Nmsgs."\n";

imap_close($stream);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-base64">
   <refnamediv>
    <refname>imap_base64</refname>
    <refpurpose>BASE64로 엔코딩된 텍스트를 디코딩한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_base64</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_base64</function>함수는 BASE-64로 엔코딩되어 있는
     텍스트를 디코딩해준다
     (<ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>의
     Section 6.8을 보라).
     디코딩된 메시지가 문자열로 리턴되어 진다.
    </para>
    <para>
     See also <function>imap_binary</function>.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.imap-body">
   <refnamediv>
    <refname>imap_body</refname>
    <refpurpose>메시지의 본문을 읽어온다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_body</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int <parameter><optional>flags</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_body</function> returns the body of the message,
     numbered <parameter> msg_number</parameter> in the current
     mailbox. The optional <parameter>flags</parameter> are a bit mask
     with one or more of the following:
     <function>imap_body</function>함수는 메시지의 본문을 리턴한다.
     즉, 현재메일박스의 <parameter> msg_number</parameter>번째의 메시지
     의 본문을 읽어 오게 된다.
     선택적 인수 <parameter>flags</parameter>는 다음 리스트의 비트마스크
     가 된다:
     <itemizedlist>
      <listitem>
       <simpara>
	FT_UID - The <parameter>msgno</parameter> is a UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_PEEK - Do not set the \Seen flag if not already set
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_INTERNAL - The return string is in internal format, will
	not canonicalize to CRLF.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
	  <para>
     <function>imap_body</function>함수는 메시지 본문을 완전히 복사해 올 것이다.
     multipart MIME-encoded 메시지의 한 부분을 뽑아내기 위해서는
     본문의 구조를 분석하는 <function>imap_fetchstructure</function>함수와
     한개의 본문 구성요소의 복사물을 뽑아오는 
     <function>imap_fetchbody</function>함수를 이용해야 한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-check">
   <refnamediv>
    <refname>imap_check</refname>
    <refpurpose>현재 메일 박스를 체크한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_check</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     현재 메일 박스에 대한 정보를 리턴한다. 실패하면 FALSE를 리턴한다.
    </para>  
    <para> 
     <function>imap_check</function> 함수는 서버에서 현재 메일박스의
     상태를 체크하고 다음 속성을 갖는 객체로 정보를 리턴한다:
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Date - last change of mailbox contents
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Driver - protocol used to access this mailbox: POP3, IMAP, NNTP
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Mailbox - the mailbox name
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Nmsgs - number of messages in the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Recent - number of recent messages in the mailbox
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-close">
   <refnamediv>
    <refname>imap_close</refname>
    <refpurpose>IMAP 스트림을 닫는다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_close</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     imap 스트림을 닫는다.
     선택적 인수 <parameter>flag</parameter>를 CL_EXPUNGE로 세팅하면,
     스트림을 닫기 전에 조용히(silently) 메일 박스를 지울 것이다.
     삭제 마크된 메시지만 모두 삭제한다. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-createmailbox">
   <refnamediv>
    <refname>imap_createmailbox</refname>
    <refpurpose>새 메일 박스를 만든다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_createmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     <function>imap_createmailbox</function>는
     <parameter>mbox</parameter>인수에 주어진 이름으로 새 메일 박스를 만든다.
     국제적인 문자들을 포함한 이름이면  <function>imap_utf7_encode</function>
     함수로 인코딩되어야 한다.
    </para> 
    <para>
     성공하면 true를 실패하면 false를 리턴한다.
    </para>
    <para>
     See also <function>imap_renamemailbox</function>,
     <function>imap_deletemailbox</function> and
     <function>imap_open</function> for the format 
     of <parameter>mbox</parameter> names. 
    </para>
    <para>     
     <example>
      <title><function>imap_createmailbox</function> example</title>
      <programlisting>
$mbox = imap_open("{your.imap.host}","username","password",OP_HALFOPEN)
     || die("can't connect: ".imap_last_error());

$name1 = "phpnewbox";
$name2 = imap_utf7_encode("phpnewb&ouml;x");

$newname = $name1;

echo "Newname will be '$name1'&lt;br>\n";

# we will now create a new mailbox "phptestbox" in your inbox folder,
# check its status after creation and finaly remove it to restore
# your inbox to its initial state 
if(@imap_createmailbox($mbox,imap_utf7_encode("{your.imap.host}INBOX.$newname"))) {
  $status = @imap_status($mbox,"{your.imap.host}INBOX.$newname",SA_ALL);
  if($status) {
    print("your new mailbox '$name1' has the following status:&lt;br>\n");
    print("Messages:   ". $status->messages   )."&lt;br>\n";
    print("Recent:     ". $status->recent     )."&lt;br>\n";
    print("Unseen:     ". $status->unseen     )."&lt;br>\n";
    print("UIDnext:    ". $status->uidnext    )."&lt;br>\n";
    print("UIDvalidity:". $status->uidvalidity)."&lt;br>\n";
    
    if(imap_renamemailbox($mbox,"{your.imap.host}INBOX.$newname","{your.imap.host}INBOX.$name2")) {
      echo "renamed new mailbox from '$name1' to '$name2'&lt;br>\n";
      $newname=$name2;
    } else {
      print "imap_renamemailbox on new mailbox failed: ".imap_last_error()."&lt;br>\n";
    }
  } else {
    print  "imap_status on new mailbox failed: ".imap_last_error()."&lt;br>\n";
  }
  if(@imap_deletemailbox($mbox,"{your.imap.host}INBOX.$newname")) {
    print "new mailbox removed to restore initial state&lt;br>\n";
  } else {
    print  "imap_deletemailbox on new mailbox failed: ".implode("&lt;br>\n",imap_errors())."&lt;br>\n";
  }
  
} else {
  print  "could not create new mailbox: ".implode("&lt;br>\n",imap_errors())."&lt;br>\n";
}

imap_close($mbox);
      </programlisting>
     </example>
    </para>     
   </refsect1>
  </refentry>

  <refentry id="function.imap-delete">
   <refnamediv>
    <refname>imap_delete</refname>
    <refpurpose>
     현재 메일 박스에서 삭제될 메시지를 표시한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_delete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     true를 리턴한다.
    </para> 
    <para> 
     <function>imap_delete</function>함수는
     <parameter>msg_number</parameter>번의 메시지를 지움 표시 한다.
     선택적 인수<parameter>flags</parameter>는 오직 하나의 옵션만 있다.
     즉, <parameter>msg_number</parameter>를 <parameter>UID</parameter>로
     취급할것인지 함수에게 알려주는 <parameter>FT_UID</parameter>의 옵션만 있다.
     지움 표시된 메시지는 <function>imap_expunge</function>함수나 
     CL_EXPUNGE 옵션을 갖는 <function>imap_close</function> 함수가 불려지기
     전까지는 삭제되지 않는다.
    </para>
    <para>     
     <example>
      <title><function>imap_delete</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}INBOX", "username", "password")
    || die ("can't connect: " . imap_last_error());

$check = imap_mailboxmsginfo ($mbox);
print "Messages before delete: " . $check->Nmsgs . "&lt;br>\n" ;
imap_delete ($mbox, 1);
$check = imap_mailboxmsginfo ($mbox);
print "Messages after  delete: " . $check->Nmsgs . "&lt;br>\n" ;
imap_expunge ($mbox);
$check = imap_mailboxmsginfo ($mbox);
print "Messages after expunge: " . $check->Nmsgs . "&lt;br>\n" ;
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-deletemailbox">
   <refnamediv>
    <refname>imap_deletemailbox</refname>
    <refpurpose>메일 박스를 지운다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_deletemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>imap_deletemailbox</function>함수는 특정 메일 박스를
     지운다 (<parameter>mbox</parameter> 이름의 형식을 알려면
      <function>imap_open</function>함수를 보시오).
    </para>  
    <para>
     성공하면 true를 실패하면 false를 리턴한다.
    </para>
    <para>
     See also <function>imap_createmailbox</function>, 
     <function>imap_renamemailbox</function>, and 
     <function>imap_open</function> for the format of
     <parameter>mbox</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-expunge">
   <refnamediv>
    <refname>imap_expunge</refname>
    <refpurpose>지움 표시된 모든 메시지를 완전히 삭제한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_expunge</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     <function>imap_expunge</function>함수는 <function>imap_delete</function>, 
     <function>imap_mail_move</function> 또는  
     <function>imap_setflag_full</function>함수에 의해 지움 표시된 모든
     메시지를 완전히 삭제한다.
    </para>
    <para>
     Returns true.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchbody">
   <refnamediv>
    <refname>imap_fetchbody</refname>
    <refpurpose>
     메시지의 본문중에서 특정 부분을 페치한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_fetchbody</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>string <parameter>part_number</parameter></paramdef>
      <paramdef>flags 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 지정된 메시지의 본문중에서 특정 섹션을 텍스트 문자열로 페치하고,
     그 텍스트 문자열을 가져온다.
     섹션의 요구사양(specification)은 IMAP 4 요구사양(specification)대로
     바디 부분(body part) 목록의 색인으로 구분되는 
     단락의 정수(integer)문자열이다.
     본문 각 부분들은 이 함수에 의해 디코딩되지 않는다.
    </para>
    <para>
     <function>imap_fetchbody</function>함수에 대한 옵션은 다음 리스트의
     하나 이상의 비트 마스크(bitmask)값이다:
     <itemizedlist>
      <listitem>
       <simpara>
	FT_UID - The <parameter>msg_number</parameter> is a UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_PEEK - Do not set the \Seen flag if not already set
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_INTERNAL - The return string is in "internal" format,
	without any attempt to canonicalize CRLF.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchstructure">
   <refnamediv>
    <refname>imap_fetchstructure</refname> 
    <refpurpose>
     특별한 메시지의 구조체를 읽어온다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object
       <function>imap_fetchstructure</function>
      </funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 주어진 메시지의 구조화된 모든 정보를 페치한다.
     선택적 인수<parameter>flags</parameter>는 오직 하나의 옵션만 있다.
     즉, <parameter>msg_number</parameter>를 <parameter>UID</parameter>로
     취급할것인지 함수에게 알려주는 <parameter>FT_UID</parameter>의 옵션만 있다.
     리턴된 객체는 envelope, internal date, size, flags와 각 mime첨부파일과
     비슷한 객체를 갖는 본문 구조체이다.
     리턴되는 객체의 구조는 다음과 같다:
    </para>
    <para>
     <table>
      <title>
       <function>imap_fetchstructure</function>에 의해 리턴되는 객체
      </title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>type</entry>
	 <entry>Primary body type</entry>
	</row>
	<row>
	 <entry>encoding</entry>
	 <entry>Body transfer encoding</entry>
	</row>
	<row>
	 <entry>ifsubtype</entry>
	 <entry>True if there is a subtype string</entry>
	</row>
	<row>
	 <entry>subtype</entry>
	 <entry><acronym>MIME</acronym> subtype</entry>
	</row>
	<row>
	 <entry>ifdescription</entry>
	 <entry>True if there is a description string</entry>
	</row>
	<row>
	 <entry>description</entry>
	 <entry>Content description string</entry>
	</row>
	<row>
	 <entry>ifid</entry>
	 <entry>True if there is an identification string</entry>
	</row>
	<row>
	 <entry>id</entry>
	 <entry>Identification string</entry>
	</row>
	<row>
	 <entry>lines</entry>
	 <entry>Number of lines</entry>
	</row>
	<row>
	 <entry>bytes</entry>
	 <entry>Number of bytes</entry>
	</row>
	<row>
	 <entry>ifdisposition</entry>
	 <entry>True if there is a disposition string</entry>
	</row>
	<row>
	 <entry>disposition</entry>
	 <entry>Disposition string</entry>
	</row>
	<row>
	 <entry>ifdparameters</entry>
	 <entry>True if the dparameters array exists</entry>
	</row>
	<row>
	 <entry>dparameters</entry>
	 <entry>Disposition parameter array</entry>
	</row>
	<row>
	 <entry>ifparameters</entry>
	 <entry>True if the parameters array exists</entry>
	</row>
	<row>
	 <entry>parameters</entry>
	 <entry><acronym>MIME</acronym> parameters array</entry>
	</row>
	<row>
	 <entry>parts</entry>
	 <entry>Array of objects describing each message part</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <orderedlist>
      <listitem>
       <para>
	dparameters is an array of objects where each object has an
	"attribute" and a "value" property.
       </para>
      </listitem>
      <listitem>
       <para>
	Parameter is an array of objects where each object has an
	"attributte" and a "value" property.
       </para>
      </listitem>
      <listitem>
       <para>
	Parts is an array of objects identical in structure to the
	top-level object, with the limitation that it cannot contain
	further 'parts' objects.
       </para>
      </listitem>
     </orderedlist>
    </note>
    <para>
     <table>
       <title>Primary body type</title>
       <tgroup cols="2">
        <tbody>
        <row><entry>0</entry><entry>text</entry></row>
        <row><entry>1</entry><entry>multipart</entry></row>
        <row><entry>2</entry><entry>message</entry></row>
        <row><entry>3</entry><entry>application</entry></row>
        <row><entry>4</entry><entry>audio</entry></row>
        <row><entry>5</entry><entry>image</entry></row>
        <row><entry>6</entry><entry>video</entry></row>
        <row><entry>7</entry><entry>other</entry></row>
        </tbody>
       </tgroup>
     </table>
    </para>
    <para>
     <table>
       <title>Transfer encodings</title>
       <tgroup cols="2">
        <tbody>
        <row><entry>0</entry><entry>7BIT</entry></row>
        <row><entry>1</entry><entry>8BIT</entry></row>
        <row><entry>2</entry><entry>BINARY</entry></row>
        <row><entry>3</entry><entry>BASE64</entry></row>
        <row><entry>4</entry><entry>QUOTED-PRINTABLE</entry></row>
        <row><entry>5</entry><entry>OTHER</entry></row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-headerinfo">
   <refnamediv>
    <refname>imap_headerinfo</refname>
    <refpurpose>메시지의 머릿글을 읽어온다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>object <function>imap_headerinfo</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
     <paramdef>int 
      <parameter><optional>fromlength</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>subjectlength</optional></parameter>
     </paramdef>
     <paramdef>string 
      <parameter><optional>defaulthost</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     이 함수는 다양한 머릿글 구성요소의 객체를 가져온다.
    </para>
    <para>  
     <informalexample>
      <literallayout>
       remail, date, Date, subject, Subject, in_reply_to, message_id,
       newsgroups, followup_to, references

message flags:
   Recent -  'R' if recent and seen, 
             'N' if recent and not seen, 
             ' ' if not recent
   Unseen -  'U' if not seen AND not recent, 
             ' ' if seen OR not seen and recent
   Answered -'A' if answered, 
             ' ' if unanswered
   Deleted - 'D' if deleted, 
             ' ' if not deleted
   Draft -   'X' if draft, 
             ' ' if not draft
   Flagged - 'F' if flagged, 
             ' ' if not flagged

NOTE that the Recent/Unseen behavior is a little odd. If you want to
know if a message is Unseen, you must check for

Unseen == 'U' || Recent == 'N'

toaddress (full to: line, up to 1024 characters)

to[] (returns an array of objects from the To line, containing):
   personal
   adl
   mailbox
   host

fromaddress (full from: line, up to 1024 characters)

from[] (returns an array of objects from the From line, containing):
   personal
   adl
   mailbox
   host

ccaddress (full cc: line, up to 1024 characters)
cc[] (returns an array of objects from the Cc line, containing):
   personal
   adl
   mailbox
   host

bccaddress (full bcc line, up to 1024 characters)
bcc[] (returns an array of objects from the Bcc line, containing):
   personal
   adl
   mailbox
   host

reply_toaddress (full reply_to: line, up to 1024 characters)
reply_to[] (returns an array of objects from the Reply_to line,
containing):
   personal
   adl
   mailbox
   host

senderaddress (full sender: line, up to 1024 characters)
sender[] (returns an array of objects from the sender line, containing):
   personal
   adl
   mailbox
   host

return_path (full return-path: line, up to 1024 characters)
return_path[] (returns an array of objects from the return_path line,
containing):
   personal
   adl
   mailbox
   host

udate (mail message date in unix time)

fetchfrom (from line formatted to fit <parameter>fromlength</parameter> 
characters)

fetchsubject (subject line formatted to fit <parameter>subjectlength</parameter> characters)
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-header">
   <refnamediv>
    <refname>imap_header</refname>
    <refpurpose>Read the header of the message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>object <function>imap_header</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
     <paramdef>int 
      <parameter><optional>fromlength</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>subjectlength</optional></parameter>
     </paramdef>
     <paramdef>string 
      <parameter><optional>defaulthost</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     This is an alias to <function>imap_headerinfo</function>
     and is identical to this in any way.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-parse-headers">
   <refnamediv>
    <refname>imap_rfc822_parse_headers</refname>
    <refpurpose>문자열에서 메일 헤더를 해석한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_rfc822_parse_headers</function></funcdef>
      <paramdef>string <parameter>headers</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>defaulthost</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이함수는 다양한 헤더 구성요소의 객체를 돌려준다.
     <function>imap_header</function>함수와 비슷하지만,
     flags 인수를 갖지 않는 것이 다르다.
    </para>
   </refsect1>
  </refentry>

<refentry id="function.imap-headers">
   <refnamediv>
    <refname>imap_headers</refname>
    <refpurpose>
     메일박스에서 모든 메시지의 헤더를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_headers</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Returns an array of string formatted with header info. One
     element per mail message.
     헤더 정보를 갖는 형식화된 문자열의 배열을 돌려준다.
     각 메일 메시지당 하나의 배열요소를 갖는다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-listmailbox">
   <refnamediv>
    <refname>imap_listmailbox</refname>
    <refpurpose>메일박스의 목록을 읽어온다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Returns an array containing the names of the mailboxes.
     See <function>imap_getmailboxes</function> for a description
     of <parameter>ref</parameter> and <parameter>pattern</parameter>.
     메일박스의 이름을 포함한 배열을 돌려준다.
     더 자세한 것은 
     <parameter>ref</parameter>과 <parameter>pattern</parameter>의
     <function>imap_getmailboxes</function>를 보라
    </para>
    <para>
     <example>
      <title><function>imap_listmailbox</function> example</title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","username","password",OP_HALFOPEN)
      || die("can't connect: ".imap_last_error());
 
$list = imap_listmailbox($mbox,"{your.imap.host}","*");
if(is_array($list)) {
  reset($list);
  while (list($key, $val) = each($list))
    print imap_utf7_decode($val)."&lt;br>\n";
} else
  print "imap_listmailbox failed: ".imap_last_error()."\n";
 
imap_close($mbox);                                                                
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-getmailboxes">
   <refnamediv>
    <refname>imap_getmailboxes</refname>
    <refpurpose>
     메일박스의 목록을 읽어오고, 각 메일박스에 대한 상세한 정보를 돌려준다.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getmailboxes</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     메일박스 정보를 포함하는 객체의 배열을 돌려준다. 각 객체는
     다음 속성을 갖는다.
     메일박스의 완전한 이름을 갖는 <parameter>name</parameter>속성;
     메일 박스안에 포함된 분류체계(hierarchy)의 부분을 위한 
     분류체계 한정자(hirerarchy delimiter) <parameter>delimiter</parameter>속성;
     그리고 <parameter>attributes</parameter>. <parameter>Attributes</parameter>
     속성은 다음에 대해서 테스트될 수 있는 비트마스크(bitmask)값이다:
     <itemizedlist>
      <listitem>
       <simpara>
	LATT_NOINFERIORS - This mailbox has no "children" (there are
	no mailboxes below this one).
       </simpara>
      </listitem>
     <listitem>
       <simpara>
	LATT_NOSELECT - This is only a container, not a mailbox - you
	cannot open it.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	LATT_MARKED - This mailbox is marked. Only used by UW-IMAPD.
       </simpara>
      </listitem> 
      <listitem>
       <simpara> 
	LATT_UNMARKED - This mailbox is not marked. Only used by
	UW-IMAPD.
       </simpara>
      </listitem> 
     </itemizedlist>
    </para>
    <para>
     메일 박스 이름이 출력가능한 아스키(ASCII)코드 범위 밖의
     국제적인 문자를 포함한다면 인코딩해야 할것이고,
     <function>imap_utf7_decode</function>함수로 디코딩해야 할것이다.
    </para>
    <para>
     <parameter>ref</parameter>인수는 <function>imap_open</function>함수
     에서와 같이 서버의 사양이면 된다.그리고 <parameter>pattern</parameter>
     인수는 검색을 시작할 메일 박스의 위치이다.
     모든 메일 박스에 적용시키려면 <parameter>pattern</parameter>인수에
     '*'라고 하면 된다. 
    </para>
    <para>
     <parameter>pattern</parameter>인수로 쓸 수 있는 두개의 특별한
     문자들이 있다 : '*' 과 '%'문자이다.
     '*'은 모든 메일박스를 돌려줌을 의미한다.
     <parameter>pattern</parameter>인수에 '*'를 쓰면 모든 메일 박스 
     체계(hierarchy)
     의 목록을 얻을 수 있다. '%'는 현재 레벨만을 돌려준다는 걸 의미한다.
     <parameter>pattern</parameter>인수에 '%'를 쓰면 최상위 레벨의 메일박스
     만을 돌려줄 것이다; UW_IMAPD에 관해 '~/mail/%'을 쓰면  ~/mail 디렉토리의
     모든 메일 박스를 돌려주지만, 하위디렉토리는 포함되지 않는다.
    </para>
    <para>
     <example>
      <title><function>imap_getmailboxes</function> example</title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","username","password",OP_HALFOPEN)
      || die("can't connect: ".imap_last_error());
 
$list = imap_getmailboxes($mbox,"{your.imap.host}","*");
if(is_array($list)) {
  reset($list);
  while (list($key, $val) = each($list))
  {
    print "($key) ";
    print imap_utf7_decode($val->name).",";
    print "'".$val->delimiter."',";
    print $val->attributes."&lt;br>\n";
  }
} else
  print "imap_getmailboxes failed: ".imap_last_error()."\n";
 
imap_close($mbox);                                                                
      </programlisting>
     </example>
    </para>
		<para>
		 See also <function>imap_getsubscribed</function>.
		</para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-listsubscribed">
   <refnamediv>
    <refname>imap_listsubscribed</refname>
    <refpurpose>subscribed된 모든 메일박스의 목록을 보여준다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     subscribed된 모든 메일박스의 배열을 돌려준다. 이함수는 거의
     <function>imap_listmailbox</function>함수와 동일하다.
     단지 로그인 한 유저가 subscribed한 메일박스만 돌려줄 뿐이다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-getsubscribed">
   <refnamediv>
    <refname>imap_getsubscribed</refname>
    <refpurpose>subscribed된 모든 메일 박스의 목록을 보여준다.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_getmailboxes</function>함수와 동일하다.
     단 유저가 subscribed한 메일박스만 돌려줄 뿐이다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail-copy">
   <refnamediv>
    <refname>imap_mail_copy</refname>
    <refpurpose>메일박스에 특정 메시지를 복사한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_copy</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     성공하면 true를 에러가 발생하면 false를 돌려준다.
    </para>  
    <para> 
     <parameter>msglist</parameter>인수에 의해 지정된 메일 메시지를 
     특정 메일 박스에 복사한다.<parameter>msglist</parameter>인수는
     메시지 번호만이 아니라 범위도 된다
     (<ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>문서에 기술 되어있다).
    </para>
    <para>
     Flags인수는 다음 옵션들의 비트 마스트(bitmask)값이다.
     <itemizedlist>
      <listitem>
       <simpara>
	CP_UID - the sequence numbers contain UIDS
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CP_MOVE - Delete the messages from the current mailbox after
	copying
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail-move">
   <refnamediv>
    <refname>imap_mail_move</refname>
    <refpurpose>메일박스에 특정 메시지를 이동시킨다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_move</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <parameter>msglist</parameter>인수에 의해 지정된 메일 메시지를
     특정 메일 박스에 이동시킨다.<parameter>msglist</parameter>인수는
     메시지 번호만이 아니라 범위도 된다
     (<ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>문서에 기술 되어있다).
    </para>
    <para>
     Flags인수는 비트마스크(bitmask)값이고 오직 하나의 옵션만을 갖는다
     <itemizedlist>
      <listitem>
       <simpara>
	CP_UID - the sequence numbers contain UIDS
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     성공하면 true를 에러가 발생하면 false를 리턴한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-num-msg">
   <refnamediv>
    <refname>imap_num_msg</refname>
    <refpurpose>
     현재 메일박스의 메시지 갯수를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_msg</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     현재 메일박스의 메시지 갯수를 돌려준다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-num-recent">
   <refnamediv>
    <refname>imap_num_recent</refname>
    <refpurpose>현재 메일박스의 새로운 메시지 갯수를 돌려준다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_recent</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     현재 메일박스의 새로운 메시지 갯수를 돌려준다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-open">
   <refnamediv>
    <refname>imap_open</refname>
    <refpurpose>메일박스에 IMAP 스트림(stream)을 연다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_open</function></funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     성공하면 IMAP 스트림(stream)을 돌려주고 에러가 발생하면 false를 넘겨준다.
     이 함수는 POP3나 NNTP서버의 스트림(stream)을 열 때에도 사용된다.
     하지만 어떤 함수나 특성은 IMAP 서버에 적용되지 않는다. 
    </para>
    <para>
     메일박스의 이름은 서버와 관련한 서버 부분과 메일박스 경로로 구성된다.
     특별한 이름을 갖는 INBOX는 현재 유저의 개인 메일박스이다.
     서버 부분은 '{'과 '}'로 둘려싸여지고, 서버의 이름이나 ip 주소, 프로토콜
     사양('/'로 시작하는곳) 그리고 ':'로 시작하는 선택적인 포트로 구성된다.
     서버 부분은 모든 메일박스의 필수 인수이다. 메일박스 이름이 출력가능한
     아스키(ASCII)범위를 벗어난 국제적인 문자를 포함하면 
     <function>imap_utf7_encode</function>함수로 인코딩되어야 한다.
    </para>
    <para>
     옵션은 다음을 한개이상 포함하는 비트마스크(bit mask)값이다.
     <itemizedlist>
      <listitem>
       <simpara>
	OP_READONLY - Open mailbox read-only
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_ANONYMOUS - Dont use or update a
	<filename>.newsrc</filename> for news (NNTP only)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_HALFOPEN - For IMAP and NNTP names, open a connection but
	dont open a mailbox
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	CL_EXPUNGE - Expunge mailbox automatically upon mailbox close
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     로컬 머신의 143포트에서 서비스되고 있는 IMAP서버에 접속하려면,
     다음과 같이 하시오:
     <informalexample>
      <programlisting role="php"> 
$mbox = imap_open ("{localhost:143}INBOX", "user_id", "password");
      </programlisting>
     </informalexample>
     로컬 머신의 110포트에서 서비스되고 있는 POP3서버에 접속하려면,
     다음과 같이 하시오:
     <informalexample>
      <programlisting role="php">
$mbox = imap_open ("{localhost/pop3:110}INBOX", "user_id", "password");
      </programlisting>
     </informalexample>
     로컬 머신의 119포트에서 서비스되고 있는 NNTP서버에 접속하려면,
     다음과 같이 하시오:
     <informalexample>
      <programlisting role="php">
$nntp = imap_open ("{localhost/nntp:119}comp.test", "", "");
      </programlisting>
     </informalexample>
     원격 서버에 접속하려면 "localhost"대신에 접속할 원격의서버의 서버이름 
     또는 아이피 주소를 쓰시오.
    </para>
    <para>
     <example>
      <title><function>imap_open</function> example</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host:143}", "username", "password");

echo "&lt;p>&lt;h1>Mailboxes&lt;/h1>\n";
$folders = imap_listmailbox ($mbox, "{your.imap.host:143}", "*");

if ($folders == false) {
    echo "Call failed&lt;br>\n";
} else {
    while (list ($key, $val) = each ($folders)) {
        echo $val."&lt;br>\n";
    }
}

echo "&lt;p>&lt;h1>Headers in INBOX&lt;/h1>\n";
$headers = imap_headers ($mbox);

if ($headers == false) {
    echo "Call failed&lt;br>\n";
} else {
    while (list ($key,$val) = each ($headers)) {
        echo $val."&lt;br>\n";
    }
}

imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-ping">
   <refnamediv>
    <refname>imap_ping</refname>
    <refpurpose>IMAP 스트림(stream)이 아직 사용가능한지 체크한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_ping</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Returns true if the stream is still alive, false otherwise.
     스트림(stream)이 아직 살아있다면 true를 리턴하고, 그외에는 false를 리턴한다
    </para>
    <para>
     <function>imap_ping</function>함수는 스트림(stream)이 아직 사용가능한지
     보기 위해 스트림에 핑(ping)을 한다. 이 함수는 새로운 메일을 발견한다;
     이 함수는 주기적인 "새로운 메일 점검"은 물론 타임아웃(timeout)을
     갖는 서버에게 "접속 유지"를 위한 방법으로 선호된다.
     ( PHP 스크립트는 오랜 시간동안 실행되지 않기 때문에, 나는 
     이 함수가 거의 유용하지 않을 것이라고 생각한다. )
     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-renamemailbox">
   <refnamediv>
    <refname>imap_renamemailbox</refname>
    <refpurpose>메일박스의 이름을 바꾼다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_renamemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>old_mbox</parameter></paramdef>
      <paramdef>string <parameter>new_mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     이 함수는 메일박스의 이름을 바꾼다(<parameter>mbox</parameter>이름의
     형식은 <function>imap_open</function>함수를 보면 알수 있다)
    </para>
    <para>
     성공하면 true를 리턴하고 에러가 발생하면 false를 리턴한다.
    </para>
    <para>
     <parameter>mbox</parameter>형식에 대해서는 또한
     <function>imap_createmailbox</function>함수, 
     <function>imap_deletemailbox</function>함수, 그리고
     <function>imap_open</function>함수를 보시오.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-reopen">
   <refnamediv>
    <refname>imap_reopen</refname>
    <refpurpose>새로운 메일박스에 IMAP 스트림(stream)을 다시 연다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_reopen</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     이 함수는 IMAP 또는 NNTP 서버에서 새로운 메일박스에 특정 스트림(stream)을
     다시 연다.
    </para>
    <para>
     옵션은 다음의 한개 이상의 비트마스트(bit mask)값이다:
     <itemizedlist>
      <listitem>
       <simpara>
	OP_READONLY - Open mailbox read-only
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_ANONYMOUS - Dont use or update a
	<filename>.newsrc</filename> for news (NNTP only)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_HALFOPEN - For IMAP and NNTP names, open a connection but
	dont open a mailbox.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CL_EXPUNGE - Expunge mailbox automatically upon mailbox close
	(see also <function>imap_delete</function> and
	<function>imap_expunge</function>)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>  
    <para>
     성공하면 true를 리턴하고 에러가 발생하면 false를 리턴한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-subscribe">
   <refnamediv>
    <refname>imap_subscribe</refname>
    <refpurpose>메일 박스에 Subscribe한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_subscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     새로운 메일박스를 Subscribe한다.
    </para>
    <para>
     성공하면 true를 리턴하고 에러가 발생하면 false를 리턴한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-undelete">
   <refnamediv>
    <refname>imap_undelete</refname> 
    <refpurpose>
     지움 표시된 메시지의 지움 표시를 제거한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_undelete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     이함수는 특정 메시지의 지움 플래그(deletion flag)를 제거한다.
     여기서 특정 메시지는 <function>imap_delete</function>함수나
     <function>imap_mail_move</function>함수에 의해서 지움 표시된 메시지이다.
    </para>
    <para>
     성공하면 true를 리턴하고 에러가 발생하면 false를 리턴한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-unsubscribe">
   <refnamediv>
    <refname>imap_unsubscribe</refname>
    <refpurpose>메일박스를 Unsubscribe한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_unsubscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     특정 메일박스에서 Unsubscribe한다.
    </para>
    <para>
     성공하면 true를 리턴하고 에러가 발생하면 false를 리턴한다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-qprint">
   <refnamediv>
    <refname>imap_qprint</refname>
    <refpurpose>quoted-printable 문자열을 8비트 문자열로 변환한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_qprint</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     quoted-printable 문자열을 8비트 문자열로 변환한다 .
     (<ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, section 6.7에 따라)
    </para>
    <para>
     8비트(binary) 문자열을 돌려준다.
    </para>
    <para>
     <function>imap_8bit</function>함수도 보시오.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-8bit">
   <refnamediv>
    <refname>imap_8bit</refname>
    <refpurpose>
     8비트 문자열을 quoted-printable 문자열로 변환한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_8bit</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     8비트 문자열을 quoted-printable 문자열로 변환한다.
     (<ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, section 6.7에 따라)
    </para>
    <para>
     quoted-printable 문자열을 돌려준다.
    </para>
    <para>
    <function>imap_qprint</function>함수도 보시오.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-binary">
   <refnamediv>
    <refname>imap_binary</refname>
    <refpurpose>
     8비트 문자열을 base64문자열로 변환한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_binary</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     8비트 문자열을 base64문자열로 변환한다.
     (<ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, Section 6.8에 따라)
    </para>
    <para>
     base64 문자열을 돌려준다.
    </para>
    <para>
     <function>imap_base64</function>도 보시오.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-scanmailbox">
   <refnamediv>
    <refname>imap_scanmailbox</refname>
    <refpurpose>
     메일박스의 텍스트중에서 검색 문자열을 갖는 메일박스의 목록을 읽어 온다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_scanmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>   
      <paramdef>string <parameter>content</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     메일박스의 텍스트중에서 <parameter>string</parameter>의 문자열을
     갖는 메일박스 이름을 포함하는 배열을 돌려준다.
     이함수는 <function>imap_listmailbox</function>함수와 유사하다,
     단지 메일박스 데이터중에서 <parameter>content</parameter>문자열의
     존재를 체크하는 것만 추가되었다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mailboxmsginfo">
   <refnamediv>
    <refname>imap_mailboxmsginfo</refname>
    <refpurpose>현재 메일박스에 관한 정보를 가져온다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_mailboxmsginfo</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     현재 메일박스에 관한 정보를 돌려준다. 실패하면 FALSE를 리턴한다.
    </para> 
    <para> 
     <function>imap_mailboxmsginfo</function>함수는 서버에서 현재 메일박스의
     상태를 점검한다. 이 함수는 <function>imap_status</function>함수와 유사하다.
     단지 메일박스안의 모든 메시지 사이즈의 총량을 내는 것이 추가되었다.
     이것은 곧 총량을 내기위해 실행할 추가적인 시간이 걸린다는 것을 의미한다.
     다음 속성을 갖는 객체로 정보를 돌려준다.
    </para>
    <para>
     <table>
      <title>Mailbox properties</title>
      <tgroup cols="2">
       <tbody>
        <row>
	 <entry>Date</entry>
	 <entry>date of last change</entry>
	</row>
        <row>
	 <entry>Driver</entry>
	 <entry>driver</entry>
	</row>
        <row>
	 <entry>Mailbox</entry>
	 <entry>name of the mailbox</entry>
	</row>
        <row>
	 <entry>Nmsgs</entry>
	 <entry>number of messages</entry>
	</row>
        <row>
	 <entry>Recent</entry>
	 <entry>number of recent messages</entry>
	</row>
        <row>
	 <entry>Unread</entry>
	 <entry>number of unread messages</entry>
	</row>
        <row>
	 <entry>Deleted</entry>
	 <entry>number of deleted messages</entry>
	</row>
        <row>
	 <entry>Size</entry>
	 <entry>mailbox size</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example>
      <title><function>imap_mailboxmsginfo</function> example</title>
      <programlisting role="php">
&lt;?php

$mbox = imap_open("{your.imap.host}INBOX","username", "password")
      || die("can't connect: ".imap_last_error());
 
$check = imap_mailboxmsginfo($mbox);
 
if($check) {
    print "Date: "    . $check->Date    ."&lt;br>\n" ;
    print "Driver: "  . $check->Driver  ."&lt;br>\n" ;
    print "Mailbox: " . $check->Mailbox ."&lt;br>\n" ;
    print "Messages: ". $check->Nmsgs   ."&lt;br>\n" ;
    print "Recent: "  . $check->Recent  ."&lt;br>\n" ;
    print "Unread: "  . $check->Unread  ."&lt;br>\n" ;
    print "Deleted: " . $check->Deleted ."&lt;br>\n" ;
    print "Size: "    . $check->Size    ."&lt;br>\n" ;
} else {
    print "imap_check() failed: ".imap_last_error(). "&lt;br>\n";
}
 
imap_close($mbox);

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-write-address">
   <refnamediv>
    <refname>imap_rfc822_write_address</refname>
    <refpurpose>
     주어진 메일박스, 호스트, 개인 정보로 적절히 형식화된 이메일 주소를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string 
       <function>imap_rfc822_write_address</function>
      </funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>host</parameter></paramdef>
      <paramdef>string <parameter>personal</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <ulink url="&url.rfc;rfc822.html">RFC822</ulink>문서에 정의된대로
     주어진 메일박스, 호스트, 개인 정보로 적절하게 형식화된 이메일 주소를
     돌려준다.
    </para>
    <para>
     <example>
      <title><function>imap_rfc822_write_address</function> example</title>
      <programlisting role="php">
print imap_rfc822_write_address("hartmut","cvs.php.net","Hartmut Holzgraefe")."\n";      
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-parse-adrlist">
   <refnamediv>
    <refname>imap_rfc822_parse_adrlist</refname>
    <refpurpose>주소 문자열을 해석한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array
       <function>imap_rfc822_parse_adrlist</function>
      </funcdef>
      <paramdef>string <parameter>address</parameter></paramdef>
      <paramdef>string <parameter>default_host</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 <ulink url="&url.rfc;rfc822.html">RFC822</ulink>문서에 정의된대로
     각 주소에 대해 주소 문자열을 해석하고 객체의 문자열을 돌려준다.
     객체의 속성은 다음과 같다:
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        mailbox  - the mailbox name (username)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        host - the host name
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        personal - the personal name
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        adl - at domain source route
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>imap_rfc822_parse_adrlist</function> example</title>
      <programlisting role="php">
$address_string = "Hartmut Holzgraefe &lt;hartmut@cvs.php.net>, postmaster@somedomain.net, root";
$address_array  = imap_rfc822_parse_adrlist($address_string,"somedomain.net");
if(! is_array($address_array)) die("somethings wrong\n");
 
reset($address_array);
while(list($key,$val)=each($address_array)){
  print "mailbox : ".$val->mailbox."&lt;br>\n";
  print "host    : ".$val->host."&lt;br>\n";
  print "personal: ".$val->personal."&lt;br>\n";
  print "adl     : ".$val->adl."&lt;p>\n";
} 
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-setflag-full">
   <refnamediv>
    <refname>imap_setflag_full</refname>
    <refpurpose>메시지에서 플래그(flags)를 셋(set)한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_setflag_full</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 지정된 일련번호의 메시지에서 지정된 플래그(flag)에 
     플래그 셋(flags set)을 추가한다.
    </para>
    <para>
     셋(set)할 수 있는 플래그(flags)는 "\\Seen", "\\Answered", 
     "\\Flagged", "\\Deleted", "\\Draft", 과 "\\Recent"이다.
     (RFC2060 문서에 정의된대로)
    </para>
    <para>
     옵션은 다음에서 한개 이상의 비트마스트(bit mask)값이다:
     <informalexample>
      <literallayout>
ST_UID          The sequence argument contains UIDs instead of
                sequence numbers
      </literallayout>
     </informalexample>
    </para>
    <para>
     <example>
      <title><function>imap_setflag_full</function> example</title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host:143}","username","password")
     || die("can't connect: ".imap_last_error());
 
$status = imap_setflag_full($mbox,"2,5","\\Seen \\Flagged");
 
print gettype($status)."\n";
print $status."\n";
 
imap_close($mbox);
      </programlisting>
     </example>
    </para>                                                                                                 </refsect1>
  </refentry>

  <refentry id="function.imap-clearflag-full">
   <refnamediv>
    <refname>imap_clearflag_full</refname>
    <refpurpose>메시지에서 플래그(flags)를 클리어(clear)한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string 
       <function>imap_clearflag_full</function>
      </funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function causes a store to delete the specified flag to the
     flags set for the messages in the specified sequence.
     이 함수는 지정된 일련번호의 메시지에서 지정된 플래그(flag)에
     플래그 셋(flags set)을 제거한다.
     언셋(unset)할 수 있는 플래그(flags)는 "\\Seen", "\\Answered",
     "\\Flagged", "\\Deleted", "\\Draft", 과 "\\Recent"이다.
     (RFC2060 문서에 정의된대로)
    </para>
    <para>
     옵션은 다음의 한개 이상의 비트마스크(bit mask) 값이다:
     <informalexample>
      <literallayout>
ST_UID          The sequence argument contains UIDs instead of
                sequence numbers
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-sort">
   <refnamediv>
    <refname>imap_sort</refname>
    <refpurpose>메시지 헤더의 배열을 정렬한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_sort</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>int <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>reverse</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     주어진 인수로 정렬된 메시지 번호의 배열을 돌려준다.
    </para>
    <para>
     <parameter>Reverse</parameter>인수는 역정렬(reverse-sorting)하기 위해서는
     1의 값을 갖는다.
    </para>
    <para>
     기준(Criteria)은 다음중 하나(오직 하나)가 될 수 있다:
     <informalexample>
      <literallayout>
SORTDATE        message Date
SORTARRIVAL     arrival date
SORTFROM        mailbox in first From address
SORTSUBJECT     message Subject
SORTTO          mailbox in first To address 
SORTCC          mailbox in first cc address 
SORTSIZE        size of message in octets
      </literallayout>
     </informalexample>
    </para>
    <para>
     플래그(flags)는 다음중 하나이상의 비트마스크(bitmask)값이다:
     <informalexample>
      <literallayout>
SE_UID          Return UIDs instead of sequence numbers
SE_NOPREFETCH   Don't prefetch searched messages.
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchheader">
   <refnamediv>
    <refname>imap_fetchheader</refname>
    <refpurpose>메시지에서 헤더를 돌려준다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_fetchheader</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 지정된 메시지에서 전체의(complete), 필터링되지않은(unfiltered)
     <ulink url="&url.rfc;rfc822.html">RFC822</ulink>형식의 헤더를
     텍스트 문자열로 페치하고, 그 텍스트 문자열을 돌려준다.
    </para>
    <para>
     옵션은 다음과 같다:
     <informalexample>
      <literallayout>
FT_UID          The msgno argument is a UID 
FT_INTERNAL     The return string is in "internal" format,
                without any attempt to canonicalize to CRLF
                newlines
FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at the
                same time.  This avoids an extra RTT on an
                IMAP connection if a full message text is
                desired (e.g. in a "save to local file"
                operation)
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-uid">
   <refnamediv>
    <refname>imap_uid</refname>
    <refpurpose>
     이 함수는 주어진 메시지의 일련번호(sequence number)에 대한 UID를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_uid</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 주어진 메시지 일련번호(sequence number)에 대한 UID를 돌려준다.
     UID는 메일박스의 내용이 변화될 때마다 바뀌는 메시지 일련번호에 반하여
     시간에 따라 바뀌지 않는 유일한 구별값(identifier)이다.
     이 함수는 <function>imap_msgno</function>함수의 반대이다.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.imap-msgno">
   <refnamediv>
    <refname>imap_msgno</refname>
    <refpurpose>
     이 함수는 주어진 UID값에 대해 메시지 일련번호(sequence number)을 넘겨준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_msgno</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>uid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    이 함수는 주어진 UID값에 대해 메시지 일련번호(sequence number)을 넘겨준다
    <function>imap_uid</function>함수의 반대이다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-search">
   <refnamediv>
    <refname>imap_search</refname>
    <refpurpose>
     이 함수는 주어진 검색 기준(criteria)에 부합되는 메시지의 배열을 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_search</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 주어진 imap 스트림(stream)안의 현재 열려있는 메일박스에서
     검색을 수행한다. <parameter>criteria</parameter>인수는 문자열이다.
     공백(spaces)에 의해 구별(delimited)되고,아래의 키워드(keywords)가 허용된다.
     두 단어 이상의 변수(arguments) (예를 들면, FROM "joey smith" )는
     따옴표(quoted) 처리해야 한다.
     <itemizedlist>  
      <listitem>
       <simpara>
	ALL - return all messages matching the rest of the criteria
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ANSWERED - match messages with the \\ANSWERED flag set
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BCC "string" - match messages with "string" in the Bcc: field
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BEFORE "date" - match messages with Date: before "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BODY "string" - match messages with "string" in the body of the message
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CC "string" - match messages with "string" in the Cc: field
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	DELETED - match deleted messages
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FLAGGED - match messages with the \\FLAGGED (sometimes
	referred to as Important or Urgent) flag set
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FROM "string" - match messages with "string" in the From: field
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	KEYWORD "string" - match messages with "string" as a keyword
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	NEW - match new messages
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OLD - match old messages
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ON "date" - match messages with Date: matching "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	RECENT - match messages with the \\RECENT flag set
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SEEN - match messages that have been read (the \\SEEN flag is set)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SINCE "date" - match messages with Date: after "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SUBJECT "string" - match messages with "string" in the Subject:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	TEXT "string" - match messages with text "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	TO "string" - match messages with "string" in the To:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNANSWERED - match messages that have not been answered
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNDELETED - match messages that are not deleted
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNFLAGGED - match messages that are not flagged
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNKEYWORD "string" - match messages that do not have the
	keyword "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNSEEN - match messages which have not been read yet
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     예를 들어 Mom으로 부터 받은 아직 읽지 않은 모든 메시지를 검색하려면,
     다음과 같이 하면 된다: "UNANSWERED FROM mom". 검색은 대소문자 구별을
     하지 않는 것처럼 보인다. 검색기준의 목록은 UW c-client source code에
     달려있어서 불완전하거나 부정확할 수 있다.
     (RFC2060, section 6.4.4 도 보시라).
    </para>
    <para>
     플래그(flags)에 대한 유효한 값은 SE_UID이다.
     이것은 메시지 일련번호(sequence number)대신에 UID를 포함하는
     배열을 돌려준다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-last-error">
   <refnamediv>
    <refname>imap_last_error</refname>
    <refpurpose>
     이 함수는 현재 페이지 요구(page request) 동안에 발생한
     IMAP 에러(물론 있다면)의 가장 나중것을 돌려준다 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_last_error</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 현재 페이지에서 발생한 가장 나중의 IMAP 에러 메시지를
     텍스트로 돌려준다; 에러 스택(error stack)은 건들지 않는다;
     아무 에러도 없는데, <function>imap_last_error</function>함수를 
     이어서 부르면 같은 에러를 돌려줄것이다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-errors">
   <refnamediv>
    <refname>imap_errors</refname>
    <refpurpose>
     이 함수는 현재 페이지 요구(page request)동안에, 또는
     에러 스택(error stack)이 리셋(reset)된 이후에 발생한 
     IMAP 에러(물론 있다면)를 모두 돌려준다 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_errors</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 가장 나중의 <function>imap_errors</function>함수의 호출
     이후, 또는 페이지의 시작때부터 발생한 모든 IMAP 에러 메시지들의 
     배열을 돌려준다.
     <function>imap_errors</function>함수가 호출되면, 에러 스택(error stack)
     은 즉시 클리어(clear)된다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-alerts">
   <refnamediv>
    <refname>imap_alerts</refname>
    <refpurpose>
     이 함수는 현재 페이지 요구(page request)동안이나,또는
     경고 스택(alert stack)이 리셋(reset)된 이후에 발생한 경고(alert)메시지
     (물론 있다면) 모두를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_alerts</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 가장 나중의 <function>imap_alerts</function>함수의 호출
     이후, 또는 페이지의 시작때부터 발생한 모든 IMAP 경고 메시지들의
     배열을 돌려준다.
     <function>imap_alerts</function>함수가 호출되면, 경고 스택(alert stack)
     은 즉시 클리어(clear)된다. IMAP 사양에서는 이 메시지가 유저에게 넘겨질것을
     요구하는 바이다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-status">
   <refnamediv>
    <refname>imap_status</refname>
    <refpurpose>
     이 함수는 현재 메일박스 이외의 다른  메일 박스의 상태 정보를 돌려준다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_status</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 상태 정보를 포함하는 객체를 돌려준다.
     유효한 플래그(flags)는 다음과 같다:
     <itemizedlist>
      <listitem>
       <simpara>
	SA_MESSAGES - set status->messages to the number of messages
	in the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_RECENT - set status->recent to the number of recent
	messages in the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UNSEEN - set status->unseen to the number of unseen (new)
	messages in the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UIDNEXT - set status->uidnext to the next uid to be used in
	the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UIDVALIDITY - set status->uidvalidity to a constant that
	changes when uids for the mailbox may no longer be valid
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_ALL - set all of the above
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     status->flags is also set, which contains a bitmask which can be
     checked against any of the above constants.
    </para>
    <para>
     <example>
      <title><function>imap_status</function> example</title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","username","password",OP_HALFOPEN)
      || die("can't connect: ".imap_last_error());
 
$status = imap_status($mbox,"{your.imap.host}INBOX",SA_ALL);
if($status) {
  print("Messages:   ". $status->messages   )."&lt;br>\n";
  print("Recent:     ". $status->recent     )."&lt;br>\n";
  print("Unseen:     ". $status->unseen     )."&lt;br>\n";
  print("UIDnext:    ". $status->uidnext    )."&lt;br>\n";
  print("UIDvalidity:". $status->uidvalidity)."&lt;br>\n"; 
} else
  print "imap_status failed: ".imap_lasterror()."\n";
 
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf7-decode">
   <refnamediv>
    <refname>imap_utf7_decode</refname>
    <refpurpose>
     modified UTF-7 인코딩된 문자열을 디코딩한다.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     modified UTF-7형식의 <parameter>text</parameter>를 
     8비트 데이터로 디코딩한다.
    </para>
    <para>
     디코딩된 8비트 데이터를 돌려주거나, 
     입력 문자열이 유효한 modified UTF-7이 아니면 false를 돌려준다.
     이 함수는 출력가능한 아스키(ASCII)코드 범위를 벗어난 국제적인 문자를
     갖는 메일박스 이름을 디코딩할 때 필요하다.
     modified UTF-7 인코딩은 <ulink 
     url="&url.rfc;rfc2060.html">RFC 2060</ulink> , section 5.1.3 문서에
     정의되어 있다( original UTF-7 은 <ulink
     url="&url.rfc;rfc1642.html">RFC1642</ulink>문서에 정의되어 있었다).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf7-encode">
   <refnamediv>
    <refname>imap_utf7_encode</refname>
    <refpurpose>
     8비트 데이터를 UTF-7 텍스트로 변환한다.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_encode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     8비트 <parameter>data</parameter>를 modified UTF-7텍스트로
     변경한다. 이 함수는 출력가능한 아스키(ASCII)코드 범위를 벗어난
     국제적인 문자를 포함하는 메일박스 이름을 인코딩할 때 필요하다.
     modified UTF-7 인코딩은  <ulink
     url="&url.rfc;rfc2060.html">RFC 2060</ulink>, section 5.1.3문서에
     정의되어 있다.
     ( original UTF-7은  <ulink
     url="&url.rfc;rfc1642.html">RFC1642</ulink> 문서에 정의되어 있다).
    </para>
    <para>
     modified UTF-7 텍스트를 돌려준다.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf8">
   <refnamediv>
    <refname>imap_utf8</refname>
    <refpurpose>
      텍스트를 UTF8로 변환한다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf8</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     주어진 <parameter>text</parameter>값을 UTF8로 변환한다
     (<ulink url="&url.rfc;rfc2044.html">RFC2044</ulink>문서에 정의된대로).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetch-overview">
   <refnamediv>
    <refname>imap_fetch_overview</refname>
    <refpurpose>
     주어진 메시지 헤더의 전체 정보를 읽어 온다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_fetch_overview</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>int <parameter><optional>flags</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 주어진 <parameter>sequence</parameter>일련번호에 대한 헤더를
     페치하고, 전체 정보를 돌려준다. <parameter>sequence</parameter>값은
     <parameter>flags</parameter>가  FT_UID를 갖는다면
     UID나 메시지 인덱스(indices)의 일련번호(sequence)가 된다.
     돌려받는 값은 메시지 헤더의 각각을 서술하는 다음과 같은 속성을 갖는
     객체의 배열이다:
     <itemizedlist>
      <listitem>
       <simpara>
        subject - the messages subject
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        from - who sent it
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        date - when was it sent
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        message_id - Message-ID 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        references - is a reference to this message id
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        size - size in bytes
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        uid - UID the message has in the mailbox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        msgno - message sequence number in the maibox
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        recent - this message is flagged as recent
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        flagged -  this message is flagged
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        answered -  this message is flagged as answered
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        deleted -  this message is flagged for deletion
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        seen -  this message is flagged as already read
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        draft -  this message is flagged as being a draft
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>imap_fetch_overview</function> example</title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host:143}","username","password")
     || die("can't connect: ".imap_last_error());
 
$overview = imap_fetch_overview($mbox,"2,4:6",0);
 
if(is_array($overview)) {
        reset($overview);
        while( list($key,$val) = each($overview)) {
                print     $val->msgno
                . " - " . $val->date
                . " - " . $val->subject
                . "\n";
        }
}
 
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mime-header-decode">
   <refnamediv>
    <refname>imap_mime_header_decode</refname>
    <refpurpose>MIME 헤더 구성요소(element)를 디코딩한다</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_header_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_mime_header_decode</function>함수는 ASCII 텍스트가
     아닌 MIME 메시지 헤더 확장(MIME message header extensions)을 디코드한다.
     (<ulink url="&url.rfc;rfc2047.html">RFC2047</ulink>문서를 보라) 
     디코딩된 구성요소(elements)를  객체의 배열로 돌려준다.
     이 객체는 두가지 속성을 갖는다, 즉 "charset" 과 "text" 이다.
     구성요소가 인코딩되지 않았다면, 즉 평범한(plain) US-ASCII라면,
     그 구성요소의 "charset" 속성은 "default"값을 갖는다.
    </para>
    <para>
     <example>
      <title><function>imap_mime_header_decode</function> example</title>
      <programlisting role="php">
$text="=?ISO-8859-1?Q?Keld_J=F8rn_Simonsen?= &lt;keld@dkuug.dk>";

$elements=imap_mime_header_decode($text);
for($i=0;$i&lt;count($elements);$i++) {
	echo "Charset: {$elements[$i]->charset}\n";
	echo "Text: {$elements[$i]->text}\n\n";
}

      </programlisting>
     </example>
    </para>
    <para>
     In the above example we would have two elements, whereas the first
     element had previously been encoded with ISO-8859-1, and the second
     element would be plain US-ASCII.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imap-mail-compose">
   <refnamediv>
    <refname>imap_mail_compose</refname>
    <refpurpose>
     주어진 envelope와 body 섹션으로 구성된 MIME메시지를 만든다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail_compose</function></funcdef>
      <paramdef>array <parameter>envelope</parameter></paramdef>
      <paramdef>array <parameter>body</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
    <para>
     <example>
      <title><function>imap_mail_compose</function> example</title>
      <programlisting role="php">
&lt;?php

$envelope["from"]="musone@afterfive.com";
$envelope["to"]="musone@darkstar";
$envelope["cc"]="musone@edgeglobal.com";

$part1["type"]=TYPEMULTIPART;
$part1["subtype"]="mixed";

$filename="/tmp/imap.c.gz";
$fp=fopen($filename,"r");
$contents=fread($fp,filesize($filename));
fclose($fp);

$part2["type"]=TYPEAPPLICATION;
$part2["encoding"]=ENCBINARY;
$part2["subtype"]="octet-stream";
$part2["description"]=basename($filename);
$part2["contents.data"]=$contents;

$part3["type"]=TYPETEXT;
$part3["subtype"]="plain";
$part3["description"]="description3";
$part3["contents.data"]="contents.data3\n\n\n\t";

$body[1]=$part1;
$body[2]=$part2;
$body[3]=$part3;

echo nl2br(imap_mail_compose($envelope,$body));

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail">
   <refnamediv>
    <refname>imap_mail</refname>
    <refpurpose>
     이메일 메시지를 보낸다
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail</function></funcdef>
      <paramdef>string <parameter>to</parameter></paramdef>
      <paramdef>string <parameter>subject</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>additional_headers</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>cc</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>bcc</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>rpath</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     이 함수는 현재 PHP 3에서만 유효하다.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
