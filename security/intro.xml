<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.3 Maintainer: progcom Status: ready -->
 <sect1 id="security.intro">
  <title>도입</title>
  <simpara>
   PHP는 강력한 언어와 인터프리터입니다. 웹서버 모듈로 포함하거나
   별도의 <acronym>CGI</acronym> 바이너리로 실행해서, 서버에서
   파일에 접근하거나, 명령을 실행하거나, 네트워크 연결을 열 수 있게
   해줍니다. 기본적으로 이러한 기능은 웹서버의 보안을 위협합니다.
   PHP는 펄이나 C로 쓰여진 CGI 프로그램에 비해서 더욱 안전한 언어로
   설계되었습니다. 컴파일 시와 실행시 환경 설정 옵션의 적절한 선택과
   충분한 코딩 능력은 자유와 보안의 조합을 얻을 수 있을 것입니다.
  </simpara>
  <simpara>
   PHP를 이용하는 다른 방법들에 따라, 실행을 조절하는 많은 환경
   설정 옵션이 존재합니다. 많은 옵션의 선택은 PHP를 여러 목적으로
   사용할 수 있게 보장해주지만, 이러한 옵션과 서버 환경 설정의 조합에
   따라서는 보안을 위협하는 결과를 가져올 수도 있습니다.
  </simpara>
  <simpara>
   PHP 환경 설정의 유연성은 코드의 유연성과 상대적이 됩니다. PHP는
   쉘 유저의 모든 권한을 가지는 완벽한 서버 어플리케이션을 작성할 수도
   있고, 강력히 제어된 환경에서 적은 위험으로 단순한 서버측 포함으로
   사용할 수도 있습니다. 어떻게 환경을 구축하고, 어떻게 보안을 유지하는
   지는, 많은 부분이 PHP 개발자에 의존하고 있습니다.
  </simpara>
  <simpara>
   이 챕터에서는 몇가지 일반적인 보안 조언으로 시작해서, 서로 다른
   환경 설정 옵션의 조합과 안전하게 사용할 수 있는 상황, 그리고 보안
   단계에 따라 코딩에서 고려할 점에 대해서 설명합니다.
  </simpara>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
