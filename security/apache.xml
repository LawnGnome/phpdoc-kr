<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 297028 Maintainer: progcom Status: ready -->
  <chapter xml:id="security.apache" xmlns="http://docbook.org/ns/docbook">
   <title>아파치 모듈로 설치</title>
   <simpara>
    PHP를 아파치 모듈로 사용할 때, 아파치의 사용자 권한(일반적으로 "nobody"
    사용자)을 따릅니다. 이는 보안과 인증에 몇가지 영향을 줍니다. 예를 들어,
    PHP로 데이터베이스에 접근할 때, 데이터베이스에 내장 접근 제어가 없다면
    데이터베이스에 "nobody" 사용자가 접근할 수 있게 해야 합니다. 이는 이상한
    스크립트가 사용자이름과 패스워드 없이 데이터베이스에 접근하여 변경할 수
    있다는 뜻입니다. 웹 스파이더가 데이터베이스 관리자 웹 페이지에 접근하여
    모든 데이터베이스를 지울 수도 있습니다. 아파치 인증이나, LDAP, &htaccess;
    파일 등을 사용한 자체 접근 모델을 만들고, PHP 스크립트의 일부분으로
    포함하여 이러한 일들에 대항할 수 있습니다.
   </simpara>
   <simpara>
    종종, PHP 사용자(이 경우, 아파치 사용자) 시점에서 보안이 성립되어 위험이
    줄지만, 이제 PHP가 사용자 디렉토리에 파일을 쓸 수 없는 점을 발견하게
    됩니다. 또는 데이터베이스 접근과 변경이 막혀있을 수 있습니다. 정상 파일과
    위험 파일, 또는 정상과 이상 데이터베이스 트랜젝션을 넣는 점에 대해서
    동일한 보안 효과를 가지기 때문입니다.
   </simpara>
   <simpara>
    이 시점에서 자주 일어나는 보안 실책은 아파치에 루트 권한을 주거나, 비슷한
    기능을 실행할 수 있게 하는 것입니다.
   </simpara>
   <simpara>
    아파치 사용자 권한을 루트로 올리는 것은 매우 위험하고, 전체 시스템을
    위태롭게 합니다. 그러므로, sudo, chroot, 루트로 실행하기 등은 보안
    전문가가 아닌 사람이 생각해서는 안됩니다.
   </simpara>
   <simpara>
    간단한 해결책이 있습니다. <link
     linkend="ini.open-basedir">open_basedir</link>로 PHP에서 허용할
    디렉토리를 제어하고 제한할 수 있습니다. 아파치 전용 구역을 설정해서, 모든
    웹 기반 행동을 사용자, 시스템, 파일에 영향을 주지 않도록 제한할 수
    있습니다.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
