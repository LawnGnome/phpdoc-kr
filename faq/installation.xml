<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.53 Maintainer: progcom Status: ready -->
 <chapter xml:id="faq.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>설치</title>
  <titleabbrev>설치</titleabbrev>

  <para>
   이 섹션은 PHP 설치에 관한 일반적인 질문을 다루고 있습니다. PHP는 대부분의
   OS(OSX 이전의 MacOS는 예외)와 대부분의 웹 서버에서 사용할 수 있습니다.
  </para>
  <para>
   PHP를 설치하려면, <xref linkend="install"/>에 있는 지시를 따르십시오.
  </para>

  <qandaset>
   <qandaentry xml:id="faq.installation.apache2">
    <question>
     <para>
      왜 제품 환경에서 아파치2 쓰레드 MPM을 사용할 수 없습니까?
     </para>
    </question>
    <answer>
     <para>
      PHP는 접착제입니다. 수많은 써드파티 라이브러리를 합쳐서 직관적으로
      일관성 있게 하고, 배우기 쉬운 언어 인터페이스로 붙여서 좋은 웹
      어플리케이션을 만드는 접착제입니다. PHP의 유연성과 힘은 놓여지는
      플랫폼의 안정성과 강력함에 의존합니다. 작동하는 OS, 작동하는 웹 서버,
      붙일 수 있는 작동하는 써드파티 라이브러리가 필요합니다. 이들 중 하나라도
      작동을 멈췄을 때, PHP는 문제를 발견하고 빠르게 고칠 수 있는 방법이
      필요합니다. 놓여지는 프레임워크에 완전히 분리된 실행 쓰레드, 완전히
      분리된 메모리 세그먼트, 각 요청이 실행되는 강한 그릇을 갖추지 못한다면,
      PHP 시스템에 예상할 수 없는 약점을 가져옵니다.
     </para>
     <para>
      쓰레드 MPM을 사용해야 한다면, PHP가 자신의 메모리 공간을 가지고 실행되는
      FastCGI 설정을 살펴보십시오.
     </para>
     <para>
      마지막으로, 쓰레드 MPM을 사용하는 것에 대한 이 경고는 윈도우 시스템에는
      강요되지 않습니다. 플랫폼에 쓰이는 대부분의 라이브러리가 쓰레드 안전하게
      짜여져 있기 때문입니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phpini">
    <question>
     <para>
      유닉스/윈도우: &php.ini; 파일을 어디에 놓아야 합니까?
     </para>
    </question>
    <answer>
     <para>
      기본값으로, 유닉스에서는 <filename>&lt;install-path&gt;/lib</filename>인
      <filename>/usr/local/lib</filename>에 위치해야 합니다. 많은 사람들이
      컴파일 시에 <link
       linkend="configure.with-config-file-path">--with-config-file-path</link>
      플래그로 이를 변경합니다. 예를 들면, 다음과 같이 설정할 수 있습니다:
      <programlisting role="shell">
--with-config-file-path=/etc
      </programlisting>
      이렇게 하면, 배포판의 <filename>php.ini-dist</filename>를
      <filename>/etc/php.ini</filename>에 복사하여 수정함으로써 원하는 변경을
      적용할 수 있습니다.
     </para>
      <programlisting role="shell">
--with-config-file-scan-dir=PATH 
      </programlisting>
     <para>
      윈도우에서 &php.ini; 파일의 기본 경로는 윈도우 디렉토리입니다. 아파치
      웹서버를 사용한다면, 우선 아파치 설치 디렉토리에서 &php.ini;를
      검색합니다. 즉, <filename>c:\program files\apache
       group\apache</filename> 입니다. 이 방법으로 같은 머신에서 작동하는
      다른 버전의 아파치에서 각각의 &php.ini; 파일을 사용할 수 있습니다.
     </para>
     <para>
     <link linkend="configuration.file">설정 파일</link> 챕터를 참고하십시오.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.nodata">
    <question>
     <para>
      유닉스: PHP를 설치하였지만, 문서를 읽을 때 마다 'Document Contains No
      Data'를 얻습니다! 대체 뭡니까?
     </para>
    </question>
    <answer>
     <para>
      아마도 PHP에 문제가 있어서 코어 덤프가 일어남을 의미합니다. 이런 경우엔
      서버 오류 기록을 살펴보고, 작은 테스트 방식을 사용해서 문제가 재발하는지
      확인해보십시오. 'gdb'를 사용할 줄 안다면, 오류 보고에 역추적을
      제공해주십시오. 개발자가 문제를 파악하기 쉽습니다. PHP를 아파치 모듈로
      사용한다면 다음과 같이 해보십시오:
      <itemizedlist>
       <listitem>
        <para>
         httpd 프로세스 중지
        </para>
       </listitem>
       <listitem>
        <para>
         gdb httpd
        </para>
       </listitem>
       <listitem>
        <para>
         httpd 프로세스 중지
        </para>
       </listitem>
       <listitem>
        <para>
         &gt; run -X -f /path/to/httpd.conf
        </para>
       </listitem>
       <listitem>
        <para>
         브라우저에서 문제가 발생하는 URL을 시도합니다
        </para>
       </listitem>      
       <listitem>
        <para>
         &gt; run -X -f /path/to/httpd.conf
        </para>
       </listitem>      
       <listitem>
        <para>
         코어 덤프를 얻는다면, 여기에서 gdb가 이를 알려줍니다
        </para>
       </listitem>      
       <listitem>
        <para>
         type: bt
        </para>
       </listitem>
       <listitem>
        <para>
         오류 보고에 역추적을 포함시킵니다. <link
          xlink:href="&url.php.bugs;">&url.php.bugs;</link>에서 제출할 수
         있습니다.
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      스크립트가 정규 표현식 함수(<function>preg_match</function> 계열)를
      사용한다면, PHP와 아파치를 동일한 정규 표현식 패키지로 컴파일해야
      합니다. PHP와 아파치 1.3.x에서는 자동으로 됩니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.processing">
    <question>
     <para>
      유닉스: RPMS를 사용해서 PHP를 설치했지만, 아파치가 PHP 페이지를 처리하지
      않습니다! 대체 뭡니까?
     </para>
    </question>
    <answer>
     <para>
      아파치와 PHP를 모두 RPM 패키지로 설치했다고 가정하면, &httpd.conf;
      파일에서 다음 줄 중 일부나 전체를 추가하거나 주석을 해제해야 합니다:
      <programlisting role="apache-conf">
<![CDATA[
# Extra Modules
AddModule mod_php.c
AddModule mod_php.c
AddModule mod_perl.c

# Extra Modules
LoadModule php_module         modules/mod_php.so
LoadModule php5_module        modules/libphp5.so     # for PHP 5
LoadModule perl_module        modules/libperl.so
]]>
      </programlisting>
      그리고 추가로:
      <programlisting role="apache-conf">
<![CDATA[
AddType application/x-httpd-php .php
]]>
      </programlisting>
      ...를 전역 프로퍼티에 넣거나, PHP 지원을 추가할 VirtualDomain의
      프로퍼티에 넣어야 합니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.frontpage">
    <question>
     <para>
      유닉스: 아파치에 FrontPage 확장 패치를 적용하였더니, 갑자기 PHP가
      작동하지 않습니다. PHP가 아파치 FrontPage 확장과 호환되지 않습니까?
     </para>
    </question>
    <answer>
     <para>
      아니오, PHP는 FrontPage 확장과 함께 작동합니다. 문제는 FrontPage 패치가
      PHP가 의존하는 아파치 구조를 변경했기 때문입니다. FP 패치를 한 후에
      PHP를 재컴파일('make clean ; make'를 사용)하면 문제가 해결될 것입니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.blankscreen">
    <question>
     <para>
      유닉스/윈도우: PHP를 설치하였지만, 브라우저에서 PHP 스크립트 파일에
      접근하면 빈 화면이 나옵니다.
     </para>
    </question>
    <answer>
     <para>
      웹 브라우저에서 '소스 보기'를 하면 PHP 스크립트의 소스 코드가
      나올겁니다. 이는 웹 서버가 스크립트를 PHP에 해석하도록 보내지 않았음을
      의미합니다. 서버 설정이 무언가 잘못되었습니다 - PHP 설치 지시에 따라서
      서버 설정을 다시 확인해보십시오.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.500error">
    <question>
     <para>
      유닉스/윈도우: PHP를 설치하였지만, 브라우저에서 PHP 스크립트 파일에
      접근하면 서버 500 오류가 나옵니다.
     </para>
    </question>
    <answer>
     <para>
      서버가 PHP를 실행하려 할 때 무언가 잘못되었습니다. 확인할 수 있는 오류
      메세지를 얻으려면, 명령줄에서 PHP 실행(윈도우에서는
      <filename>php.exe</filename>이 있는 디렉토리로 변경하고 <command>php
       -i</command>를 실행하십시오. PHP 실행에 문제가 있으면, 적절한 오류
      메세지가 나올 것이고, 이로써 해결을 위한 실마리를 얻을 수 있습니다. HTML
      코드로 스크린이 채워진다면(<function>phpinfo</function>의 출력) PHP는
      작동하고, 문제는 서버 설정일 것입니다. 다시 확인해보십시오.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.undefinedsyms">
    <question>
     <para> 
      몇몇 OS: 오류 없이 PHP를 설치했지만, 아파치를 시작하려 할 때 정의되지
      않은 심볼 오류가 나옵니다:
      <programlisting role="shell">
[mybox:user /src/php4] root# apachectl configtest
 apachectl: /usr/local/apache/bin/httpd Undefined symbols:
  _compress
  _uncompress
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      정확히 말하면, PHP는 아무 문제가 없지만 MySQL 클라이언트 라이브러리에
      문제가 있습니다. 몇몇 경우 <option
       role="configure">--with-zlib</option>이 필요합니다. MySQL FAQ에서도
      다루고 있습니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.cgierror">
    <question>
     <para>
      윈도우: PHP를 설치하였지만, 브라우저에서 PHP 스크립트 파일에 접근할 때,
      오류가 발생합니다:
      <screen>
cgi error:
 The specified CGI application misbehaved by not
 returning a complete set of HTTP headers.
 The headers it did return are:
      </screen>
     </para>
    </question>
    <answer>
     <para>
      이 오류 메세지는 PHP가 무언가를 출력하는데 실패했음을 의미합니다. 확인할
      수 있는 오류 메세지를 얻으려면, 명령줄에서 PHP 실행(윈도우에서는
      <filename>php.exe</filename>)이 있는 디렉토리로 변경하여 <command>php
       -i</command>를 실행하십시오. PHP 실행에 문제가 있으면, 적합한 오류
      메세지가 나오므로, 이를 해결의 실마리가 됩니다. HTML 코드로 화면이 가득
      찬다면(<function>phpinfo</function> 함수의 출력) PHP는 작동합니다.
     </para>
     <para>
      PHP가 명령줄에서 작동한다면, 다시 브라우저에서 스크립트에
      접근해보십시오. 여전히 실패한다면 다음 중 하나입니다:
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        PHP 스크립트, <filename>php.exe</filename>,
        <filename>php4ts.dll</filename>, &php.ini;, 적재하려는 PHP 확장의 파일
        접근 권한 문제입니다. 익명 인터넷 사용자
        <literal>ISUR_&lt;machinename&gt;</literal>이 이들에 접근할 수
        없습니다.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        스크립트 파일이 존재하지 않습니다. (혹은, 웹 루트 디렉토리에서 상대
        경로가 생각한 것과 다릅니다) IIS에서는 Internet Services Manager에서
        'check file exists' 박스를 켬으로써 이 오류를 추적할 수 있습니다.
        스크립트 파일이 존재하지 않는다면 서버가 404 오류를 내보냅니다. 이는
        IIS가 스크립트 파일의 NTLanMan 권한에 기반한 인증을 수행하는 추가적인
        장점이 있습니다.
       </simpara>
      </listitem>
     </itemizedlist>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phpandiis">
    <question>
     <para>
      윈도우: 모든 지시를 따랐는데, PHP와 IIS가 여전히 작동하지 않아요!
     </para>
    </question>
    <answer>
     <para>
      PHP 스크립트를 실행해야 하는 사람이 <filename>php.exe</filename>를
      실행할 권한이 있는지 확인하십시오! IIS는 IIS가 설치되었을 때 추가된 익명
      사용자를 사용합니다. 이 사용자가 <filename>php.exe</filename>에 권한이
      있어야 합니다. 또한, 모든 인증된 사용자도 <filename>php.exe</filename>를
      실행할 권한이 있어야 합니다. 그리고 IIS4에서는 PHP가 스크립트 엔진임을
      알려야 합니다. <link linkend="faq.installation.forceredirect">이
       faq</link>도 읽어보십시오.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.forceredirect">
    <question>
     <para>
      IIS, PWS, OmniHTTPD, Xitami에서 PHP를 CGI로 실행할 때, 다음 오류가
      나옵니다: <literal>Security Alert! PHP CGI 
       cannot be accessed directly.</literal>.
     </para>
    </question>
    <answer>
     <para>
      <link linkend="ini.cgi.force-redirect">cgi.force_redirect</link>
      지시어를 <literal>0</literal>으로 설정해야 합니다. 기본값이
      <literal>1</literal>이므로 지시어를 (<literal>;</literal>으로)
      주석처리하면 안됩니다. 다른 지시어와 마찬가지로, &php.ini;에서
      설정합니다.
     </para>
     <para>
      기본값이 <literal>1</literal>이기 떄문에, 정확한 &php.ini;를 읽고 있는지
      100% 확인하는게 중요합니다. 자세한 내용은 <link
       linkend="faq.installation.findphpini">이 faq</link>를 읽어보십시오.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.findphpini">
    <question>
     <para>
      내 &php.ini;가 발견되고 읽어지는지 어떻게 압니까? 내 변경점이 적용되지
      않는 것 같습니다.
     </para>
    </question>
    <answer>
     <para>
      어떤 &php.ini;를 PHP에서 읽는지 확인하려면,
      <function>phpinfo</function>를 호출하십시오. 윗 부분에,
      <literal>Configuration File (php.ini)</literal> 목록이 존재합니다. 이는
      PHP가 어디에서 &php.ini;를 찾고 읽었는지 여부를 알려줍니다. 디렉토리
      PATH만 존재한다면, 읽어지지 않은 것이므로, &php.ini;를 그 디렉토리에
      넣으십시오. &php.ini;가 PATH에 포함되어 있다면, 읽혀지는 것입니다.
     </para>
     <para>
      &php.ini;가 읽혀지고 PHP를 모듈로 사용한다면, &php.ini;를 변경한 후에 웹
      서버를 재시작하십시오.
     </para>
     <para>
      <function>php_ini_loaded_file</function> 참고.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.addtopath">
    <question>
     <para>
      윈도우에서 어떻게 PHP 디렉토리를 <varname>PATH</varname>에 추가합니까?
     </para>
    </question>
    <answer>
     <para>
      윈도우 NT, 2000, XP, 2003에서:
      <itemizedlist>
       <listitem><para>
         제어판에 가서 시스템 아이콘을 엽니다. (시작 -&gt; 설정 -&gt; 제어판
         -&gt; 시스템, 윈도우 XP/2003에서는 시작 -&gt; 제어판 -&gt; 시스템)
       </para></listitem>
       <listitem><para>
         고급 탭으로 갑니다
       </para></listitem>
       <listitem><para>
         '환경 변수' 버튼을 클릭
       </para></listitem>
       <listitem><para>
         '시스템 변수' 부분을 봅니다
       </para></listitem>
       <listitem><para>
         Path 엔트리를 찾습니다 (스크롤해야 할 수 있습니다)
       </para></listitem>
       <listitem><para>
         Path 엔트리를 더블 클릭
       </para></listitem>
       <listitem><para>
         끝 부분에 ';'를 앞에 덧붙여서 PHP 디렉토리를 넣습니다 (즉,
         <literal>;C:\php</literal>)
       </para></listitem>
       <listitem><para>
         확인을 누르고 컴퓨터를 재시작합니다
       </para></listitem>
      </itemizedlist>
     </para>
     <para>
      윈도우 98/Me에서는 <filename>autoexec.bat</filename> 파일을 수정해야
      합니다:
      <itemizedlist>
       <listitem><para>
         메모장을 엽니다 (시작 -&gt; 실행, notepad를 칩니다)
       </para></listitem>
       <listitem><para>
         <filename>C:\autoexec.bat</filename> 파일을 엽니다.
       </para></listitem>
       <listitem><para>
        PATH=C:\WINDOWS;C:\WINDOWS\COMMAND;..... 줄에 위치하여 추가:
        줄 마지막에 <literal>;C:\php</literal>
       </para></listitem>
       <listitem><para>
         파일을 저장하고 컴퓨터를 재시작합니다
       </para></listitem>
      </itemizedlist>
     </para>
     <note>
      <simpara>
       위 단계가 완료된 후에 <varname>PATH</varname> 변경이 적용되도록
       재부팅하십시오.
      </simpara>
     </note>
     <para> 
      PHP 매뉴얼이 파일을 윈도우 시스템 디렉토리에 넣도록 하는 경우가 있는데,
      이 디렉토리(<filename>C:\Windows</filename>,
      <filename>C:\WINNT</filename> 등)가 기본적으로 시스템 PATH에 있기
      때문입니다. 윈도우 시스템 디렉토리로 파일을 복사하는건 배제된지
      오래되었고, 문제가 발생할 수 있습니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phprc">
    <question>
     <para>
      윈도우에서 어떻게 &php.ini; 파일을 사용하게 합니까?
     </para>
    </question>
    <answer>
     <para>
      여러 방법이 있습니다. 아파치를 사용한다면, 적합한 설치 지시를
      읽어보십시오. (<link linkend="install.windows.apache1">아파치 1</link>,
      <link linkend="install.windows.apache2">아파치 2</link>) 그 외의
      경우에는 <varname>PHPRC</varname> 환경 변수를 설정해야 합니다:
     </para>
     <para>
      윈도우 NT, 2000, XP, 2003에서:
      <itemizedlist>
       <listitem><para>
         제어판에 가서 시스템 아이콘을 엽니다. (시작 -&gt; 설정 -&gt; 제어판
         -&gt; 시스템, 윈도우 XP/2003에서는 시작 -&gt; 제어판 -&gt; 시스템)
       </para></listitem>
       <listitem><para>
         고급 탭으로 갑니다
       </para></listitem>
       <listitem><para>
         '환경 변수' 버튼을 클릭
       </para></listitem>
       <listitem><para>
         '시스템 변수' 부분을 봅니다
       </para></listitem>
       <listitem><para>
         '새로 만들기'를 클릭하고 변수 이름에 'PHPRC', 변수 값에 &php.ini;가
         위치한 디렉토리를 넣습니다. (예. <literal>C:\php</literal>)
       </para></listitem>
       <listitem><para>
         확인을 누르고 컴퓨터를 재시작합니다
       </para></listitem>
      </itemizedlist>
     </para>
     <para>
      윈도우 98/Me에서는 <filename>autoexec.bat</filename> 파일을 수정해야
      합니다:
      <itemizedlist>
       <listitem><para>
         메모장을 엽니다 (시작 -&gt; 실행, notepad를 칩니다)
       </para></listitem>
       <listitem><para>
         <filename>C:\autoexec.bat</filename> 파일을 엽니다.
       </para></listitem>
       <listitem><para>
         파일 마지막에 새 줄을 추가합니다: <literal>set PHPRC=C:\php</literal>
         (<literal>C:\php</literal>를 &php.ini;가 위치한 디렉토리로
         치환합니다) 경로에 공백을 포함할 수 없는 점에 주의하십시오. 예를
         들어, PHP를 <filename>C:\Program Files\PHP</filename>에 설치하였다면,
         <filename>C:\PROGRA~1\PHP</filename>를 넣어야 합니다.
       </para></listitem>
       <listitem><para>
         파일을 저장하고 컴퓨터를 재시작합니다.
       </para></listitem>
      </itemizedlist>
     </para>      
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.apache.multiviews">
    <question>
     <para>
      PHP와 아파치 내용 협상(MultiViews 옵션)을 사용할 수 있습니까?
     </para>
    </question>
    <answer>
     <para>
      PHP 파일로 연결이 확장자를 포함하면, 완벽하게 작동합니다. 이 FAQ는 PHP
      파일이 확장자를 포함하지 않는 경우와, 확장자 없는 URL에서 내용 협상으로
      PHP 파일을 고르는 방법만 다룹니다.
      이 경우, <literal>AddType application/x-httpd-php .php</literal> 줄을
      교체합니다:
      <programlisting role="apache-conf">
<![CDATA[
# PHP 4
AddHandler php-script php
AddType text/html php

# PHP 5
AddHandler php5-script php
AddType text/html php
]]>
     </programlisting>
     이 해결법은 아파치 1에서는 작동하지 않습니다. PHP 모듈이
     <literal>php-script</literal>을 잡아내지 못하기 때문입니다.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.requestmethods">
    <question>
     <para>
      PHP는 GET과 POST 요청 메쏘드만 처리하도록 제한됩니까?
     </para>
    </question>
    <answer>
     <para>
      아니오, CONNET 등, 어떠한 요청 메쏘드도 다룰 수 있습니다, 적합한 응답
      상태는 <function>header</function>로 보낼 수 있습니다. GET과 POST
      메쏘드만 다뤄야 할 경우에는, 아파치 설정으로 가능합니다:
      <programlisting role="apache-conf">
<![CDATA[
<LimitExcept GET POST>
Deny from all
</LimitExcept>
]]>
     </programlisting>
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
