<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333618 Maintainer: acidd15 Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="language.oop5.changelog" xmlns="http://docbook.org/ns/docbook">
 <title>OOP 변경기록</title>
 <para>
  PHP 5 OOP 모델의 변경점은 이곳에 기록됩니다. 기능의 설명과 다른 유의점은 OOP 5 문서에 정리되어 있습니다.
 </para>
 <para>
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.5.0</entry>
      <entry>
       추가됨: 예외 핸들링을 위한 <link linkend="language.exceptions">finally</link>.
      </entry>
     </row>
     <row>
      <entry>5.4.0</entry>
      <entry>
       추가됨: <link linkend="language.oop5.traits">traits</link>.
      </entry>
     </row>
     <row>
      <entry>5.4.0</entry>
      <entry>
       변경됨: <link linkend="language.oop5.abstract">abstract</link> 클래스가 생성자를 정의한다면, 그 정의는 강제성을 가집니다.
      </entry>
     </row>
     <row>
      <entry>5.3.3</entry>
      <entry>
       변경됨: <link linkend="language.namespaces">네임스페이스</link>에 대해 클래스명의 마지막 요소와 같은 이름을 가지는 메서드는 더 이상 <link
       linkend="language.oop5.decon">생성자</link> 로 다뤄지지 않습니다. 이 변경은 네임스페이스를 사용하지 않는 클래스에는 영향을 미치지 않습니다. 
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       변경됨: 인터페이스의 메서드를 구현할때 해당 메서드가 기본값을 가질경우, 더 이상 인터페이스의 기본값과 일치시키지 않아도 됩니다.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       변경됨: 이제 클래스를 값을 이용해 참조하는게 가능합니다 (예, <literal>echo $classname::constant;</literal>).
       변수의 값은 키워드가 될수 없습니다(예, <literal>self</literal>,
       <literal>parent</literal> 또는 <literal>static</literal>).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       변경됨: <link linkend="language.oop5.overloading">overloading</link> 메서드가 <link linkend="language.oop5.static">static</link> 으로 선언 되어 있을경우 <constant>E_WARNING</constant> 수준의 에러가 발생합니다.
       또한, public 액세스가 필수가 되었습니다.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       변경됨: 5.3.0 이전에서는, <function>__autoload</function> 함수 내부에서 던져진 예외는 <link linkend="language.exceptions">catch</link> 블록으로 잡을 수 없었으며, fatal error 가 되었습니다.
       이제는 __autoload 함수 에서 던진 예외를 <link linkend="language.exceptions">catch</link> 블록으로 잡을수 있습니다. 단, 한가지 제약이 있습니다. 사용자 정의 예외를 던질때, 사용자 정의 클래스는 이미 존재해야 합니다.
       __autoload 함수를 재귀적으로 사용자 정의 예외 클래스를 자동로드 하는데 사용할 수 있을 것입니다.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       추가됨: <link linkend="language.oop5.overloading">__callStatic</link> 메서드.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       추가됨: 클래스의 <emphasis>상수</emphasis> 와 프로퍼티 정의시 <link linkend="language.types.string.syntax.heredoc">heredoc</link>
       과 <link linkend="language.types.string.syntax.heredoc">nowdoc</link> 을 사용할 수 있습니다.
       주의: heredoc 값은 쌍따옴표 처리된 문자열과 같은 규칙을 따릅니다.
       (예., 변수를 사용하지 못함).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       추가됨: <link linkend="language.oop5.late-static-bindings">늦은 정적 바인딩</link>.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       추가됨: <link linkend="object.invoke">__invoke()</link> 메서드.
      </entry>
     </row>
     <row>
      <entry>5.2.0</entry>
      <entry>
       변경됨: 
       <link linkend="object.tostring">__toString()</link> 메서드는 <function>echo</function> 또는 <function>print</function> 와 같이 사용되는 경우에만 호출 되었습니다.
       하지만 지금은, 어떠한 문자열 컨텍스트에서든지 호출되며(예. <function>printf</function> 의 <literal>%s</literal> 지정자) 다른 타입의 컨텍스트에서는 호출되지 않습니다(예. <literal>%d</literal> 지정자).
       PHP 5.2.0 부터, <literal>__toString</literal> 을 통하지 않는 객체의 문자열화는 <constant>E_RECOVERABLE_ERROR</constant> 수준 에러를 발생시킵니다.
      </entry>
     </row>
     <row>
      <entry>5.1.3</entry>
      <entry>
       변경됨: 
       PHP 5 의 초기 버전에서, <literal>var</literal> 의 사용은 사용하지 않을 것으로 간주되었으며, <constant>E_STRICT</constant> 수준 에러를 발생시켰습니다. 
       이제, 더이상 사용하지 않을것으로 간주되지 않으며, 에러도 발생시키지 않습니다.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       변경됨: <link linkend="object.set-state">__set_state()</link> 정적 메서드는 이제 <function>var_export</function> 로 내보내진 클래스들도 호출 가능합니다.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       추가됨: <link linkend="object.isset">__isset()</link>
       과 <link linkend="object.unset">__unset()</link> 메서드.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </para>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
