<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 288721 Maintainer: progcom Status: ready -->

<sect1 xml:id="control-structures.switch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>switch</literal></title>
 <simpara>
  <literal>switch</literal>구문은 연속적인 같은 표현식을 갖는 
  연속적인 IF구문과 비슷하다. 많은 경우, 하나의 변수(또는 표현식)으로
  다른 많은 값과 비교할 필요가 있으며, 그 값이 동일한 코드의 파편들을
  수행할 필요가 생기게 된다. 정확히 이런 목적을 위해 <literal>switch</literal>구문이 
  사용된다.
 </simpara>
 <note>
  <simpara>
   다른 언어와는 달리 <link linkend="control-structures.continue">continue</link>문은 
   switch문에서 사용할수 있고, <literal>break</literal>문과 비슷하게 동작한다.
   루프 내에 switch문을 포함하고 있고 바깥 루프의 다음 반복문으로 진행하고 싶다면
   <literal>continue 2</literal>를 사용한다.
  </simpara>
 </note>
 <note>
  <para>
   switch/case는 <link linkend="types.comparisions-loose">느슨한
    비교</link>를 하는 점에 주의하십시오.
  </para>
 </note>
 <para>
  다음 예제 코드들은 같은 일을 서로 다르게 표현한 것입니다. 하나는
  <literal>if</literal>와 <literal>elseif</literal>문을 사용한 것이고, 다른
  하나는 <literal>switch</literal>문을 사용했습니다:
  <example>
   <title><literal>switch</literal> 구조</title>
   <programlisting role="php">
<![CDATA[
<?php
if ($i == 0) {
    echo "i는 0";
} elseif ($i == 1) {
    echo "i는 1";
} elseif ($i == 2) {
    echo "i는 2";
}

switch ($i) {
case 0:
    echo "i는 0";
    break;
case 1:
    echo "i는 1";
    break;
case 2:
    echo "i는 2";
    break;
}
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>문자열을 사용하는 <literal>switch</literal> 구조</title>
   <programlisting role="php">
<![CDATA[
<?php
switch ($i) {
case "apple":
    echo "i는 apple";
    break;
case "bar"
    echo "i는 bar";
    break;
case "cake":
    echo "i는 cake";
    break;
}
?>
]]>
   </programlisting>
  </example>
 </para>
 <para>
  실수하지 않기 위해 <literal>switch</literal>문이 어떻게 동작하는지
  이해할 필요가 있다. <literal>switch</literal>문은 한줄씩 수행된다
  (실제는, 한구문씩). 처음에는 아무 코드도 수행되지 않는다.
  <literal>switch</literal> 표현의 값과 일치하는 값을 가진
  <literal>case</literal> 구문을 발견했을 때, PHP는 그 구분을 실행합니다.
  PHP는 <literal>switch</literal>블록의 끝부분이 될때까지,
  또는 <literal>break</literal>문와 첫번째 조우를 할때까지
  구문을 계속 수행해 간다. 만약 각 case 구문 목록의 끝부분에
  <literal>break</literal>문을 쓰지않는다면 PHP는 다음 case문으로 계속
  진행하게 된다. 예를 들면 다음과 같다:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
switch ($i) {
case 0:
    echo "i는 0과 같다";
case 1:
    echo "i는 1과 같다";
case 2:
    echo "i는 2와 같다";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  여기에서, <varname>$i</varname>가 0이라면, PHP는 모든 echo문을
  실행합니다! <varname>$i</varname>가 1이라면, PHP는 마지막 두 echo문을
  실행합니다. <varname>$i</varname>가 2일 때만, 원하는 동작('i는 2와 같다'
  표시)을 합니다. 따라서, <literal>break</literal>을 잊어서는 안됩니다.
  (어떤 경우에는 일부러 빠트릴 수 있어도, 잊지 마십시오)
 </simpara>
 <simpara>
  <literal>switch</literal>구문에서, 조건문은 오직 한번만 평가되고
  각 <literal>case</literal>문에서 결과가 비교되어진다.
  <literal>elseif</literal>문에서는 조건문은 다시 평가된다. 조건문이 
  한번 이상의 비교가 필요한 복잡한 것이거나 거친(tight) 루프안에 있다면
  <literal>switch</literal>문 좀 더 빠를것이다.
 </simpara>
 <para>
  case에 대한 구문 목록은 비어있을수 있다. 이것은 단순히 다음 case문으로
  제어권을 넘겨줄 뿐이다.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
switch ($i) {
case 0:
case 1:
case 2:
    echo "i는 3보다 작지만 음수는 아닙니다.";
    break;
case 3:
    echo "i는 3";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  특별한 case가 바로 <literal>default</literal> case문이다. 이것은 다른
  case문과 모두 조건이 맞지 않을때의 경우를 위한 것입니다. 예를 들면:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
switch ($i) {
case 0:
    echo "i는 0과 같다";
    break;
case 1:
    echo "i는 1과 같다";
    break;
case 2:
    echo "i는 2와 같다";
    break;
default:
    echo "i는 0, 1, 2 어느것도 아니다";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  <literal>case</literal>의 표현식은 정수나 부동소수점 수와 문자열같은
  단순형으로 평가되는 어던 표현식도 될수 있다. 여기에 단순형으로
  재참조(dereference)되지 않는 배열이나 객체를 사용할수는 없다.
 </para>
 <para>
  switch문을 위한 제어 구조의 대체 문법이 지원된다. 더 자세한 정보는
  <link linkend="control-structures.alternative-syntax">제어 구조의 대체 문법</link>을 참고.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
switch ($i):
case 0:
    echo "i equals 0";
    break;
case 1:
    echo "i equals 1";
    break;
case 2:
    echo "i equals 2";
    break;
default:
    echo "i is not equal to 0, 1 or 2";
endswitch;
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  case 뒤에 세미콜론 대신 콜론을 쓸 수 있습니다:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
switch($beer)
{
    case 'tuborg';
    case 'carlsberg';
    case 'heineken';
        echo 'Good choice';
    break;
    default;
        echo 'Please make a new selection...';
    break;
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
