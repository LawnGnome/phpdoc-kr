<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 283798 Maintainer: progcom Status: ready -->

<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <simpara>
  <function>return</function>문이 함수안에서 호출된다면, 현재 함수의
  수행을 즉시 끝내고, 함수 호출 결과값으로 return의 인수값을 넘겨준다.
  <function>return</function>문은 <function>eval</function>함수나 
  스크립트 파일의 수행을 종료시킨다.
 </simpara>
 <simpara>
  전역 유효범위에서 호출된다면, 현재 스크립트 파일의 수행을 끝마친다.
  현재 스크립트가 <function>include</function>나 <function>require</function>되었다면,
  호출하고 있는 파일로 제어를 넘긴다. 더욱이, 현재 스크립트 파일이 
  <function>include</function>되어있는것이면, <function>return</function>에 주어지는
  값은 <function>include</function>호출에 대한 값으로 넘겨줄것이다.
  <function>return</function>이 주 스크립트 파일에서 호출되면, 스크립트의
  수행이 종료된다. 현재 스크립트 파일이 &php.ini;의 
  <link linkend="ini.auto-prepend-file">auto_prepend_file</link>이나 
  <link linkend="ini.auto-append-file">auto_append_file</link> 옵션에 의해 
  명명되었다면, 스크립트 파일의 수행은 중단된다.
 </simpara>
 <simpara>
  좀더 자세한 정보는 <link linkend="functions.returning-values">Returning values</link>
  을 참고하세요.
 </simpara>
 <para>
  <note>
   <simpara>
    <function>return</function>은 함수가 아닌 언어 구조이기 때문에, 인수를
    괄호로 쌀 필요가 없습니다. 괄호가 없는 것이 일반적으로, PHP가 더 적은
    일을 하게 합니다.
   </simpara>
  </note>
  <note>
   <simpara>
    반환값이 참조로 반환될 때는 <emphasis>절대로</emphasis> 괄호를 사용하면
    안되며, 동작하지 않습니다. 참조는 변수만 반환할 수 있으며, 구문 결과는
    반환할 수 없습니다. <literal>return ($a);</literal>를 사용한다면, 변수를
    반환하지 않고 <literal>($a)</literal> 표현의 반환값을 반환합니다. (물론,
    <varname>$a</varname>의 값입니다)
   </simpara>
  </note>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
