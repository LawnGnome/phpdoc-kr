<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322136 Maintainer: acidd15 Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.serializable" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Serializable 인터페이스</title>
 <titleabbrev>Serializable</titleabbrev>

 <partintro>

<!-- {{{ Serializable intro -->
  <section xml:id="serializable.intro">
   &reftitle.intro;
   <para>
    커스텀 직렬화를 위한 인터페이스 입니다.
   </para>

   <para>
    이 인터페이스를 구현한 클래스는 더이상 <link linkend="object.sleep">__sleep()</link> 과 <link linkend="object.wakeup">__wakeup()</link> 를 지원하지 않습니다.
    serialize 메서드는 인스턴스의 직렬화 필요시 언제든지 호출됩니다.
    이 메서드는 __destruct() 를 호출하지 않습니다. 또한 메서드 내부에서 호출하지 않는이상 어떤 부작용도 없습니다. 
    데이터가 역직렬화 될때 클래스는 자동으로 __construct() 대신에 unserialize() 메서드를 호출합니다.
    만약에 표준생성자를 실행하고 싶다면, unserialize() 메서드 내부에서 하시면 됩니다.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="serializable.synopsis">
   &reftitle.interfacesynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Serializable</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Serializable</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.serializable')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="serializable.examples">
   <example xml:id="serializable.example.basic"><!-- {{{ -->
    <title>기초 사용법</title>
    <programlisting role="php">
<![CDATA[
<?php
class obj implements Serializable {
    private $data;
    public function __construct() {
        $this->data = "My private data";
    }
    public function serialize() {
        return serialize($this->data);
    }
    public function unserialize($data) {
        $this->data = unserialize($data);
    }
    public function getData() {
        return $this->data;
    }
}

$obj = new obj;
$ser = serialize($obj);

var_dump($ser);

$newobj = unserialize($ser);

var_dump($newobj->getData());
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(38) "C:3:"obj":23:{s:15:"My private data";}"
string(15) "My private data"
]]>
    </screen>
   </example><!-- }}} -->
  </section>


 </partintro>

 &language.predefined.serializable.serialize;
 &language.predefined.serializable.unserialize;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
