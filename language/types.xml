<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 324122 Maintainer: progcom Status: ready -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>자료형</title>

 <sect1 xml:id="language.types.intro">
  <title>소개</title>

  <simpara>
   PHP는 여덟가지 기본 자료형을 지원합니다.
  </simpara>

  <para>
   네가지 스칼라형:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>boolean</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>integer</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>float</type> (부동소수, <type>double</type>)
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>string</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   두가지 복합형:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>array</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>object</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   마지막으로 세가지 특수형:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>resource</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>NULL</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>callable</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   이 매뉴얼에는 설명을 위해서 몇가지 <link
    linkend="language.pseudo-types">모의형</link>을 사용합니다:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>mixed</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>number</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>callback</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   그리고 모의 변수 <parameter>$...</parameter>
  </para>

  <simpara>
   매뉴얼의 몇몇 레퍼런스에 "double" 형이 남아 있습니다. double은 float와
   같다고 생각하십시오; 두 이름은 단지 역사적인 이유로 남아 있습니다.
  </simpara>

  <simpara>
   변수의 자료형은 보통 프로그래머가 설정하지 않습니다; 대신, PHP가 변수가
   사용되는 지점에 따라서 실행시에 자동으로 결정합니다.
  </simpara>

  <note>
   <simpara>
    <link linkend="language.expressions">표현</link>에 따른 자료형과 값을
    확인하려면, <function>var_dump</function> 함수를 사용하십시오.
   </simpara>

   <para>
    디버깅을 위해 자료형을 쉽게 읽을 수 있는 형태를 얻으려면,
    <function>gettype</function> 함수를 사용하십시오. 특정한 자료형을
    확인하려면 <function>gettype</function>을 <emphasis>사용하지
     말고</emphasis> <literal>is_<replaceable>type</replaceable></literal>
    함수를 사용하십시오. 예를 들면:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a_bool = TRUE;   // 논리
$a_str  = "foo";  // 문자열
$a_str  = 'foo';  // 문자열
$an_int = 12;     // 정수

echo gettype($a_bool); // 출력:  boolean
echo gettype($a_str);  // 출력:  string

// 정수라면, 4 증가
if (is_int($an_int)) {
    $an_int += 4;
}

// $bool이 문자열이라면, 출력
// (아무것도 출력하지 않음)
if (is_string($a_bool)) {
    echo "문자열: $a_bool";
}
?>
]]>
    </programlisting>
   </informalexample>
  </note>

  <simpara>
   변수를 강제로 특정 자료형으로 변환하려면, 변수를 <link
    linkend="language.types.typecasting">형변환</link>하거나
   <function>settype</function> 함수를 사용하십시오.
  </simpara>

  <simpara>
   변수는 어떤 상황이냐에 따라서, 그 시점에 어떠한 자료형을 요구하냐에 따라서
   다른 자료형으로 평가될 수 있습니다. 자세한 정보는 <link
    linkend="language.types.type-juggling">자료형 조절</link> 섹션을
   참고하십시오. <link linkend="types.comparisons">자료형 비교표</link>도
   유용합니다. 다양한 자료형 관련 비교 예제를 볼 수 있습니다.
  </simpara>
 </sect1>

 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.array;
 &language.types.object;
 &language.types.resource;
 &language.types.null;
 &language.types.callable;
 &language.types.pseudo-types;
 &language.types.type-juggling;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
