<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: progcom Status: ready -->
<!-- CREDITS: fuzzy74 -->
 <chapter xml:id="features.safe-mode" xmlns="http://docbook.org/ns/docbook">
  <title>안전 모드</title>

  <para>
   PHP 안전 모드는 공유-서버 보안 문제를 풀려는 시도이다.
   이 문제를 PHP 수준에서 풀려고 하는것은 구조적으로 올바르지 않다.
   그러나 웹서버와 OS 수준에서의 차선책이 아주 현실적이지는 않기 때문에,
   많은 사람, 특히 ISP, 들이 현재 안전 모드를 사용한다.
  </para>
  <warning>
   <para>
    안전 모드는 PHP 6.0.0에서 제거되었습니다.
   </para>
  </warning>

  <sect1 xml:id="ini.sect.safe-mode">
   <title>보안과 안전 모드</title>
   <para>
    <table>
     <title>보안과 안전 모드 설정 지시어</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>지시어명</entry>
        <entry>기본값</entry>
        <entry>변경값</entry>
        <entry>변경점</entry>
       </row>
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 4.1.0부터 존재. PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 4.1.0부터 존재. PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>"PHP_"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>"LD_LIBRARY_PATH"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP 6.0.0에서 제거.</entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>PHP &lt; 5.3.0에서 PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>&php.ini;만</entry>
       <entry>PHP 4.0.1부터 존재.</entry>
      </row>
      <row>
       <entry>disable_classes</entry>
       <entry>""</entry>
       <entry>&php.ini;만</entry>
       <entry>PHP 4.3.2부터 존재.</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
    &ini.php.constants;
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        PHP의 안전 모드 활성화 여부.
        PHP가 <literal>--enable-safe-mode</literal>로 컴파일 되면 기본값 On,
        아니면 Off.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        기본값, 안전 모드는 파일이 열릴 때 UID 비교 검사를 수행한다.
        이 설정을 GID 비교로 완화하려면, safe_mode_gid을 켜도록 한다.
        파일 접근에 대해 <literal>UID</literal> (&false;) 검사를 하는지,
        <literal>GID</literal> (&true;) 검사를 하는지의 여부.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        이 디렉토리와 하위디렉토리에서 파일을 include할 때에는
        <literal>UID</literal>/<literal>GID</literal> 검사가 무시된다
        (디렉토리는 <link linkend="ini.include-path">include_path</link>나 include되는
        전체 경로가 되어야 한다).
       </para>
       <simpara>
        PHP 4.2.0부터 이 지시어는 <link
         linkend="ini.include-path">include_path</link> 지시어와 같은
        방식으로, 콜론(윈도우에서는 세미콜론)으로 구분하여 복수의 경로를 가질
        수 있습니다.
       </simpara>
       <simpara>
        설정 제한은 실질적으로 디렉토리명이 아닌 앞첨자(prefix)가 된다.
        이말의 의미는 "safe_mode_include_dir = /dir/incl"는 
        "/dir/include"와 "/dir/incls"가 존재하기만 한다면 그 디렉토리도 접근이 허용된
        다는 것이다. 특정 디렉토리만으로 접근을 제한하고자 하면, 슬래시로 끝내면 된다.
        예를 들면: "safe_mode_include_dir = /dir/incl/"
       </simpara>
       <simpara>
        이 지시어 값이 비어 있으면, PHP 4.2.3과 PHP 4.3.3부터 다른
        <literal>UID</literal>/<literal>GID</literal> 값을 가지는 파일을
        포함할 수 없습니다. 이 이전 버전에서는 모든 파일을 포함할 수
        있었습니다.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP가 안전 모드를 사용중이라면, <function>system</function>과 그 외의
        <link linkend="ref.exec">시스템 프로그램을 실행하는 함수</link>는
        이 디렉토리에 있지 않으면 프로그램 시작이 거부된다.
        윈도우를 포함한 모든 환경에서 디렉토리 구분은 <literal>/</literal>를
        이용해야 합니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        특정 환경 변수를 설정하는것은 잠재적인 보안 구멍이 될수 있다.
        이 지시어는 콤마-구분자 리스트의 앞첨자(prefix)를 포함한다. 안전 모드에서,
        유저는 여기서 제공되는 앞첨자로 시작하는 이름을 갖는 환경변수만 변경할수
        있을것이다. 기본값으로, 유저는 PHP_로 시작하는 환경 변수만 설정할수 있다.
        (e.g. PHP_FOO=BAR).
       </para>
       <note>
        <para>
         이 지시어가 비어있으면, PHP는 유저가 모든 환경 변수를 변경할수 없게 할것이다!
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        이 지시어는 엔드 유저가 <function>putenv</function>를 사용하여 변경할수 없는
        콤마-구분자 리스트의 환경 변수를 포함한다. 이 변수들은 
        safe_mode_allowed_env_vars가 그들을 변경할수 있도록 설정되어있을지라도
        보호될것이다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHP가 열수 있는 파일을 특정 디렉토리-트리로 제한한다.
        이 지시어는 안전 모드가 켜졌는지 꺼졌는지와는 상관이 <emphasis>없다</emphasis>.
       </para>
       <para>
        스크립트가 예를 들면, <function>fopen</function> 이나 
        <function>gzopen</function>으로 파일을 열려고 시도할때, 파일의 위치를
        검사한다. 파일이 설정된 디렉토리-트리의 밖에 있다면, PHP는 그 파일을
        여는것을 거부할것이다. 모든 심볼릭 링크가 검사되기 때문에, symlink로
        이 제한을 회피할수 없다. 파일이 존재하지 않아서 symlink로 풀어낼 수
        없으면 파일 이름을 (풀어낸) <parameter>open_basedir</parameter>와
        비교합니다.
       </para>
       <para>
        특수한 값 <systemitem class="filesystem">.</systemitem>은 스크립트가
        작업하는 디렉토리를 기본 디렉토리로 사용합니다. 이는 스크립트의 작업
        디렉토리가 <function>chdir</function>을 통해 쉽게 바뀔 수 있기 때문에
        조금 위험합니다.
       </para>
       <para>
        <filename>httpd.conf</filename>에서, 다른 지시어와 <link
         linkend="configuration.changes.apache">같은 방식</link>으로
        "php_admin_value open_basedir none"을 사용해서 open_basedir을 끌 수
        있습니다. (특정 가상 호스트를 위해 사용할 수 있습니다)
       </para>
       <para>
        윈도우에서는 세미콜론으로 디렉토리를 구분한다. 그외 모든 시스템은,
        콜론으로 디렉토리를 구분한다. 아파치 모듈에서, 부모 디렉토리부터의 
        open_basedir 경로는 현재 자동적으로 상속된다.
       </para>
       <para>
         open_basedir로 설정된 제한은 실질적으로 디렉토리명이 아닌, 앞첨자(prefix)가
         된다. 이 말의 의미는 "open_basedir = /dir/incl"는 "/dir/include" 과
         "/dir/incls" 디렉토리가 존재한다면 그 두 디렉토리로의 접근도 허용한다는것이다.
         특정 디렉토리로만 접근을 제한하고자 한다면, 슬래시로 끝내면 된다.
         For example: "open_basedir = /dir/incl/"
       </para>
       <para>
        기본값은 모든 파일이 열릴수 있도록 허용되어 있다.
       </para>
       <note>
        <para>
         PHP 5.3.0부터 open_basedir을 실행시에 강화할 수 있습니다. 즉,
         open_basedir이 &php.ini;에서 <literal>/www/</literal>로 설정되어
         있다면, 스크립트 실행시에 <function>ini_set</function>으로
         <literal>/www/tmp/</literal>로 설정을 강화할 수 있습니다.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        이 지시어는 <link linkend="security">보안</link> 때문에
        특정 함수를 비활성화시켜준다. 컴마로 구분된 함수명의 리스트를 취한다.
        disable_functions는 <link linkend="ini.safe-mode">안전 모드</link>에
        의해 영향을 받지 않는다.
       </simpara>
       <simpara>
        이 지시어는 &php.ini;에서 설정되어야 한다. 예를 들면,
        이 값을 &httpd.conf;에서 설정할수 없다.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        이 지시어는 <link linkend="security">보안</link>적인 측면때문에
        특정 클래스를 비활성화시켜준다. 컴마로 구분된 클래스명의 리스트를 취한다.
        disable_classes는 <link linkend="ini.safe-mode">안전 모드</link>에
        의해 영향을 받지 않는다.
       </simpara>
       <simpara>
        이 지시어는 &php.ini;에서 설정되어야 한다. 예를 들면,
        이 값을 &httpd.conf;에서 설정할수 없다.
       </simpara>
       <note>
        <title>Availability note</title>
        <simpara>
         이 지시어는 PHP 4.3.2부터 사용가능하게 되었다.
        </simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    참고: <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link>, 
    <link linkend="ini.log-errors">log_errors</link>.
   </para>

  <para>
   <link linkend="ini.safe-mode">safe_mode</link>가 켜져 있으면, PHP는 현재
   스크립트의 소유자(owner)가 파일 함수에 의해 제어되는 파일의 소유자(owner)나
   그 디렉토리와 일치하는지 검사한다. 예를 들면:
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php 
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd 
]]>
   </programlisting>
   script.php를 실행:
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd'); 
?>
]]>
   </programlisting>
   안전 모드가 활성화되어 있으면 다음 에러가 보여진다.
   <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not 
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   엄격한 <literal>UID</literal> 검사가 적절하지 않고,
   완화된 <literal>GID</literal> 검사가 효율적인 환경일수 있다.
   이런 경우는 <link linkend="ini.safe-mode-gid">safe_mode_gid</link> 스위치 방식으로
   지원된다. <literal>On</literal>으로 설정하면 완화된 <literal>GID</literal> 검사가
   수행되고, <literal>Off</literal> (기본값)로 설정되면 <literal>UID</literal> 검사가 
   수행된다.
  </para>
  <para>
   <link linkend="ini.safe-mode">safe_mode</link> 대신에, 
   <link linkend="ini.open-basedir">open_basedir</link> 디렉토리를 설정하면,
   모든 파일 제어가 특정 디렉토리 밑의 파일로만 제한됩니다.
   예를 들면(아파치 &httpd.conf; 예): 
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot 
</Directory>
]]>
   </programlisting>
   이 <link linkend="ini.open-basedir">open_basedir</link> 설정으로 
   동일한 script.php를 실행하면 결과는 다음과 같다:
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <para>
   또한 각각의 함수들을 비활성화시킬수 있다.
   <link linkend="ini.disable-functions">disable_functions</link> 지시어는
   &php.ini; 파일 밖에서 사용될수 없다.  그래서 &httpd.conf; 파일의 per-virtualhost 나 
   per-directory 기반의 함수를 비활성화시킬수 없다.
   이 지시어를 &php.ini;에 추가하면:
   <programlisting role="ini">
<![CDATA[
disable_functions = readfile,system  
]]>
   </programlisting>
   다음의 결과가 나온다:
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <warning>
   <para>
    물론, 이러한 PHP 제한은 실행 중인 바이너리에선 유효하지 않습니다.
   </para>
  </warning>
 </sect1>

  <sect1 xml:id="features.safe-mode.functions">
   <title>안전 모드에 의해 제한되는/비활성화되는 함수들</title>
   <para>
    다음은 아직 완전하지 않고 부정확할 수도 있는 
    <link linkend="features.safe-mode">안전 모드</link>에 의해 제한되는 함수 목록이다.
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>안전 모드 제한 함수들</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>함수</entry>
        <entry>제한점</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry>ifx_*</entry>
        <entry>sql_safe_mode 제한, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>ingres_*</entry>
        <entry>sql_safe_mode 제한, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>mysql_*</entry>
        <entry>sql_safe_mode 제한, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_lo_import</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry> safe_mode_protected_env_vars 와 safe_mode_allowed_env_vars 
        ini-지시어에 따름. <function>putenv</function> 문서 참고.</entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">backtick operator</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (functional equivalent 
        of backticks)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>안의
        실행파일만 실행할수 있다. 실무적인 이유로 현재는
        실행파일에 대한 경로에 <literal>..</literal>을 허용하지 않는다.
        이 함수의 인수에는 <function>escapeshellcmd</function>를
        실행합니다.</entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>안의
        실행파일만 실행할수 있다. 실무적인 이유로 현재는
        실행파일에 대한 경로에 <literal>..</literal>을 허용하지 않는다.
        이 함수의 인수에는 <function>escapeshellcmd</function>를
        실행합니다.</entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>안의
        실행파일만 실행할수 있다. 실무적인 이유로 현재는
        실행파일에 대한 경로에 <literal>..</literal>을 허용하지 않는다.
        이 함수의 인수에는 <function>escapeshellcmd</function>를
        실행합니다.</entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>안의
        실행파일만 실행할수 있다. 실무적인 이유로 현재는
        실행파일에 대한 경로에 <literal>..</literal>을 허용하지 않는다.
        이 함수의 인수에는 <function>escapeshellcmd</function>를
        실행합니다.</entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>fopen</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (<parameter>source</parameter>와
        <parameter>target</parameter>에서)</entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; 추가적으로, SUID, SGID와 sticky 비트를 
        설정할수 없다</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (주의: 타겟만 검사됨)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (주의: 타겟만 검사됨)</entry>
       </row>
       <row>
        <entry><function>apache_request_headers</function></entry>
        <entry>안전 모드에서, 'authorization' (대소문자 구별안함)로 시작하는
        헤더를 반환하지 않습니다.</entry>
       </row>
       <row>
        <entry><function>header</function></entry>
        <entry>안전 모드에서, <literal>WWW-Authenticate</literal>(HTTP 인증에서 사용됨)를
        설정하면, 이 헤더의 <literal>realm</literal>부분에 스크립트의 uid가 추가된다.
        </entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">PHP_AUTH variables</link></entry>
        <entry>
         안전 모드에서는, 변수 <varname>PHP_AUTH_USER</varname>와,
         <varname>PHP_AUTH_PW</varname>, <varname>AUTH_TYPE</varname>이
         <varname>$_SERVER</varname> 안에서 사용될수 없다.
         그와 상관 없이, USER에 대해서 <varname>REMOTE_USER</varname>을 사용할수 있다 
         (주의: PHP 4.3.0 이후에서만 적용됨)
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (주의: PHP 4.2.1 이후에서만 적용됨)
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (note: PHP 4.2.1 이후에서만 적용됨)
        </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         PHP가 &safemode;에서 실행되면 아무 효과가 없음.
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ini.max-execution-time">max_execution_time</link>
        </entry>
        <entry>
         PHP가 &safemode;에서 실행되면 아무 효과가 없음.
        </entry>
       </row>
       <row>
        <entry>
         <function>mail</function>
        </entry>
        <entry>
         안전 모드에서, 다섯번째 인수는 사용할 수 없습니다. (주의: PHP
         4.2.3부터 적용)
        </entry>
       </row>
       <row>
        <entry>
         <function>session_start</function>
        </entry>
        <entry>
         기본값인 <literal>files</literal> <link
          linkend="ini.session.save-handler">session.save_handler</link>를
         사용할 때 스트립트 소유자는 <link
          linkend="ini.session.save-path">session.save_path</link> 디렉토리
         소유자와 같아야 합니다.
        </entry>
       </row>
       <row>
        <entry>
         모든 파일시스템과 스트림 함수.
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (<link
          linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link>
         &php.ini; 옵션 참고)
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
