<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.3 Maintainer: progcom Status: ready -->
  <sect1 id="install.unix">
   <title>유닉스 시스템에 설치</title>
   <para>
    이 섹션은 유닉스 시스템에 PHP의 일반적인 설정과 설치법을 안내합니다.
    작업을 시작하기 전에 사용하는 플랫폼이나 웹서버에 특화한 섹션이 존재하는지
    살펴보십시오.
   </para>
   <para>
    필요한 사전 지식과 소프트웨어:
    <itemizedlist>
     <listitem>
      <simpara>
       기본 유닉스 기술 ("make"를 다룰 수 있고, 컴파일한다면 C 컴파일러도)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       ANSI C 컴파일러 (컴파일할 때)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       flex (컴파일을 위해)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bison (컴파일을 위해)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       웹 서버
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       특정한 모듈 컴포넌트 (gd, pdf libs 등등)
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <para>
    유닉스 플랫폼에 PHP 설치는 여러가지 방법이 존재합니다. 컴파일과 설정을
    할 수도 있고, 다양한 패키지를 사용할 수도 있습니다. 이 문서는
    주로 PHP를 컴파일하고 설정하는 방법을 다룹니다.
   </para>
   
   <para>
    PHP 설치의 첫 단계는 <filename>configure</filename> 스크립트를 통한
    명령줄 옵션의 설정입니다. 이 페이지에서는 가장 일반적인 옵션을 설명하지만,
    사용할 수 있는 다른 많은 옵션이 존재합니다. 철저히 하기 위해서는 <link
    linkend="install.configure">설정 옵션의 전체 목록</link>을 확인하십시오.
    PHP를 인스톨하는 여러가지 방법이 존재합니다:
    <itemizedlist>
     <listitem>
      <simpara>
       <link linkend="install.apache">아파치 1.x 모듈</link>이나 <link
       linkend="install.apache2">아파치 2.x 모듈</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="install.caudium">Caudium의 Pike 모듈</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="install.otherhttpd">AOL서버, NSAPI, phttpd, Pi3Web,
       Roxen, thttpd, Zeus</link>와 함께 사용
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="install.commandline">CGI 실행</link>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <sect2 id="install.unix.apache-module">
    <title>아파치 모듈 퀵 레퍼런스</title>
    
    <para>
     PHP는 여러 방법으로 컴파일 할 수 있지만, 가장 많이 사용하는 것은 아파치
     모듈입니다. 다음은 빠른 설치를 위한 개요입니다.
    </para>
    
    <example id="install.unix.apache-module.quick">
     <title>
      PHP 4의 빠른 설치 순서 (아파치 모듈 버전)
     </title>
     <programlisting role="shell">
<![CDATA[
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-ftp
9.  make
10. make install
11. cd ../apache_1.3.x
12. ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install
15. cd ../php-x.x.x
16. cp php.ini-dist /usr/local/lib/php.ini
17. httpd.conf나 srm.conf 파일을 수정하고 다음을 추가:
      AddType application/x-httpd-php .php

18. 아파치 서버를 재시작하는 보통의 처리. (HUP나 USR1 시그널로 리로드하는게
    아닌, 서버 중지 및 재시작을 해야 합니다)
]]>
     </programlisting>
    </example>
   </sect2>

   <sect2 id="install.building">
    <title>빌딩</title>
    <simpara>
     PHP를 설정하면, CGI 실행 파일을 빌드할 수 있습니다.
     <command>make</command>가 이를 처리해줍니다. 실패하고 어째서인지를 파악할
     수 없으면, <link linkend="install.problems">문제 섹션</link>을
     읽어보십시오.
    </simpara>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

