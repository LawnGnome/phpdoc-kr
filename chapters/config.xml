<chapter id="configuration">
	<title>설정(Configuration)</title>
	<sect1 id="configuration.file">
		<title>The configuration file</title>
		<simpara>
   설정 파일(configuration file)은 (PHP 3.0에서는 <filename>php3.ini</filename> 이고, 
   PHP 4.0에서는 <filename>php.ini</filename> 이다.) PHP가 시작될 때 읽혀진다. 
   서버 모듈 형태의 PHP는 이 작업을 서버가 실행 될 때 한번만 하게 된다. 
   <acronym>CGI</acronym>형태의 경우는 CGI 프로그램이 실행 될 때마다 매번 일어난다.</simpara>
		<simpara>
    PHP를 아파치 모듈로 사용할 때는, PHP의 설정을 Apache configuration 파일과 
   .htaccess 파일에서 지정하여 설정할 수도 있다.</simpara>
		<simpara>
    PHP 3.0에서는, PHP의 지시자(directive)들과 동일한 Apache httpd.conf 지시자가 있다.
   httpd.conf에서의 지시자 이름은 php3.ini의 지시자 이름 앞에 "php3_"를 붙인 것이다.</simpara>
		<para>
    PHP 4.0에서는 다음과 같은 몇 개의 Apache 지시자를 사용하여 PHP 설정을 바꿀 수 있다.
    <variablelist>
				<varlistentry>
					<term>
						<systemitem role="directive">php_value</systemitem>
						<parameter>name</parameter>
						<parameter>value</parameter>
					</term>
					<listitem>
						<para>
        지정된 변수에 원하는 값을 설정한다.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<systemitem role="directive">php_flag</systemitem>
						<parameter>name</parameter>
						<parameter>on|off</parameter>
					</term>
					<listitem>
						<para>
        Boolean 값을 가지는 설정 옵션의 값을 설정한다.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<systemitem role="directive">php_admin_value</systemitem>
						<parameter>name</parameter>
						<parameter>value</parameter>
					</term>
					<listitem>
						<para>
      지정된 변수에 원하는 값을 설정한다. "Admin" 으로 지정된 설정은 
      main Apache 설정파일에서만 설정이 가능하다. 
      .htaccess 파일에서 그 내용을 변경하는 것은 불가능하다.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<systemitem role="directive">php_admin_flag</systemitem>
						<parameter>name</parameter>
						<parameter>on|off</parameter>
					</term>
					<listitem>
						<para>
        Boolean 값을 가지는 설정 옵션의 값을 설정한다.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
		<simpara>
   현재 설정된 설정값은 <function>phpinfo</function> 함수를 사용하여 확인해 볼 수 있다. 
   또한 개개의 설정 내용을 확인하기 위해서는 <function>get_cfg_var</function> 함수를 사용하면 된다.</simpara>
		<sect2 id="ini.sect.general">
			<title>General Configuration Directives</title>
			<para>
				<variablelist>
					<varlistentry id="ini.allow-url-fopen">
						<term>
							<parameter>allow_url_fopen</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
	 This option enables the URL-aware fopen wrappers that enable accessing URL object
	 like files. Default wrappers are provided for the access of 
	 <link linkend="features.remote-files">remote files</link>
	 using the ftp or http protocol, some extensions like zlib may register additional wrappers. 
	</para>
							<note>
								<para>
	  This option was introduced immediately after the release of version 4.0.3.
	  For versions up to and including 4.0.3 you can only disable this feature at
	  compile time by using the configuration switch 
	  <link linkend="install.configure.disable-url-fopen-wrapper">
										<parameter>--disable-url-fopen-wrapper</parameter>
									</link>.
	 </para>
							</note>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.asp-tags">
						<term>
							<parameter>asp_tags</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<simpara>

     일반적인 &lt;?php ?&gt; 택 대신에 ASP 스타일의 &lt;% %&gt;  택을 추가적으로 사용할 수 있도록 한다. 
     또한 변수값 출력문인 &lt;%= $value %&gt; 형태의 지원도 포함한다. 
     자세한 정보는 <link linkend="language.basic-syntax.phpmode">Escaping from HTML</link>부분을 참조하자.
	</simpara>
							<note>
								<para>ASP-style tags 지원은 3.0.4 버전에서 추가되었다.</para>
							</note>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.auto-append-file">
						<term>
							<parameter>auto_append_file</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
        실행될 PHP 파일 뒤에 자동으로 첨부될 파일의 이름을 적는다. 
      호출된 파일은 <function>include</function> 함수를 통해서 포함되므로 
      <link linkend="ini.include-path">include_path</link> 지시자가 적용된다.</para>
							<para>
								<systemitem class="constant">none</systemitem> 값을 주게 되면 auto-appending이 disable된다.
							<note>
									<simpara>
         만약 스크립트가 <function>exit</function>로 종료되게 되면 auto-append는 일어나지 않는다. </simpara>
								</note>
							</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.auto-prepend-file">
						<term>
							<parameter>auto_prepend_file</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
      실행될 PHP 파일 앞에 자동으로 첨부될 파일의 이름을 적는다. 
      호출된 파일은 <function>include</function> 함수를 통해서 포함되므로 
      <link linkend="ini.include-path">include_path</link> 지시자가 적용된다.</para>
							<para>
								<systemitem class="constant">none</systemitem> 값을 주게 되면 auto-prepending이 disable된다.</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.cgi-ext">
						<term>
							<parameter>cgi_ext</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para/>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.display-errors">
						<term>
							<parameter>display_errors</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      이 결정자(determine)는 에러가 생겼을 때 에러출력을 HTML로 화면에 나타낼 것인가 아닌가를 결정한다
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.doc-root">
						<term>
							<parameter>doc_root</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
        PHP의 "root directory"를 지정한다. 값이 있는 경우만 적용된다.
      PHP가 <link linkend="ini.safe-mode">safe mode</link>로 설정되어 있을 경우, 이 디렉토리 밖에 있는 파일은 사용할 수 없다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.engine">
						<term>
							<parameter>engine</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      이 지시자는 아파치 모듈 버전의 PHP에서만 유효하다. 
      이것은 사이트에서 디렉토리 단위나, Virtual 서버 단위를 기반으로 PHP 파싱 기능을 켜거나 끄도록 한다. 
      <filename>httpd.conf</filename> 파일의 적당한 위치에 <userinput>engine off</userinput>라고 명시함으로써, 
      PHP를 가능하거나 불가능하게 할 수 있다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.error-log">
						<term>
							<parameter>error_log</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
     스크립트 에러가 로그될 파일 이름을 정한다. 
     로그 파일로 시스템 로그를 사용하기 위해서 <literal>syslog</literal>라는 별도의 값이 이용된다. 
     유닉스에서는 syslog(3)이고, Windows NT에서는 Event log가 된다. 
     Windows 95에서는 시스템 로그를 지원하지 않는다</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.error-reporting">
						<term>
							<parameter>error_reporting</parameter>
							<type>integer</type>
						</term>
						<listitem>
							<para>
      에러 레포팅의 레벨을 설정한다. 이 파라메타 값은 비트 단위로 설정한다. 
      다음의 값들 중에 원하는 에러 레포팅 레벨의 값을 더해서 설정하면 된다. 
	 <table>
									<title>Error Reporting Levels</title>
									<tgroup cols="2">
										<thead>
											<row>
												<entry>bit value</entry>
												<entry>enabled reporting</entry>
											</row>
										</thead>
										<tbody>
											<row>
												<entry>1</entry>
												<entry>normal errors</entry>
											</row>
											<row>
												<entry>2</entry>
												<entry>normal warnings</entry>
											</row>
											<row>
												<entry>4</entry>
												<entry>parser errors</entry>
											</row>
											<row>
												<entry>8</entry>
												<entry>non-critical style-related warnings</entry>
											</row>
										</tbody>
									</tgroup>
								</table>
        기본값은 7 이다(normal errors와 normal warnings, parser errors가 레포트 된다). 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.open-basedir">
						<term>
							<parameter>open_basedir</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
	 PHP가 열어볼 수 있는 파일을 특정 디렉토리 이하로 제한한다. 
	</para>
							<para>
      예를 들어 어떤 스크립트가 fopen이나 gzopen으로 파일을 열려고 할 때 그 파일이 지정된 위치에 있는가 검사한다. 
      만약 파일이 지정된 디렉티리밖에 있다면, PHP는 이 열기 동작을 거부한다. 
      모든 symbolic link들은 원래의 이름으로 바뀌어 해석된다. 
      따라서 이 제한을 피하기 위해 symbolic link를 사용하는 것을 방지할 수 있다.
	</para>
							<para>
								<systemitem class="constant">.</systemitem>.이라는 값을 주면 스크립트 파일이 있는 디렉토리가 base-directory로 지정된다.
	</para>
							<para>
        Windows에서는 세미콜론(;)으로, 다른 OS에서는 콜론(:)으로 구분한다. 
        As an Apache module, open_basedir paths from parent directories are now
	 automatically inherited.
	</para>
							<note>
								<para>PHP 3.0.7 부터, 한 개 이상의 디렉토리를 지정할 수 있도록 되었다. </para>
							</note>
							<para>
	 기본값은 모든 파일을 열 수 있는 것이다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.gpc-order">
						<term>
							<parameter>gpc_order</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
       GET / POST / COOKIE 변수들의 해석 순서를 정한다. 
     기본값은 "GPC"이다. 예를들어 "GP"라고 설정한다면, 
     PHP는 cookie들은 완전히 무시하고, 같은 이름을 가지 POST 변수가 있는 GET 변수는 
     POST 변수의 값으로 덮어 쓰여지게 된다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.ignore-user-abort">
						<term>
							<parameter>ignore_user_abort</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
    기본값은 On이다. 만약 이 값이 Off이면, 원격 클라이언트가 실행중 연결을 끊으면 스크립트의 수행이 중단된다.
	 <function>ignore_user_abort</function>.
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.include-path">
						<term>
							<parameter>include_path</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
								<function>require</function>와 <function>include</function>, <function>fopen_with_path</function> 
      함수들이 사용하는 파일을 찾을 위치(path)를 지정한다. 
      string의 형식은 시스템 환경변수 <envar>PATH</envar>의 설정과 비슷하다. 
      UNIX에서는 콜론으로 나뉘어진 디렉토리들의 리스트이고, Windows에서는 세미콜론을 사용한다. 
	 <example>
									<title>UNIX include_path</title>
									<programlisting role="php3.ini">
include_path=.:/home/httpd/php-lib
</programlisting>
								</example>
								<example>
									<title>Windows include_path</title>
									<programlisting role="php3.ini">
include_path=".;c:\www\phplib"
</programlisting>
								</example>
	 기본값은 <literal>.</literal>이다. (현재 디렉토리만)</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.isapi-ext">
						<term>
							<parameter>isapi_ext</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para/>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.log-errors">
						<term>
							<parameter>log_errors</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      스크립트 에러 메시지가 서버의 에러 로그에 로그되는 가를 정한다. 
      이 옵션은 서버에 따라 다르게 동작한다.</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.magic-quotes-gpc">
						<term>
							<parameter>magic_quotes_gpc</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
       GPC (Get/Post/Cookie) 동작 중에 일어나는 magic_quotes 기능을 설정한다. 
     magic_quotes가 설정되어 있으면 GPC에서 입력된 모든 ' (single-quote)와 
     &quot; (double quote), \ (backslash), NUL 의 앞에 백슬래시(\)가 자동으로 붙게 된다. 
     또한, <parameter>magic_quotes_sybase</parameter> 같이 설정되어 있으면 
     '(single-quote)는 백슬래시(\)가 아닌 single-quote(')가 앞에 붙게 된다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.magic-quotes-runtime">
						<term>
							<parameter>magic_quotes_runtime</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
     만약 <parameter>magic_quotes_runtime</parameter>이 설정되어 있다면, 
     database와 text 파일에서 읽어 들이는 모든 데이터에 있는 ' (single-quote)와 
     &quot; (double quote), \ (backslash), NUL 의 앞에 백슬래시(\)가 붙는다. 
     또한, <parameter>magic_quotes_sybase</parameter> 같이 설정되어 있으면 
     '(single-quote)는 백슬래시(\)가 아닌 single-quote(')가 앞에 붙게 된다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.magic-quotes-sybase">
						<term>
							<parameter>magic_quotes_sybase</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      만약 <parameter>magic_quotes_gpc</parameter>나 <parameter>magic_quotes_runtime</parameter>이 설정되어 있고, 
      <parameter>magic_quotes_sybase</parameter>도 같이 설정되어 있으면 
      '(single-quote)는 백슬래시(\)가 아닌 single-quote(')가 앞에 붙게 된다. 
  	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.max-execution-time">
						<term>
							<parameter>max_execution_time</parameter>
							<type>integer</type>
						</term>
						<listitem>
							<para>
      PHP 구문해석기(parser)가 한 스크립트를 처리하는데 걸리는 최대 시간을 초단위로 설정한다. 
      이것은 문제가 있는 스크립트로부터 서버가 모두 점유당하는 것을 방지하는데 도움이 된다. 
      기본값은 <literal>30</literal>이다.
        </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.memory-limit">
						<term>
							<parameter>memory_limit</parameter>
							<type>integer</type>
						</term>
						<listitem>
							<para>
     한 스크립트가 할당받을 수 있는 메모리의 최대 크기를 지정한다. 
     이것은 문제가 있는 스크립트로부터 서버 전체의 메모리가 잡혀 먹히는 것을 방지한다. 
	</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.nsapi-ext">
						<term>
							<parameter>nsapi_ext</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para/>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.register-globals">
						<term>
							<parameter>register_globals</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
         EGPCS (Environment, GET, POST, Cookie, Server) 변수들을 전역 변수로 설정할 것인가를 정한다.
         사용자의 데이타를 스크립트의 전역 변수 영역에 난잡하게 쌓아놓기를 원하지 않는다면 
         이 설정은 꺼놓는 것이 좋다.
         이 설정은 <link linkend="ini.track-vars">track_vars</link> 설정를 
         고려해서 사용하면 매우 유용하게 사용할 수 있다.
         <link linkend="ini.track-vars">track_vars</link>설정을 켜 놓으면
         사용자의 EGPCS 변수들은 모두 
         <varname>$HTTP_ENV_VARS</varname>,
         <varname>$HTTP_GET_VARS</varname>,
         <varname>$HTTP_POST_VARS</varname>,
         <varname>$HTTP_COOKIE_VARS</varname>, 
         <varname>$HTTP_SERVER_VARS</varname> 
         배열을 통해 전역 영역(global scope)에서 접근가능하게 된다.
        </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.short-open-tag">
						<term>
							<parameter>short_open_tag</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
       PHP의 Open 태그로 short form (<userinput>&lt;? ?&gt;</userinput>)의 사용을 허가하거나 불허한다. 
     만약 여러분이 PHP와 XML을 함께 사용한다면 short form의 사용을 불가능하게 하여야 한다. 
     짧은 태그의 사용이 불가능하다면, PHP의 Open 태그로는 
     long form(<userinput>&lt;?php ?&gt;</userinput>)만을 사용하여야 한다. </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.sql.safe-mode">
						<term>
							<parameter>sql.safe_mode</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para/>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.track-errors">
						<term>
							<parameter>track_errors</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      이 지시자가 설정되어 있으면 <symbol>$php_errormsg</symbol>이라는 전역 변수에 
      마지막으로 발생한 에러의 메시지가 들어있게 된다. </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.track-vars">
						<term>
							<parameter>track_vars</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
       이 지시자가 설정되면, 
         <varname>$HTTP_ENV_VARS</varname>,
         <varname>$HTTP_GET_VARS</varname>,
         <varname>$HTTP_POST_VARS</varname>,
         <varname>$HTTP_COOKIE_VARS</varname>, 
         <varname>$HTTP_SERVER_VARS</varname> 의 전역 associative 배열에 
       모든 Environment, GET, POST, Cookie, Server 변수 들의 이름과 값을 저장한다.
        </para>
							<para>
         PHP 4.0.3에서는, <systemitem role="directive">track_vars</systemitem>는 항상 On으로 설정된다.
        </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.upload-tmp-dir">
						<term>
							<parameter>upload_tmp_dir</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
      파일 업로드시 파일을 저장할 임시 디렉토리를 지정한다. 
      PHP가 동작하게되는 User ID에 대해 쓰기 권한이 있어야 한다. 
      </para>
							<para>
      (역자주: . 이나 ./tmp 등도 가능하며, .의 경우 해당 스크립트가 존재하는 디렉토리를 의미한다.
                   safe mode에서 file upload를 위해서는 ./tmp등을 사용하여야 한다.)
       </para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.user-dir">
						<term>
							<parameter>user_dir</parameter>
							<type>string</type>
						</term>
						<listitem>
							<para>
        PHP 파일들이 위치한 홈 디렉토리의 base를 지정한다. (Ex. <literal>public_html</literal>).</para>
						</listitem>
					</varlistentry>
					<varlistentry id="ini.warn-plus-overloading">
						<term>
							<parameter>warn_plus_overloading</parameter>
							<type>boolean</type>
						</term>
						<listitem>
							<para>
      이것이 설정되면, 문자열에 더하기(<literal>+</literal>) 연산자가 사용될 때 
      PHP가 주의 메시지를 출력하게 만든다. 
      이 옵션은 스크립트의 더하기 연산자를 문자열 concatenator(<literal>.</literal>)로 다시 작성하는데 도움을 준다. </para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
		</sect2>
		<sect2 id="ini.sect.mail">
			<title>Mail Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.smtp">
					<term>
						<parameter>SMTP</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
       PHP가 사용할 SMTP 서버의 DNS 이름이나 IP 번호. 
     Windows환경에서 <function>mail</function> 함수로 편지를 보내려면 이 옵션을 반드시 설정해 주어야 한다</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sendmail-from">
					<term>
						<parameter>sendmail_from</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
       Windows환경에서 PHP가 편지를 보낼 때 "From:"에 사용될 메일 어드레스. </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sendmail-path">
					<term>
						<parameter>sendmail_path</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<command>sendmail</command>  프로그램을 찾을 Path. 
     보통은 <filename>/usr/sbin/sendmail</filename>이나 <filename>/usr/lib/sendmail</filename>에 있다. 
     <command>configure</command> 프로그램이 sendmail의 위치를 찾아 이것을 기본값으로 설정해 주지만, 
     그것이 잘되지 않았거나 오류가 있을 때, 여러분은 여기서 직접 지정해 줄 수 있다. </para>
						<para>
     sendmail을 사용하지 않는 시스템의 경우 현재 제공되고 있는 
     다른 메일 시스템의 sendmail 호환 명령(sendmail wrapper/replacement)으로 설정해 주어야 한다. 
     예를들어 <ulink url="&url.qmail;">Qmail</ulink> 사용자는 
     보통 <filename>/var/qmail/bin/sendmail</filename>로 설정해 주면 된다.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.safe-mode">
			<title>Safe Mode Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.safe-mode">
					<term>
						<parameter>safe_mode</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
      PHP를 안전 모드(safe mode)로 작동되도록 한다. 
    자세한 내용은 <link linkend="security">Security chapter</link>를 살펴보기 바란다.</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.safe-mode-exec-dir">
					<term>
						<parameter>safe_mode_exec_dir</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
      PHP가 안전 모드에서 작동할 때, <function>system</function> 이나 기타 다른 프로그램을 실행 시키는 함수들은 
    이 디렉토리에 있는 프로그램이 아니면 작업을 거부한다. </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.debugger">
			<title>Debugger Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.debugger.host">
					<term>
						<parameter>debugger.host</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	디버거가 사용할 host의 DNS name 이나 IP address </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.debugger.port">
					<term>
						<parameter>debugger.port</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	디버거가 사용할 Port 번호.</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.debugger.enabled">
					<term>
						<parameter>debugger.enabled</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	디버거를 작동시킨다. </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.extension">
			<title>Extension Loading Directives</title>
			<variablelist>
				<varlistentry id="ini.enable-dl">
					<term>
						<parameter>enable_dl</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
      이 지시자는 PHP를 아파치 모듈로 실행할 때만 효력을 가진다. 
      PHP에서  <function>dl</function>을 사용하여 extension을 dynamic loading하는 기능을 
      virtual server나 디렉토리 별로 가능하게 하거나 불가능하게 할 수 있다
	</para>
						<para>
       dynamic loading을 불가능하게 하는 첫번째 이유는 보안상의 이유이다. 
     dynamic loading에서는 모든 safe_mode 설정과 open_basedir 설정이 무시될 수 있기 때문이다.
	</para>
						<para>
      기본값은 모든 dynamic loading을 허용하는 것이다. 
      단, safe-mode를 사용하는 중에는 항상 <function>dl</function>의 사용이 불가능해 진다. 
	</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.extension-dir">
					<term>
						<parameter>extension_dir</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
     동적으로 적재 가능한(dynamically loadable) extension을 찾을 디렉토리를 설정한다</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.extension">
					<term>
						<parameter>extension</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	PHP가 시작될 때 로드할 dynamically loadable extension들을 설정한다. </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.mysql">
			<title>MySQL Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.mysql.allow-persistent">
					<term>
						<parameter>mysql.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) MySQL 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.mysql.default-host">
					<term>
						<parameter>mysql.default_host</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	데이터베이스 서버에 연결할 때 별도의 host 지정이 없을 경우 사용되는 기본 서버 호스트를 지정한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.mysql.default-user">
					<term>
						<parameter>mysql.default_user</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	데이터베이스 서버에 연결할 때 별도의 사용자 ID 지정이 없을 경우 사용되는 기본 사용자 ID를 지정한다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.mysql.default-password">
					<term>
						<parameter>mysql.default_password</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
       데이터베이스 서버에 연결할 때 별도의 암호 지정이 없을 경우 사용되는 기본 암호를 지정한다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.mysql.max-persistent">
					<term>
						<parameter>mysql.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) MySQL 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.mysql.max-links">
					<term>
						<parameter>mysql.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 MySQL 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.msql">
			<title>mSQL Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.msql.allow-persistent">
					<term>
						<parameter>msql.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) mSQL 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.msql.max-persistent">
					<term>
						<parameter>msql.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) mSQL 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.msql.max-links">
					<term>
						<parameter>msql.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 mSQL 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.pgsql">
			<title>Postgres Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.pgsql.allow-persistent">
					<term>
						<parameter>pgsql.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) Postgres 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.pgsql.max-persistent">
					<term>
						<parameter>pgsql.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) Postgres 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.pgsql.max-links">
					<term>
						<parameter>pgsql.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 Postgres 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.sesam">
			<title>SESAM Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.sesam-oml">
					<term>
						<parameter>sesam_oml</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
     SESAM 드라이버 모듈을 포함하고 있는 BS2000 PLAM 라이브러리의 이름
     SESAM 함수를 사용하려면 꼭 지정해 주어야 한다. 
     그리고, BS2000 PLAM 라이브러리는 아파치 서버의 사용자 ID로 읽을 수 있도록
     ACCESS=READ,SHARE=YES로 설정해야 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sesam-configfile">
					<term>
						<parameter>sesam_configfile</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
        SESAM 어플리케이션 설정 파일의 이름.
        SESAM 함수를 사용하려면 꼭 지정해 주어야 한다. 
        BS2000 파일은 아파치 서버의 사용자 ID로 읽을 수 있어야 한다.
       </para>
						<para>
        SESAM 어플리케이션 설정 파일은 보통 다음과 같은 내용으로 설정되어 있다.
        (SESAM reference manual을 살펴보라) :
        <informalexample>
								<programlisting role="bs2000">
CNF=B
NAM=K
NOTYPE</programlisting>
							</informalexample>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sesam-messagecatalog">
					<term>
						<parameter>sesam_messagecatalog</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
     SESAM message catalog 파일의 이름. 대부분의 경우 이 지시자는 필요 없다.
     단지 SESAM message 파일이 BS2000 message 파일 테이블에 설정되어 있지 않은 경우에
     이 지시자를 사용하여 설정한다.
       </para>
						<para>
     message catalog는 아파치 서버의 사용자 ID로 읽을 수 있도록
     ACCESS=READ,SHARE=YES로 설정해야 한다.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.sybase">
			<title>Sybase Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.sybase.allow-persistent">
					<term>
						<parameter>sybase.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) Sybase 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybase.max-persistent">
					<term>
						<parameter>sybase.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) Sybase 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybase.max-links">
					<term>
						<parameter>sybase.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 Sybase 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.sybct">
			<title>Sybase-CT Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.sybct.allow-persistent">
					<term>
						<parameter>sybct.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) Sybase-CT 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.max-persistent">
					<term>
						<parameter>sybct.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) Sybase-CT 접속의 최대 개수. 기본값은 -1로 제한없음을 의미한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.max-links">
					<term>
						<parameter>sybct.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 Sybase-CT 접속의 최대 개수. 기본값은 -1로 제한없음을 의미한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.min-server-severity">
					<term>
						<parameter>sybct.min_server_severity</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
	severity를 가지는 서버 메시지 개수가 sybct.min_server_severity에 설정한 값보다 크거나 같아지면 warning을 레포트한다. 
	이 값은 스크립트에서 <function>sybase_min_server_severity</function>함수를 통해 설정할 수도 있다. 기본 값은 10이다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.min-client-severity">
					<term>
						<parameter>sybct.min_client_severity</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
        severity를 가지는 클라이언트 라이브러리 메시지 개수가 sybct.min_server_severity에 설정한 값보다 
      크거나 같아지면 warning을 레포트한다. 
     이 값은 스크립트에서 <function>sybase_min_client_severity</function>함수를 통해 설정할 수도 있다. 기본 값은 10이다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.login-timeout">
					<term>
						<parameter>sybct.login_timeout</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
	서버에 연결을 시도하고 기다리는 최대 시간. 
	단위는 초이고 지정된 시간에 연결이 완료되지 못하면 연결 동작은 실패하는 것이다. 
	만약 연결시도 중 max_execution_time의 설정을 초과하게 되면 스크립트는 연결 실패를 알리기 전에 종료되어 버린다. 
	기본값은 1분이다
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.timeout">
					<term>
						<parameter>sybct.timeout</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
	select_db나 query등의 명령을 주고 응답을 기다리는 최대 시간. 
	단위는 초이고 지정된 시간안에 응답이 없으면 이 동작은 실패하는 것이다. 
	만약 연결시도 중 max_execution_time의 설정을 초과하게 되면 스크립트는 동작 실패를 알리기 전에 종료되어 버린다. 
	기본값은 없고, 무한정 기다리는 것이다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.sybct.hostname">
					<term>
						<parameter>sybct.hostname</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	sp_who에 의해 표시될 연결을 요청하는 host의 이름. 기본값은 없다. 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.informix">
			<title>Informix Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.ifx.allow-persistent">
					<term>
						<parameter>ifx.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) Informix 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.max-persistent">
					<term>
						<parameter>ifx.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) Informix 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.max-links">
					<term>
						<parameter>ifx.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 Informix 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.default-host">
					<term>
						<parameter>ifx.default_host</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>ifx_connect</function>나 <function>ifx_pconnect</function>
							함수에 호스트가 지정되지 않았을 경우 사용할 기본 호스트. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.default-user">
					<term>
						<parameter>ifx.default_user</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>ifx_connect</function>나 <function>ifx_pconnect</function> 
							함수에 user id가 지정되지 않았을 경우 사용할 기본 user id. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.default-password">
					<term>
						<parameter>ifx.default_password</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>ifx_connect</function>나 <function>ifx_pconnect</function> 
							함수에 password가 지정되지 않았을 경우 사용할 기본 password. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.blobinfile">
					<term>
						<parameter>ifx.blobinfile</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
        blob 칼럼을 파일에서 반환하려 한다면 true를,
        메모리에서 반환하려면 false를 설정한다.
        이 설정은 <function>ifx_blobinfile_mode</function> 함수를 사용하여 실행중에 변경할 수 있다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.textasvarchar">
					<term>
						<parameter>ifx.textasvarchar</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	select 문에서 TEXT 컬럼의 내용을 일반적인 문자열로 반환하고 싶다면 True, 
	blob id 파라메터를 사용하고 싶다면 False를 설정한다. 
	이 설정은 <function>ifx_textasvarchar</function>함수를 사용하여 실행 중 변경할 수 있다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.byteasvarchar">
					<term>
						<parameter>ifx.byteasvarchar</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	select 문에서 BYTE 컬럼의 내용을 일반적인 문자열로 반환하고 싶다면 True, 
	blob id 파라메터를 사용하고 싶다면 False를 설정한다. 
	이 설정은 <function>ifx_textasvarchar</function>함수를 사용하여 실행 중 변경할 수 있다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.charasvarchar">
					<term>
						<parameter>ifx.charasvarchar</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	데이터를 가져올 때 CHAR 컬럼의 뒤쪽 공백을 자동으로 잘라내려면 True를 설정한다
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.ifx.nullformat">
					<term>
						<parameter>ifx.nullformat</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	NULL 컬럼에 대하여 "NULL"이라는 문자열을 반환하려면 True, 
	공백 문자열("")을 반환하려면 False를 설정한다. 
	이 설정은 <function>ifx_nullformat</function>함수를 사용하여 실행 중 변경할 수 있다. 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.bcmath">
			<title>BC Math Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.bcmath.scale">
					<term>
						<parameter>bcmath.scale</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
	모든 bc 수학 함수들이 사용하는 십진 자리수. 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.browscap">
			<title>Browser Capability Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.browscap">
					<term>
						<parameter>browscap</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
	browser 기능(capabilities) 파일의 이름. See also
	<function>get_browser</function>.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="ini.sect.uodbc">
			<title>Unified ODBC Configuration Directives</title>
			<variablelist>
				<varlistentry id="ini.uodbc.default-db">
					<term>
						<parameter>uodbc.default_db</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>odbc_connect</function>나 <function>odbc_pconnect</function>에서 
     ODBC data source 가 지정되지 않았을 때 사용할 값를 지정한다
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.uodbc.default-user">
					<term>
						<parameter>uodbc.default_user</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>odbc_connect</function>나 <function>odbc_pconnect</function>에서 
     User name이 지정되지 않았을 때 사용할 값를 지정한다
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.uodbc.default-pw">
					<term>
						<parameter>uodbc.default_pw</parameter>
						<type>string</type>
					</term>
					<listitem>
						<para>
							<function>odbc_connect</function>나 <function>odbc_pconnect</function>에서 
     Password가 지정되지 않았을 때 사용할 값를 지정한다
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.uodbc.allow-persistent">
					<term>
						<parameter>uodbc.allow_persistent</parameter>
						<type>boolean</type>
					</term>
					<listitem>
						<para>
	영구적인(persistent) ODBC 접속을 허가한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.uodbc.max-persistent">
					<term>
						<parameter>uodbc.max_persistent</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     프로세스당 영구적인(persistent) ODBC 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="ini.uodbc.max-links">
					<term>
						<parameter>uodbc.max_links</parameter>
						<type>integer</type>
					</term>
					<listitem>
						<para>
     영구적인(persistent) 접속을 포함한 프로세스당 ODBC 접속의 최대 개수 
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
