<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.39 Maintainer: progcom Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>소개</title>

  <sect1 xml:id="intro-whatis">
   <title>PHP란?</title>
   <para>
    <acronym>PHP</acronym>(정식 명칭 "PHP: Hypertext
    Preprocessor")는 범용성을 지닌 널리 사용되는 오픈 소스
    스크립트 언어입니다. 특히, 웹 개발 및 HTML에 포함하기에 적합합니다.
   </para>
   <para>
    간단한 답이지만, 무엇을 의미할까요? 다음 예제를 봅시다:
   </para>
   <para>
    <example>
     <title>소개용 예제</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>예제</title>
    </head>
    <body>

        <?php 
        echo "안녕, 나는 PHP 스크립트야!"; 
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Perl이나 C와 같은 다른 언어로 쓰여진 스크립트와 다른점을 알아봅시다
    -- HTML을 출력하기 위해서 많은 프로그램 명령어를 쓰는 대신,
    무언가를 하기 위해 몇가지 추가 코드가 포함된 HTML 스크립트를 작성하면
    됩니다. (여기서는, 약간의 텍스트를 출력합니다) PHP코드는 "PHP 모드"로
    들어가고 나올 수 있는 특별한 <link
     linkend="language.basic-syntax.phpmode">시작과 끝 태그</link>에 포함되어
    있습니다.
   </para>

   <para>
    PHP가 클라이언트측 자바스크립트 등과 구별되는 점은 이 코드는 서버에서
    실행된다는 점입니다. 위와 같은 스크립트가 서버에서 실행되면, 클라이언트는
    스크립트의 결과만을 받을 뿐이며, 그 코드가 어떤 모습인지는 알 수가 없습니다.
    심지어 모든 HTML 파일을 PHP로 실행되도록 웹 서버를 설정할 수 있으며,
    그러면 유저들은 당신이 무슨 일을 하는지 전혀 알 수가 없습니다.
   </para>
   <para>
    PHP를 사용하는 가장 큰 이득은 초보에게는 매우 쉽고, 전문가에게는
    많은 고급 기능을 제공한다는 점입니다. PHP 기능의 긴 리스트를 읽는
    것을 두려워하지 마십시오. 그저 시작해 보면 짧은 시간 안에 간단한
    스크립트를 작성할 수 있을 것입니다.
   </para>
   <para>
    PHP의 개발은 서버측 스크립팅에 초점이 맞추어져 있지만, 그보다
    더 많은 것들을 할 수 있습니다. <link linkend="intro-whatcando">PHP로
    할 수 있는 것들</link> 섹션을 참고하거나, 웹 프로그래밍에만 관심이 있다면
   <link linkend="tutorial">간단한 튜토리얼</link>로 넘어가십시오.
   </para>
  </sect1>

  <sect1 xml:id="intro-whatcando">
   <title>PHP로 할 수 있는 것들</title>
   <para>
    PHP로 무엇이든지 할 수 있습니다. PHP는 서버측 스크립팅에 중점을
    두고 있어, 다른 종류의 CGI 프로그램이 하는 모든 것을 할 수 있습니다.
    예를 들면, 폼 데이터를 수집하거나, 동적인 페이지 콘텐츠를 만들거나
    쿠키를 보내고 받을 수 있습니다. 그리고 PHP는 더 많은 것들을 할 수 있습니다.
   </para>
   <para>
    PHP 스크립트가 사용되는 세가지 중점적인 영역이 있습니다.
    <itemizedlist>
     <listitem>
      <simpara>
       서버측 스크립팅. 이것은 PHP에서 가장 오래되고, 중점적인 영역입니다.
       이 일을 위해서는 세가지가 필요합니다. PHP 파서 (CGI나 서버 모듈),
       웹서버, 그리고 웹 브라우저. PHP가 설치된 웹서버를 실행시킬
       필요가 있습니다. 웹 브라우저로 서버에 있는 PHP 페이지를 보는 것으로
       PHP 프로그램 출력에 접근하게 됩니다. 단순히 PHP 프로그래밍을 경험해보고
       싶다면, 당신의 집에 있는 머신으로도 가능합니다. 더 많은 정보는 <link
        linkend="install">설치 안내</link> 섹션을 참고하십시오.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       커맨드 라인 스크립팅. 어떠한 서버나 브라우저 없이 PHP 스크립트를
       실행하게 할 수 있습니다. 이 때에는 PHP 파서만 있으면 됩니다.
       이런 사용법은 스크립트를 cron(*nix나 Linux에서)이나 작업
       관리자(Windows에서)를 사용해 실행하는 것과 동일합니다. 이런 스크립트들은
       간단한 텍스트 처리 작업에 사용될 수도 있습니다. 더 많은 정보를 위해서는
       <link linkend="features.commandline">PHP의 커맨드 라인 사용법</link>
       섹션을 참고하십시오.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       데스크톱 어플리케이션의 작성. PHP는 그래픽 유저 인터페이스를 가지는
       데스크탑 어플리케이션을 작성하기에 최적의 언어는 아니지만, PHP를 잘
       이해하고 있고, 고급의 PHP 기능을 클라이언트측 어플리케이션에 사용하고
       싶다면, 그러한 프로그램을 위해 PHP-GTK를 사용할 수 있습니다. 또한,
       이러한 방법으로 플래폼에 상관 없이 작동하는 어플리케이션을 작성할 수도
       있습니다. PHP-GTK는 PHP의 확장으로, 배포판에는 포함되어 있지 않습니다.
       PHP-GTK에 흥미가 있다면, <link xlink:href="&url.php.gtk;">PHP-GTK
        웹사이트</link>를 방문해 보십시오.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP는 리눅스, 많은 유닉스 계열 (HP-UX, Solaris와 OpenBSD를 포함),
    Microsoft Windows, 맥 OS X, RISC OS 등과 같은 모든 유명한 OS에서 사용할
    수 있습니다. 또한, PHP는 오늘날의 대부분의 웹 서버를 지원합니다.
    이것에는 아파치, Microsoft Internet Information Server, Personal Web Server,
    Netscape and iPlanet servers, Oreilly, Website Pro server, Caudium, Xitami,
    OmniHTTPd, 그 외의 많은 서버들을 포함합니다.
    유명한 서버에 대해서는 PHP 모듈이 있으며, 다른 것에 대해서는
    CGI 표준을 지원한다면, PHP는 CGI 프로세서로 동작할 수 있습니다.
   </para>
   <para>
    그러므로 PHP라면, OS와 웹서버를 선택하는 것에서 자유로워 질 수 있습니다.
    추가로, 함수 지향형이나 객체 지향형, 또는 그 둘을 섞은 형태로 프로그램을
    할 수 있습니다. 비록 PHP 4는 모든 표준 OOP 기능을 포함하고 있지 않지만,
    많은 코드 라이브러리와 커다란 애플리케이션들(PEAR 라이브러리를 포함하여)이
    OOP 코드만을 이용하여 작성되고 있습니다. PHP 5는 PHP 4에서의 객체 관련
    취약점을 보완하고, 완전한 객체 모델을 지원하고 있습니다.
   </para>
   <para>
    PHP는 HTML을 출력하는 것에만 제한되지 않습니다. PHP의 능력은
    이미지, PDF 파일, 심지어 플래쉬 무비(libswf와 Ming를 사용하여)까지
    만들어서 출력할 수 있습니다. 또한 XHTML이나 다른 종류의 XML 파일과 같은
    어떠한 텍스트 파일이라도 쉽게 출력할 수 있습니다. PHP로 출력을 하는 대신,
    자동적으로 만들어진 파일들을 파일 시스템에 저장하여 동적 컨텐츠에 대한
    서버측 캐쉬를 구현할 수도 있습니다.
   </para>
   <para>
    PHP의 가장 강력하고 인상적인 기능 중 하나는 넓은 범위의 데이터베이스에
    대한 지원입니다. 데이터베이스를 이용하는 웹 페이지를 작성하는것은 매우
    간단합니다. 현재 다음과 같은 데이터베이스를 지원하고 있습니다:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (read-only)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    또한 DBX database abstraction 확장은 이 확장이 지원하는 어떠한
    데이터베이스라도 명백히 사용할 수 있게 합니다.
    추가로 PHP는 ODBC(Open Database Connection 표준)를 지원하기 때문에,
    이 세계 표준을 지원하는 어떤 데이터베이스라도 연결할 수 있습니다.
   </para>
   <para>
    또한 PHP는 LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (Windows에서),
    그리고 셀 수 없는 여러가지 프로토콜들을 이용해서 다른 서비스와
    연계할 수 있도록 지원합니다. 또한 비어있는 네트워크 소켓을 열수도 있기에
    어떤 프로토콜과도 연계해서 실행할 수 있습니다. PHP는 WDDX complex data
    exchange between virtually all Web programming languages를 지원합니다.
    이를 통한 연계로, PHP는 자바 객체를 그대로 PHP 객체로 옮겨서 이용할
    수 있습니다. 또한 원거리 객체 접근을 위해 CORBA 익스텐션을 이용할 수도 있습니다.
   </para>
   <para>
    PHP는 극도로 유용한 텍스트 처리 기능을 가지고 있습니다. POSIX 확장
    정규표현식이나 펄 정규표현식을 가지고 있고, XML 문서 처리를 위하여 PHP
    4는 SAX와 DOM 표준을 지원하고, XML 문서를 변형하기 위해 XSLT 확장을 사용할
    수 있습니다. PHP 5는 모든 XML 확장을 libxml2의 튼튼한 기반 위에
    표준화하고, SimpleXML과 XMLReader 지원을 추가하여 기능을 확장하였습니다.
   </para>
   <para>
    PHP를 전자 상거래 부분에 사용한다면, Cybercash payment,
    CyberMUT, VeriSign Payflow Pro와 MCVE 함수가 온라인 지불
    프로그램에 매우 유용할 것입니다.
   </para>
   <para>
    마지막으로, 하지만 적지 않게 (At last but not least),
    많은 또다른 재미있는 확장들이 있습니다. mnoGoSearch 검색 엔진 함수,
    IRC 게이트웨이 함수, 많은 압축 유틸리티 (gzip, bz2),
    달력 변환, 번역...
   </para>
   <para>
    이 페이지만을 보는 것으로는 PHP가 제공할 수 있는 모든
    기능과 이득을 알기에는 충분하지 않습니다. <link linkend="install">PHP
    설치하기</link> 섹션을 읽어보고, 이곳에 언급된 확장들에 대한
    <link linkend="funcref">함수 레퍼런스</link>를 참고하십시오.
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
