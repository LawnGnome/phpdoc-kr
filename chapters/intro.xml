 <chapter id="introduction">
  <title>소개 (Introduction)</title>

  <sect1 id="intro-whatis">
   <title>PHP란 무엇인가?</title>
   <simpara>
    PHP(공식적으로 "PHP: Hypertext Preprocessor ")는 server-side
    HTML-embedded scripting language입니다.
   </simpara>
   <para>
    간단한 답이지만, 무엇을 의미할까? 다음 예를 보자:
   </para>
   <para>
    <example>
     <title>소개용 예문</title>
     <programlisting role="php">
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
    
        &lt;?php 
        echo "Hi, I'm a PHP script!"; 
        ?&gt;
        
    &lt;/body&gt;
&lt;/html&gt;
     </programlisting>
    </example>
   </para>
   <para>
   Perl이나 C와 같은 다른 CGI 스크립트와 달리 HTML을 출력하는데 많은 명령어가 필요없다. 
   당신은 HTML내에 당신이 하고자 하는 일(위의 영우 한줄의 문자열 출력)에 대한 스크립트를 적어주면 된다.
   PHP코드는 특정한 <link linkend="language.basic-syntax.phpmode">시작과 끝 태그</link>
   사이에 들어가게 되는데, 이 태크는 PHP모드로 들어가거나 나오는 것이다.
   </para>
   <para>
   PHP가 다른 Clien-side Javascrip와 구별되는 것은 이 코드가 서버에서 실행된다는 것이다.
    If you were to have a
    script similar to the above on your server, the client would receive
    the results of running that script, with no way of determining what
    the underlying code may be. You can even configure your web server
    to process all your HTML files with PHP, and then there's really no
    way that users can tell what you have up your sleeve.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>PHP로 무엇을 할 수 있는가?</title>
   <para>
    가장 기본적인 레벨에서, PHP는 다른 CGI프로그램이 할 수 있는 모든 것을 할수 있다.
    from data를 가져오고,  동적인 웹페이지를 만들거나, Cookie를 보내고 받을 수도 있다.
   </para>
   <para>
    아마 PHP의 가장 강력하고 관심이 가는 부분은 데이타베이스들의 폭넓은 지원이다.
    PHP를 사용하면 당신은 Database를 사용한 웹페이지를 놀랍도록 간단히 만들 수 있다.
    다음의 일반적인 Database들을 지원한다:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (read-only)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
   </para>
   <para>
    PHP는 IMAP, SNMP, NNTP, POP3, HTTP등의 프로코톨과 또 다른 것들을 사용하는
    다른 서비스들에 대해서도 이미 지원하고 있다. 심어지는 raw network 소켓을 사용하면,
    그외의 다른 프로토콜들을 사용할 수도 있다.
   </para>
<!--
   <figure>
    <title>Internal Structure</title>
    <graphic fileref="../images/php3_internal_structure.gif"/>
   </figure>
   <figure>
    <title>Request Scheme</title>
    <graphic fileref="../images/php3_request_scheme.gif"/>
   </figure>
-->
  </sect1>

  <sect1 id="intro-history">
   <title>PHP의 역사</title>
   <simpara>
    PHP는 1994년 가을 &link.rasmus;가 처음 고안하였다.
    초기 비공개버전은 그의 홈페이지에 사누가 누가 그의 온라인 이력서를 봤는지 보관하는데 사용되었다.
    The first version
    used by others was available sometime in early 1995 and was known
    as the Personal Home Page Tools.  It consisted of a very
    simplistic parser engine that only understood a few special macros
    and a number of utilities that were in common use on home pages
    back then.  A guestbook, a counter and some other stuff.  The
    parser was rewritten in mid-1995 and named PHP/FI Version 2.  The
    FI came from another package Rasmus had written which interpreted
    html form data.  He combined the Personal Home Page tools scripts
    with the Form Interpreter and added mSQL support and PHP/FI was
    born.  PHP/FI grew at an amazing pace and people started
    contributing code to it.
   </simpara>
   <simpara>
    It is difficult to give any hard statistics, but it is estimated
    that by late 1996 PHP/FI was in use on at least 15,000 web sites
    around the world.  By mid-1997 this number had grown to over
    50,000.  Mid-1997 also saw a change in the development of PHP.  It
    changed from being Rasmus' own pet project that a handful of
    people had contributed to, to being a much more organized team
    effort. The parser was rewritten from scratch by Zeev Suraski and
    Andi Gutmans and this new parser formed the basis for PHP Version
    3.  A lot of the utility code from PHP/FI was ported over to PHP 3
    and a lot of it was completely rewritten.
   </simpara>
   <simpara>
    Today (10/2000) PHP 3 or PHP 4 now ships with a number of
    commercial products such as C2's StrongHold web server and RedHat
    Linux. A conservative estimate based on an extrapolation from
    numbers provided by <ulink url="&url.netcraft;">NetCraft</ulink>
    (see also <ulink url="&url.netcraft-survey;">Netcraft Web Server
    Survey</ulink>) would be that PHP is in use on over 3,300,000
    sites around the world.  To put that in perspective, that is more
    sites than run Netscape's flagship Enterprise server on the
    Internet, and close to the total number of IIS servers on the
    Internet (3.8 million).
   </simpara>
<!--
   <figure>
    <title>NetCraft Webserver Survey</title>
    <graphic fileref="&url.php.stats;"/>
   </figure>
-->
   <simpara>
	The latest version (PHP 4) uses the powerful <ulink 
	url="&url.zend;">Zend</ulink> scripting engine to deliver higher
    performance, and also supports running under webservers other
    than Apache as a native server module.
   </simpara>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
