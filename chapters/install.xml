<chapter id="installation">
	<title>설치(Installation)</title>
	<sect1 id="install.downloading">
		<title>최신 버전 내려받기</title>
		<simpara>최신버전의 소스와 (윈도우즈를 포함한)여러 플랫폼의 배포판은 
             <literal>
				<ulink url="&url.php;">&url.php;</ulink>
			</literal>에서 내려 받을 수 있다.
             </simpara>
	</sect1>
	<sect1 id="install.unix">
		<title>Unix에 설치</title>
		<para>
  이 장은 PHP를 설치하고 설정하는 방법에 대해 설명하고 있다. 
   </para>
		<para>
  필요한 지식과 소프트웨어: 
    
    <itemizedlist>
				<listitem>
					<simpara>
      기본적인 UNIX 사용법 ("make"와 C 컴파일러를 사용할 수 있어야 한다.)
      </simpara>
				</listitem>
				<listitem>
					<simpara>
       ANSI C 컴파일러
      </simpara>
				</listitem>
				<listitem>
					<simpara>
       web 서버
      </simpara>
				</listitem>
			</itemizedlist>
		</para>
		<para>
   Unix 환경에서 PHP를 컴파일하고 설정하는 데는 여러가지 방법이 있다. 
  모든 설정은 <filename>configure</filename> 스크립트의 commandline 옵션을 사용하여 설정한다.
   이 글에서는 몇몇 핵심적인 옵션에 대해서만 대강 설명하지만, 실제로 다른 많은 옵션이 있다.
  PHP를 보다 안정적이고 효율적으로 동작를 시키려면 <link linkend="install.configure">전체 설정 옵션</link>을 살펴 보는 것이 좋다.
    <itemizedlist>
				<listitem>
					<simpara>
       As an <link linkend="install.unix.apache-module">Apache module</link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
       As an <link linkend="install.unix.fhttpd">fhttpd module</link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
       For use with <link linkend="install.unix.otherhttpd">AOLServer, NSAPI,
       phttpd, Pi3Web, Roxen, thttpd, or Zeus.</link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
       As a <link linkend="install.unix.commandline">CGI executable</link>
					</simpara>
				</listitem>
			</itemizedlist>
		</para>
		<sect2 id="install.unix.apache-module">
			<title>Apache Module</title>
			<para>
    PHP는 여러 다른 방법을 사용하여 Apache 모듈로 컴파일 될 수 있다. 우선 간단한 방법을 선보인다. 
    Following this is a list of various examples with explanations, to provide an
     overview of how to accomplish certain things.
    </para>
			<para>
     You can select arguments to add to the
     <command>configure</command> on line 8 below from the <link linkend="install.configure">Complete list of configure
     options</link>.
    </para>
			<example id="install.unix.apache-module.quick">
				<title>
      Quick Installation Instructions (Apache Module Version)
     </title>
				<programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. for PHP 3: ./configure --activate-module=src/modules/php3/libphp3.a
    for PHP 4: ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install

  이 단계 대신 httpd 이진 파일을 기존의 파일에 덮어 쓸 수도 있다.
  이 작업을 하려면 우선 httpd 서버를 끄는 것을 잊지 말도록 하자.
 
15. cd ../php-x.x.x
16. for PHP 3: cp php3.ini-dist /usr/local/lib/php3.ini
    for PHP 4: cp php.ini-dist /usr/local/lib/php.ini

  이제 PHP의 설정을 고치기 위해 .ini 파일을 수정하면 된다.
 만약 이 파일의 위치를 옮기고 싶다면 위의 8단계에서 --with-config-file=/path 옵션을 준다.

17. Edit your httpd.conf or srm.conf file and add: 
      
     PHP 3의 경우:   AddType application/x-httpd-php3 .php3
     PHP 4의 경우:   AddType application/x-httpd-php .php
 
 여기서 .php외에 다른 확장자를 사용할 수 있으나, 그냥 .php를 사용할 것을 권한다.
 .html도 설정할 수 있다.

18. 일반적인 방식대로 Apache 서버를 시작한다. 
     (반드시 stop과 start하여 재시동하여야한다. HUP이나 USR1같은 signal을 주는 등의 reload만 해서는 소용이 없다.)
      </programlisting>
			</example>
			<para>
				<informalexample>
					<programlisting>
./configure --with-apxs --with-pgsql
       </programlisting>
				</informalexample>
			</para>
			<para>
      This will create a <filename>libphp4.so</filename> shared
      library that is loaded into Apache using a LoadModule line in
      Apache's <filename>httpd.conf</filename> file. The PostgreSQL
      support is embedded into this <filename>libphp4.so</filename>
      library.
     </para>
			<para>
				<informalexample>
					<programlisting>
./configure --with-apxs --with-pgsql=shared
       </programlisting>
				</informalexample>
			</para>
			<para>
      This will again create a <filename>libphp4.so</filename> shared
      library for Apache, but it will also create a
      <filename>pgsql.so</filename> shared library that is loaded into
      PHP either by using the extension directive in
      <filename>php.ini</filename> file or by loading it explicitly in
      a script using the <function>dl</function> function.
     </para>
			<para>
				<informalexample>
					<programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql
       </programlisting>
				</informalexample>
			</para>
			<para>
      This will create a <filename>libmodphp4.a</filename> library, a
      <filename>mod_php4.c</filename> and some accompanying files and
      copy this into the <literal>src/modules/php4</literal> directory
      in the Apache source tree. Then you compile Apache using
      <literal>--activate-module=src/modules/php4/libphp4.a</literal>
      and the Apache build system will create
      <filename>libphp4.a</filename> and link it statically into the
      <filename>httpd</filename> binary. The PostgreSQL support is
      included directly into this <filename>httpd</filename> binary,
      so the final result here is a single <filename>httpd</filename>
      binary that includes all of Apache and all of PHP.
     </para>
			<para>
				<informalexample>
					<programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
       </programlisting>
				</informalexample>
			</para>
			<para>
      Same as before, except instead of including PostgreSQL support
      directly into the final <filename>httpd</filename> you will get
      a <filename>pgsql.so</filename> shared library that you can load
      into PHP from either the <filename>php.ini</filename> file or
      directly using <function>dl</function>.
     </para>
			<para>
      When choosing to build PHP in different ways, you should consider
      the advantages and drawbacks of each method. Building as a shared
      object will mean that you can compile apache separately, and don't
      have to recompile everything as you add to, or change, PHP.
      Building PHP into apache (static method) means that PHP will
      load and run faster. For more information, see the Apache
      <ulink url="&url.apachedso;">webpage on DSO support</ulink>.
     </para>
		</sect2>
		<sect2 id="install.unix.fhttpd">
			<title>fhttpd Module</title>
			<para>
PHP를 fhttpd 모듈로 만들려면, "Build as an fhttpd module?"의 질문에 "yes"로 답하고, fhttpd 소스의 base 디렉토리를 명시해 주면 된다.
(configure에서는 <option>
					<link linkend="install.configure.with-fhttpd">--with-fhttpd</link>=<replaceable>DIR</replaceable>
				</option> 옵션을 주면 된다.) 
기본 디렉토리는<filename class="directory">/usr/local/src/fhttpd</filename>이다. 
여러분이 fhttpd를 운영중에 있다면, 모듈 형태로 만들어 실행하는 것이 더 좋은 성능을 제공하며, 또한 제어와 원격 실행 능력도 향상된다
    </para>
		</sect2>
		<sect2 id="install.unix.otherhttpd">
			<title>여타의 다른 웹서버</title>
			<para>
    PHP는 다양한 웹 서버들에서 사용될 수 있다. 
   웹서버와 관련된 자세한 설정 내용은 <link linkend="install.configure.servers">Server-related options</link>을 보도록 하자.
    </para>
		</sect2>
		<sect2 id="install.unix.commandline">
			<title>CGI/Commandline 버전</title>
			<para>
PHP는 디폴트로 CGI 프로그램으로 만들어 진다. 
이것은 CGI 형태로 사용하거나, 웹과 관련이 없는 PHP 스크립팅에 사용할 수 있는 commandline 인터프리터가 된다.
만약 PHP가 모듈로 탑재될 수 있는 웹 서버를 운영중이라면, 일반적으로 모듈이 더 좋은 성능을 낸다.. 하지만, CGI 버전은 아파치 사용자들에게 다른 user-id를 사용하여 별도의 PHP-enabled 페이지를 실행할 수 있도록 해 준다. 
만약 PHP를 CGI로 실행하고 싶다면 <link linkend="security">Security chapter</link>를 반드시 읽어보기 바란다.
    </para>
		</sect2>
		<sect2 id="database-support-options">
			<title>Database 지원 옵션</title>
			<para>
PHP는 다양한 database들에 대한 직접적인 접근 방법을 지원한다. (ODBC도 제공한다.)
이 다양한 database들을 지원하기 위해서는 컴파일시 <filename>configure</filename> 스크립트를 사용하여 옵션을 주어야 한다.
자세한 내용은 <link linkend="install.configure.databases">전체 database 관련 옵션 목록</link>을 살펴보자.
    </para>
			<para>
				<filename>configure</filename>에서 사용하는 모든 옵션 목록을 보려면 
<link linkend="install.configure">전체 설정 옵션 목록(Complete list of configure options)</link>을 살펴보자.
    </para>
		</sect2>
		<sect2 id="install.building">
			<title>Building</title>
			<simpara>
PHP의 설정이 완료되면 PHP 라이브러리나 CGI 실행 파일을 생성할 준비가 끝난 것이다. <command>make</command> 명령으로 결과물을 만들 수 있다. 만약 실패하였는데, 그 이유를 모를 경우에는 <link linkend="install-problems">Problems section</link>을 살펴보기 바란다.
    </simpara>
		</sect2>
		<sect2 id="install.testing">
			<title>Testing</title>
			<simpara>
PHP를 CGI 프로그램 형태로 만들었다면, <command>make test</command>라고 입력하여 테스트해 볼 수 있다.
이 방법은 결과물을 테스트하는 좋은 방법이다. 
또한 이 방법은 여러분의 시스템 환경에서 미리 PHP의 문제를 발견할 수 있게 해 준다. 
    </simpara>
		</sect2>
		<sect2 id="install.benchmarking">
			<title>Benchmarking</title>
			<simpara>
PHP3를 CGI 프로그램 형태로 만들었다면, <command>make bench</command>라고 입력하여 벤치마크 테스트를 할 수 있다. 
안전 모드(safe mode)의 기본값이 on 되어 있을 때는, 작업이 허용된 30초 보다 많이 걸리게 되면 벤치마크를 끝낼 수 없다. 
이것은 안전 모드에서는 <function>set_time_limit</function> 함수를 사용할 수 없기 때문이다. 
컴파일시의 설정 옵션인 <link linkend="ini.max-execution-time">max_execution_time</link>을 사용하여 시간 간격을 조절할 수는 있다.
<command>make bench</command> 명령은 <link linkend="configuration.file">configuration file</link>을 무시한다.
    </simpara>
			<note>
				<simpara>
					<command>make bench</command>는 PHP 3에서만 유효하다.
		 </simpara>
			</note>
		</sect2>
	</sect1>
	<sect1 id="install.configure">
		<title>전체 설정 옵션 목록(Complete list of configure options)</title>
		<note>
			<para>
     이것들은 컴파일 시에만 유효한 옵션이다. 
    PHP가 실행시에 설정하는 옵션들에 대해서는 <link linkend="configuration">설정(Configuration)</link> 부분을 살벼보자.
    </para>
		</note>
		<para>
아래 목록은 PHP3와 PHP4가 Unix 환경에서 컴파일될 때 <filename>configure</filename> 스크립트가 지원하는 옵션의 전체 목록이다. 
일부는 PHP3에서만, 일부는 PHP4에서만, 나머지는 두군데 모두에서 사용가능하다. PHP4로 옮겨가면서 많은 옵션의 이름이 바뀌었다.
이 이름이 바뀐 옵션들은 상호간의 내용을 표시해 놓았으므로, PHP3에서 사용하던 옵션이 PHP4에서 문제가 있는 경우 이 이름의 변화를 잘 살펴보기 바란다.
   </para>
		<itemizedlist>
			<listitem>
				<para>
					<link linkend="install.configure.databases">Database</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.ecommerce">Ecommerce</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.graphics">Graphics</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.misc">Miscellaneous</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.networking">Networking</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.php">PHP Behaviour</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.servers">Server</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.text">Text and language</link>
				</para>
			</listitem>
			<listitem>
				<para>
					<link linkend="install.configure.xml">XML</link>
				</para>
			</listitem>
		</itemizedlist>
		<sect2 id="install.configure.databases">
			<title>Database</title>
			<variablelist>
				<varlistentry id="install.configure.with-adabas">
					<term>
						<parameter>--with-adabas[=DIR]</parameter>
					</term>
					<listitem>
						<para>

        PHP 3, PHP 4: Adabas D 지원을 포함한다. DIR은 Adabas D가 설치된 Directory이고, 기본값은 /usr/local이다. 
       </para>
						<para>
							<ulink url="&url.adabas;">Adabas home page</ulink>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-dba">
					<term>
						<parameter>--enable-dba=shared</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: DBA를 shared module 형태로 만든다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-dbase">
					<term>
						<parameter>--enable-dbase</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; use <link linkend="install.configure.with-dbase">--with-dbase</link>옵션을 대신 사용
       </para>
						<para>
        PHP 4: 내장된 DBase 라이브러리를 사용가능하게 한다. 별도의 외부 라이브러리는 필요 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-dbase">
					<term>
						<parameter>--with-dbase</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 내장된 DBase 라이브러리를 사용가능하게 한다. 별도의 외부 라이브러리는 필요 없다.
       </para>
						<para>
        PHP 4: 사용 불가; <link linkend="install.configure.enable-dbase">--enable-dbase</link>옵션을 대신 사용
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-db2">
					<term>
						<parameter>--with-db2[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Berkeley DB2 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-db3">
					<term>
						<parameter>--with-db3[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Berkeley DB3 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-dbm">
					<term>
						<parameter>--with-dbm[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: DBM 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-dbmaker">
					<term>
						<parameter>--with-dbmaker[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: DBMaker 지원을 포함한다. 
        DIR은 DBMaker의 Base Directory이고, 기본값은 최근 버젼의 DBMaker가 설치된 디렉토리이다. (such as /home/dbmaker/3.6)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-empress">
					<term>
						<parameter>--with-empress[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Empress 지원을 포함한다. DIR은 Empress의 base install directory이고, 기본값은 $EMPRESSPATH 이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-filepro">
					<term>
						<parameter>--enable-filepro</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; <link linkend="install.configure.with-filepro">--with-filepro</link>를 대신 사용한다.
       </para>
						<para>
        PHP 4: 내장된 읽기 전용 filePro 지원 모듈을 포함한다. 별도의 외부 라이브러리는 필요 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-filepro">
					<term>
						<parameter>--with-filepro</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 내장된 읽기 전용 filePro 지원 모듈을 포함한다. 별도의 외부 라이브러리는 필요 없다.
       </para>
						<para>
        PHP 4: 사용 불가; <link linkend="install.configure.enable-filepro">--enable-filepro</link>를 대신 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-gdbm">
					<term>
						<parameter>--with-gdbm[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: GDBM 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-hyperwave">
					<term>
						<parameter>--with-hyperwave</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Hyperwave  지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ibm-db2">
					<term>
						<parameter>--with-ibm-db2[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: IBM DB2  지원을 포함한다. DIR은 DB2의 base install directory로, 기본값은 <filename>/home/db2inst1/sqllib</filename>이다.
       </para>
						<para>
							<ulink url="&url.ibmdb2;">IBM DB2 home page</ulink>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-informix">
					<term>
						<parameter>--with-informix[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Informix  지원을 포함한다. DIR은 Informix base install directory로, 기본값은 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ingres">
					<term>
						<parameter>--with-ingres[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Ingres II  지원을 포함한다. DIR은 Ingres base directory이다. (default /II/ingres) 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-interbase">
					<term>
						<parameter>--with-interbase[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: InterBase 지원을 포함한다. DIR은 InterBase base install directory이고, 기본값은<filename>/usr/interbase</filename>이다.
       </para>
						<simpara>
							<link linkend="ref.ibase">Interbase functions</link>
						</simpara>
						<simpara>
							<ulink url="&url.ibase;">Interbase home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ldap">
					<term>
						<parameter>--with-ldap[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: LDAP 지원을 포함한다. DIR은 LDAP base install directory이고, 기본값은<filename>/usr</filename>와 <filename>/usr/local</filename>이다.
						</para>
						<para>
        PHP 4: LDAP 지원을 포함한다. DIR은 LDAP base install directory이다.
       </para>
						<simpara>
        이 옵션은 LDAP (Lightweight Directory Access Protocol) 지원을 포함시킨다. 
      DIR은 LDAP가 설치된 base 디렉토리이고, 기본값은 <filename class="directory">/usr/local/ldap</filename>이다.
       </simpara>
						<simpara>
        LDAP에 대한 자세한 설명은 <ulink url="&url.rfc;rfc1777.html">RFC1777</ulink>과
        <ulink url="&url.rfc;rfc1778.html">RFC1778</ulink>에서 찾을 수 있다.
       </simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-msql">
					<term>
						<parameter>--with-msql[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: mSQL 지원을 포함한다. DIR은 mSQL이 설치된 디렉토리이고 기본값은 <filename class="directory">/usr/local/Hughes</filename>이다. 이 디렉토리는 mSQL 2.0 배포본의 기본 디렉토리이다. 
<command>configure</command>는 현재 작동중인 mSQL의 버전을 자동으로 탐지하여 1.0과 2.0중 하나를 지원하도록 한다. 만약 PHP가 mSQL 1.0지원으로 컴파일되었다면, 여러분은 mSQL 2.0 database는 사용하지 못한다. 마찬가지로 2.0으로 컴파일 되었다면 1.0 database는 사용할 수 없다.
       </para>
						<simpara>
        See also <link linkend="ini.sect.msql">mSQL
        Configuration</link> Directives in the <link linkend="configuration.file">configuration file</link>.
       </simpara>
						<simpara>
							<ulink url="&url.msql;">mSQL home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mysql">
					<term>
						<parameter>--with-mysql[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: MySQL 지원을 포함한다. DIR은 MySQL의 base install directory이고, 기본값은 MySQL이 설치된 장소를 자동으로 찾는 것이다.
       </para>
						<para>
        PHP 4: MySQL 지원을 포함한다. DIR은 MySQL의 base install directory이고, 기본값은 MySQL이 설치된 장소를 자동으로 찾는 것이다. 
      이 옵션은 자동으로 on으로 설정된다.
       </para>
						<para>
        See also <link linkend="ini.sect.mysql">MySQL
        Configuration</link> Directives in the <link linkend="configuration.file">configuration file</link>.
       </para>
						<para>
							<ulink url="&url.mysql;">MySQL home page</ulink>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ndbm">
					<term>
						<parameter>--with-ndbm[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: NDBM 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-oci8">
					<term>
						<parameter>--with-oci8[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다. 
       </para>
						<para>
        PHP 4: Oracle-oci8 지원을 포함한다. 기본 DIR 은 ORACLE_HOME 이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-oracle">
					<term>
						<parameter>--with-oracle[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: Oracle database 지원을 포함한다. DIR 은 Oracle의 홈디렉토리이고, 기본값은 $ORACLE_HOME이다.
       </para>
						<para>
        PHP 4: Oracle-oci7  지원을 포함한다. 기본 DIR 은 ORACLE_HOME 이다.
       </para>
						<simpara>
      오라클 지원을 포함하도록 한다. 오라클 버전 7.0에서 7.3까지는 동작을 테스트하여 문제가 없었다. 
      DIR은 <envar>ORACLE_HOME</envar>디렉토리이다. 오라클 환경이 이미 설정되어 있다면, DIR을 반드시 정해줄 필요는 없다.
       </simpara>
						<simpara>
							<ulink url="&url.oracle;">Oracle home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-pgsql">
					<term>
						<parameter>--with-pgsql[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PostgresSQL 지원을 포함한다.  DIR은 PostgresSQL의 base install directory이고, 기본값은 <filename>/usr/local/pgsql</filename>이다.
       </para>
						<para>
        PHP 4: PostgresSQL 지원을 포함한다.  DIR은 PostgresSQL의 base install directory이고, 기본값은 <filename>/usr/local/pgsql</filename>이다.
      Set DIR to shared to build as a dl, or shared,DIR to build as a dl and still specify DIR.
       </para>
						<simpara>
        See also <link linkend="ini.sect.pgsql">Postgres
        Configuration</link> Directives in the <link linkend="configuration.file">configuration file</link>.
       </simpara>
						<simpara>
							<ulink url="&url.pgsql;">PostgreSQL home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-solid">
					<term>
						<parameter>--with-solid[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Solid 지원을 포함한다. DIR은 Solid의 base install directory이고, 기본값은 /usr/local/solid이다.
       </para>
						<simpara>
							<ulink url="&url.solid;">Solid home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-sybase-ct">
					<term>
						<parameter>--with-sybase-ct[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Sybase-CT 지원을 포함한다. DIR은 Sybase의 home directory이고, 기본값은 /home/sybase이다.
       </para>
						<simpara>
        See also <link linkend="ini.sect.sybct">Sybase-CT
         Configuration</link> Directives in the <link linkend="configuration.file">configuration
         file</link>.
       </simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-sybase">
					<term>
						<parameter>--with-sybase[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Sybase-DB 지원을 포함한다. DIR은 Sybase의 home directory이고, 기본값은 <filename>/home/sybase</filename>이다.
       </para>
						<simpara>
        See also <link linkend="ini.sect.sybase">Sybase
         Configuration</link> Directives in the <link linkend="configuration.file">configuration file</link>.
       </simpara>
						<simpara>
							<ulink url="&url.sybase;">Sybase home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-openlink">
					<term>
						<parameter>--with-openlink[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: OpenLink ODBC 지원을 포함한다. DIR은 OpenLink의 base install directory이고, 기본값은/usr/local/openlink이다.
       </para>
						<simpara>
							<ulink url="&url.openlink;">OpenLink Software's home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-iodbc">
					<term>
						<parameter>--with-iodbc[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: iODBC 지원을 포함한다. DIR은 iODBC의 base install directory이고, 기본값은 <filename>/usr/local</filename>이다.
       </para>
						<para>
       이 기능은 iODBC 드라이버 관리자를 위해 처음 개발되었는데, 
     이 iODBC 드라이버 관리자는 여러 UNIX에서 돌아가는 무료 배포가 가능한 ODBC 드라이버 관리자이다. 
       </para>
						<simpara>
							<ulink url="&url.freeodbc;">FreeODBC home page</ulink> 
        or <ulink url="&url.iodbc;">iODBC home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-custom-odbc">
					<term>
						<parameter>--with-custom-odbc[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 사용자 지정의 ODBC 라이브러리 지원을 포함하도록 한다. 
      DIR은 base 디렉토리이고, 기본값은 <filename class="directory">/usr/local</filename>이다.
       </para>
						<simpara>
이 옵션을 사용하려면 configure 스크립트를 실행할 때 CUSTOM_ODBC_LIBS를 이미 정의해 주었어야 한다. 
또한, include path에는 적합한 odbc.h라는 헤더 파일이 반드시 있어야 한다. 만약 없다면, 만들어서 포함시켜야 한다. 
헤더에는 좀 특별한 정의들이 필요하게 되는데, 특히 그것이 multiplatform일 경우는 상세히 적어주어야 한다. 
그 정의는 CFLAGS 옵션에 적어준다.
       </simpara>
						<simpara>
예를들어 다음과 같은 옵션으로 QNX 하에서 Sybase SQL Anywhere를 사용할수 있다.: 
        <literal>
         CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
         -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
        </literal>
						</simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-unified-odbc">
					<term>
						<parameter>--disable-unified-odbc</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: Unified ODBC 모듈을 사용하지 않도록한다. 
        이 Unified ODBC 모듈은 iODBC나 Adabas, Solid, Velocis or a custom ODBC interface 가 사용될 때만 포함하면 된다.
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
						<simpara>
     이 Unified ODBC 모듈은 Solid나 Adabas D같은 ODBC기 반의 인터페이스(ODBC-based interface)를 가지고 있는 모든 database의 공통의 interface이다. 또한 이 모듈은 일반 ODBC 라이브러리를 위해 동작한다. 이 옵션은 iODBC와 Solid, Adabas D, IBM DB2, Sybase SQL Anywhere에서 시험을 거쳤다. 이 옵션을 사용하려 면 위의 모듈들 중 하나(반드시 하나만) 혹은, Velocis  모듈이 enabled되어 있거나 custom ODBC library가 설정되어 있어야 한다. 즉, 이 옵션은 다음과 같은 옵션중 하나가 사용되었을 경우만 사용이 가능하다. : 
      <link linkend="install.configure.with-iodbc">--with-iodbc</link>,
        <link linkend="install.configure.with-solid">--with-solid</link>,
        <link linkend="install.configure.with-ibm-db2">--with-ibm-db2</link>,
        <link linkend="install.configure.with-adabas">--with-adabas</link>,
        <link linkend="install.configure.with-velocis">--with-velocis</link>,
        or <link linkend="install.configure.with-custom-odbc">--with-custom-odbc</link>.
       </simpara>
						<simpara>
        See also <link linkend="ini.sect.uodbc">Unified ODBC
         Configuration</link> Directives in the <link linkend="configuration.file">configuration
         file</link>.
       </simpara>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-unixODBC">
					<term>
						<parameter>--with-unixODBC[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: unixODBC 지원을 포함한다. DIR은 unixODBC의 base install directory이고, 기본값은 /usr/local이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-velocis">
					<term>
						<parameter>--with-velocis[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Velocis 지원을 포함한다. DIR은 Velocis의 base install directory이고, 기본값은 /usr/local/velocis이다.
       </para>
						<simpara>
							<ulink url="&url.velocis;">Velocis home page</ulink>
						</simpara>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.ecommerce">
			<title>Ecommerce</title>
			<variablelist>
				<varlistentry id="install.configure.with-ccvs">
					<term>
						<parameter>--with-ccvs[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: CCVS를 지원하도록 컴파일한다. DIR은 CCVS의 base install directory이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mck">
					<term>
						<parameter>--with-mck[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: Cybercash MCK 지원을 포함한다. DIR은 cybercash mck의 build directory이고, 기본값은 <filename>/usr/src/mck-3.2.0.3-linux</filename>이다. 자세한 도움말은 <filename>extra/cyberlib</filename>에 있는 문서를 참조하자.
       </para>
						<para>
        PHP 4: 사용 불가; <link linkend="install.configure.with-cybercash">--with-cybercash</link>를 대신 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-cybercash">
					<term>
						<parameter>--with-cybercash[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; use <link linkend="install.configure.with-mck">--with-mck</link>를 대신 사용한다.
       </para>
						<para>
        PHP 4: Cybercash MCK 지원을 포함한다. DIR은 CyberCash MCK install directory이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-pfpro">
					<term>
						<parameter>--with-pfpro[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Verisign Payflow Pro 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.graphics">
			<title>Graphics</title>
			<variablelist>
				<varlistentry id="install.configure.enable-freetype-4bit-antialias-hack">
					<term>
						<parameter>--enable-freetype-4bit-antialias-hack</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: FreeType2 지원을 포함한다 (아직 완벽하지 않다.-experimental).
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-gd">
					<term>
						<parameter>--with-gd[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: GD 지원을 포함한다 (DIR은 GD의 install dir).
       </para>
						<para>
        PHP 4: GD 지원을 포함한다 (DIR은 GD의 install dir). 
       Set DIR to shared to build as a dl, or shared,DIR to build as a dl and still specify DIR.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.without-gd">
					<term>
						<parameter>--without-gd</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: GD를 지원하지 않도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-imagick">
					<term>
						<parameter>--with-imagick[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: ImageMagick 지원을 포함한다 . DIR은 ImageMagick의 install directory이고, 만약 없다면, PHP는 그 위치를 스스로 찾는다.(아직 완전하지 않다.)
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-jpeg-dir">
					<term>
						<parameter>--with-jpeg-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: pdflib 2.0이 사용하는 jpeg dir
       </para>
						<para>
        PHP 4: pdflib 3.x가 사용하는 jpeg dir
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-png-dir">
					<term>
						<parameter>--with-png-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: pdflib 3.x에서 사용하는 png dir
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-t1lib">
					<term>
						<parameter>--enable-t1lib</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: T1lib 지원을 포함한다.
       </para>
						<para>
        PHP 4: 사용 불가; <link linkend="install.configure.with-t1lib">--with-t1lib</link>을 대신 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-t1lib">
					<term>
						<parameter>--with-t1lib[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; <link linkend="install.configure.enable-t1lib">--enable-t1lib</link>를 대신 사용한다.
       </para>
						<para>
        PHP 4: T1lib 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-tiff-dir">
					<term>
						<parameter>--with-tiff-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: pdflib 2.0이 사용하는 tiff dir 
       </para>
						<para>
        PHP 4: pdflib 3.x가 사용하는 tiff dir
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ttf">
					<term>
						<parameter>--with-ttf[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: FreeType 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-xpm-dir">
					<term>
						<parameter>--with-xpm-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: gd-1.8+가 사용하는 xpm dir
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.misc">
			<title>Miscellaneous</title>
			<para>
     이것들은 분류를 명확히 나누기 어려운 것 들이다.
    </para>
			<variablelist>
				<varlistentry id="install.configure.disable-bcmath">
					<term>
						<parameter>--disable-bcmath</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: BC arbitrary precision 수학 함수를 제외하고 컴파일 한다.
        이 함수들은 일반적인 수학 함수들의 범위를 넘는 정밀도(precision)를 가지고 계산할 수 있도록 해 준다.
        자세한 내용은 <link linkend="ref.bc">BCMath Arbitrary Precision Mathematics Functions</link> 부분을 살펴보자.
       </para>
						<para>
        PHP 4: 사용 불가; bcmath는 기본으로 제외되어 컴파일된다. 
        bcmath를 포함시키려면 <link linkend="install.configure.enable-bcmath">--enable-bcmath</link>옵션을 준다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-display-source">
					<term>
						<parameter>--disable-display-source</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: source를 보여주는 기능을 끈다.
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-libtool-lock">
					<term>
						<parameter>--disable-libtool-lock</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: locking을 피한다. (might break parallel builds)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-pear">
					<term>
						<parameter>--disable-pear</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: PEAR을 설치하지 않는다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-pic">
					<term>
						<parameter>--disable-pic</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: shared objects를 위한 PIC를 Disable 한다 (Disable PIC for shared objects)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-posix">
					<term>
						<parameter>--disable-posix</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; <link linkend="install.configure.without-posix">--without-posix</link>를 대신 사용한다.
       </para>
						<para>
        PHP 4: POSIX 관련 함수들을 사용할 수 없도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-rpath">
					<term>
						<parameter>--disable-rpath</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: runtime library search paths를 추가시키지 못하도록 한다. (Disable passing additional runtime library search paths)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-session">
					<term>
						<parameter>--disable-session</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: session을 지원하지 못하도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-bcmath">
					<term>
						<parameter>--enable-bcmath</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; bcmath는 기본적으로 포함되어 컴파일 된다.
        제외하고 싶으면 <link linkend="install.configure.disable-bcmath">--disable-bcmath</link>을 사용한다.
       </para>
						<para>
        PHP 4: bc 형식의 수의 정밀도(precision)를 마음대로 조정할 수 있는 수학 함수를 사용할 수 있게 해 준다. 
        이 모듈의 자세한 사용법은 README-BCMATH 파일을 읽어보기 바란다.
        이 함수들은 일반적인 수학 함수들의 범위를 넘는 정밀도를 가지고 계산할 수 있도록 해 준다.
        자세한 내용은 <link linkend="ref.bc">BCMath Arbitrary Precision Mathematics Functions</link> 부분을 살펴보자.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-c9x-inline">
					<term>
						<parameter>--enable-c9x-inline</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: C9x-inline semantics 를 사용하게 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-calendar">
					<term>
						<parameter>--enable-calendar</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: 역법 변환(calendar conversion)을 지원한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-debug">
					<term>
						<parameter>--enable-debug</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 디버그용 디버깅 심볼을 포함하여 컴파일 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-debugger">
					<term>
						<parameter>--enable-debugger</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 내장된 원격 디버거 지원을 가능하게 한다. 
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-discard-path">
					<term>
						<parameter>--enable-discard-path</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 
이것을 Enabled하면, PHP CGI 실행파일이 웹 트리 밖에 안전하게 위치할 수 있게 되어, 이용자들이 .htaccess security 제약을 피할 수 없도록 한다. 자세한 사항은 section in the security chapter를 읽어보기 바란다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-dmalloc">
					<term>
						<parameter>--enable-dmalloc</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: dmalloc을 사용하도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-exif">
					<term>
						<parameter>--enable-exif</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다/
       </para>
						<para>
        PHP 4: exif를 지원한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-experimental-zts">
					<term>
						<parameter>--enable-experimental-zts</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: This will most likely break your build
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-fast-install">
					<term>
						<parameter>--enable-fast-install[=PKGS]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: 빠른 설치를 위해 최적화한다. [default=yes]
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-force-cgi-redirect">
					<term>
						<parameter>--enable-force-cgi-redirect</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 내부적인 서버 리디렉트(internal server redirects) 시에 보안 검사(security check)를 하도록 한다. 여러분이 Apache와 함께 CGI 버전을 사용한다면 반드시 이 옵션을 사용하여야 할 것이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-inline-optimization">
					<term>
						<parameter>--enable-inline-optimization</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: 만약 대용량 메모리에서 gcc를 사용하고를 사용한다면 한번 사용해 보기 바란다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-libgcc">
					<term>
						<parameter>--enable-libgcc</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: libgcc에 반하는 명시된 linking을 허용한다. (Enable explicitly linking against libgcc)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-maintainer-mode">
					<term>
						<parameter>--enable-maintainer-mode</parameter>
					</term>
					<listitem>
						<para>
    PHP 3, PHP 4: 평범한(casual) 사용자가 설치시에 필요한 컴파일러 주의 메시지나, dependencie 메시지 (때때로 충돌 메세지)등을 출력한다.
    </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-memory-limit">
					<term>
						<parameter>--enable-memory-limit</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 메모리 제한 기능을 지원한다. [default=no] 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-safe-mode">
					<term>
						<parameter>--enable-safe-mode</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 기본으로 안전모드(safe mode)를 사용하도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-satellite">
					<term>
						<parameter>--enable-satellite</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Satellite를 통한 CORBA 기능을 지원한다. (Requires ORBit) 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-shared">
					<term>
						<parameter>--enable-shared[=PKGS]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: 공유 라이브러리(shared libraries)를 사용한다. [default=yes]
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-sigchild">
					<term>
						<parameter>--enable-sigchild</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: PHP가 가진 고유의 SIGCHLD handler를 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-static">
					<term>
						<parameter>--enable-static[=PKGS]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: 정적 라이브러리(static libraries)를 사용한다. [default=yes]
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-sysvsem">
					<term>
						<parameter>--enable-sysvsem</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: System V semaphore를 지원한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-sysvshm">
					<term>
						<parameter>--enable-sysvshm</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: System V shared memory 를 지원한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-trans-sid">
					<term>
						<parameter>--enable-trans-sid</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: transparent session id propagation을 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-cdb">
					<term>
						<parameter>--with-cdb[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: CDB를 지원한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-config-file-path">
					<term>
						<parameter>--with-config-file-path=PATH</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: php3.ini를 찾을 디렉토리를 지정한다. 기본값은 <filename>/usr/local/lib</filename>이다.
						</para>
						<para>
        PHP 4: <filename>php.ini</filename>를 찾을 디렉토리를 지정한다. 기본값은 <filename>/usr/local/lib</filename>이다.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-cpdflib">
					<term>
						<parameter>--with-cpdflib[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: ClibPDF 지원을 포함한다. DIR은 ClibPDF의 install directory,이고, 기본값은 /usr/local이다.
       </para>
						<para>
        PHP 4: cpdflib 지원을 포함한다.(cpdflib 2 이상이 필요). DIR은 cpdflib의 install directory,이고, 기본값은 /usr이다.

       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-esoob">
					<term>
						<parameter>--with-esoob[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Easysoft OOB 지원을 포함한다. DIR은 OOB의 base install directory이고, 기본값은 /usr/local/easysoft/oob/client이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-exec-dir">
					<term>
						<parameter>--with-exec-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 안전 모드(safe mode)일 때, 여기서 지정해 준 DIR안의 실행 파일만 실행이 가능하다. 기본값은 /usr/local/php/bin이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-fdftk">
					<term>
						<parameter>--with-fdftk[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: fdftk 지원을 포함한다. DIR은 fdftk의 install directory이고, 기본값은 /usr/local이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-gnu-ld">
					<term>
						<parameter>--with-gnu-ld</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: C 컴파일러가 GNU ld를 사용한다고 추정한다. [default=no]
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-icap">
					<term>
						<parameter>--with-icap[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: ICAP 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-imap">
					<term>
						<parameter>--with-imap[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: IMAP 지원을 포함한다. DIR은 IMAP include와 c-client.a가 있는 디렉토리이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-imsp">
					<term>
						<parameter>--with-imsp[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: IMSP 지원을 포함한다. (DIR은 IMSP의 include dir 과 libimsp.a dir 이다).
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-java">
					<term>
						<parameter>--with-java[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: Java 지원을 포함한다. DIR은 JDK의 base install directory이다. This extension can only be built as a shared dl.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-kerberos">
					<term>
						<parameter>--with-kerberos[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: IMAP에서 Kerberos 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mcal">
					<term>
						<parameter>--with-mcal[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: MCAL 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mcrypt">
					<term>
						<parameter>--with-mcrypt[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: mcrypt 지원을 포함한다. DIR은 mcrypt의 install directory.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mhash">
					<term>
						<parameter>--with-mhash[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: mhash  지원을 포함한다. DIR은 mhash의 install directory.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mm">
					<term>
						<parameter>--with-mm[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: session storage를 위한 mm 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mod_charset">
					<term>
						<parameter>--with-mod_charset</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: mod_charset을 위한 transfer tables을 사용한다. (Rus Apache).
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-pdflib">
					<term>
						<parameter>--with-pdflib[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: pdflib 지원을 포함한다. (0.6과 2.0에서 테스트되었음). 
        DIR은 pdflib의 install directory이고, 기본값은 <filename>/usr/local</filename>이다.
       </para>
						<para>
        PHP 4: pdflib 3.x 지원을 포함한다. DIR은 pdflib의 install directory이고, 기본값은 <filename>/usr/local</filename>이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-readline">
					<term>
						<parameter>--with-readline[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: readline 지원을 포함한다. DIR은 readline의 install directory.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-regex">
					<term>
						<parameter>--with-regex=TYPE</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: regex library type: system, apache, php
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-servlet">
					<term>
						<parameter>--with-servlet[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: servlet 지원을 포함한다. DIR은 JSDK의 base install directory이다.
        이 SAPI를 위해서는 Java extension이 shared dl로 만들어져 있어야 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-swf">
					<term>
						<parameter>--with-swf[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: swf 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-system-regex">
					<term>
						<parameter>--with-system-regex</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP에 내장된 regex 라이브러리를 사용하지 않는다.
       </para>
						<para>
        PHP 4: 시스템의 regex 라이브러리를 사용한다. (별로 권하지 않는다.)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-tsrm-pth">
					<term>
						<parameter>--with-tsrm-pth[=pth-config]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: GNU Pth를 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-tsrm-pthreads">
					<term>
						<parameter>--with-tsrm-pthreads</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP 3에는 없다.
       </para>
						<para>
        PHP 4: POSIX threads를 사용한다. (default)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-x">
					<term>
						<parameter>--with-x</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: X Window System을 사용한다.
       </para>
						<para>
        PHP 4: PHP 4에는 없다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-zlib-dir">
					<term>
						<parameter>--with-zlib-dir[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: pdflib 2.0에서 사용하는 zlib 디렉토리 지정, 혹은 zlib 지원을 포함한다.
       </para>
						<para>
        PHP 4: pdflib 3.x에서 사용하는 zlib 디렉토리 지정, 혹은 zlib 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-zlib">
					<term>
						<parameter>--with-zlib[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: zlib 지원을 포함한다.(zlib 1.0.9 이상 필요). DIR은 zlib의 install directory이고, 기본값은 /usr이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.without-pcre-regex">
					<term>
						<parameter>--without-pcre-regex</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: Perl 호환 정규표현식 (Perl Compatible Regular Expressions) 지원을 포함하지 않는다.
       </para>
						<para>
        PHP 4: Perl 호환 정규표현식 (Perl Compatible Regular Expressions) 지원을 포함하지 않는다.
        만약 내장된 라이브러리를 사용하지 않고 PCRE를 사용하고 싶다면, --with-pcre-regex=DIR옵션을 사용하세요. 
        (DIR은 PCRE의 include와 library 파일이 있는 디렉토리)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.without-posix">
					<term>
						<parameter>--without-posix</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: POSIX 함수를 포함하지 않는다.
       </para>
						<para>
        PHP 4: PHP4에는 없다; 대신 <link linkend="install.configure.disable-posix">--disable-posix</link>를 사용한다.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.networking">
			<title>Networking</title>
			<variablelist>
				<varlistentry id="install.configure.with-curl">
					<term>
						<parameter>--with-curl[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: CURL 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-ftp">
					<term>
						<parameter>--enable-ftp</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; 대신 <link linkend="install.configure.with-ftp">--with-ftp</link>를 사용한다.
       </para>
						<para>
        PHP 4: FTP 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-ftp">
					<term>
						<parameter>--with-ftp</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: FTP 지원을 포함한다.
       </para>
						<para>
        PHP 4: 사용 불가; 대신 <link linkend="install.configure.enable-ftp">--enable-ftp</link>를 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-url-fopen-wrapper">
					<term>
						<parameter>--disable-url-fopen-wrapper</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: http나 ftp를 통한 URL 형태의 파일을 fopen으로 접근하는 것을 막는다.
       </para>
						<warning>
							<para>
        이 옵션은 PHP 4.0.3 이상에서에서는 <parameter>allow_url_fopen</parameter>이라는 INI 파라메터로만 제공된다. 
				</para>
						</warning>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-mod-dav">
					<term>
						<parameter>--with-mod-dav=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: Apache의 mod_dav를 통한 DAV 지원을 포함한다. DIR은 mod_dav의 installation directory 
        (Apache module 버전만 사용가능)
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-openssl">
					<term>
						<parameter>--with-openssl[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: SNMP에서 OpenSSL 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-snmp">
					<term>
						<parameter>--with-snmp[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: SNMP 지원을 포함한다. DIR은 SNMP의 base install directory이고, 기본값은 SNMP가 설치된 디렉토리를 자동으로 찾는 것이다. Set DIR to shared to build as a dl, or shared,DIR to build as a dl and still specify DIR.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-ucd-snmp-hack">
					<term>
						<parameter>--enable-ucd-snmp-hack</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: UCD SNMP hack을 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-sockets">
					<term>
						<parameter>--enable-sockets</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: sockets 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-yaz">
					<term>
						<parameter>--with-yaz[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: YAZ 지원을 포함한다. (ANSI/NISO Z39.50). DIR은 YAZ bin의 install directory.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-yp">
					<term>
						<parameter>--enable-yp</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 사용 불가; 대신 <link linkend="install.configure.with-yp">--with-yp</link>을 사용한다.
       </para>
						<para>
        PHP 4: YP 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-yp">
					<term>
						<parameter>--with-yp</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: YP 지원을 포함한다.
       </para>
						<para>
        PHP 4: 사용 불가; 대신<link linkend="install.configure.enable-yp">--enable-yp</link>을 사용한다.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.php">
			<title>PHP Behaviour</title>
			<variablelist>
				<varlistentry id="install.configure.enable-magic-quotes">
					<term>
						<parameter>--enable-magic-quotes</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 기본값으로 magic quotes를 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-short-tags">
					<term>
						<parameter>--disable-short-tags</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: 기본값으로 short form &lt;? PHP 태그의 사용을 불가능하게 한다. 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-track-vars">
					<term>
						<parameter>--enable-track-vars</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: 기본값으로 GET/POST/Cookie 변수를 추적한다.
       </para>
						<para>
        PHP 4: PHP4에는 없다; As of PHP 4.0.2, track_vars is always on.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.servers">
			<title>Server</title>
			<variablelist>
				<varlistentry id="install.configure.with-aolserver-src">
					<term>
						<parameter>--with-aolserver-src=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: Specify path to the source distribution of AOLserver
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-aolserver">
					<term>
						<parameter>--with-aolserver=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: Specify path to the installed AOLserver
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-apache">
					<term>
						<parameter>--with-apache[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: PHP를 Apache 모듈로 만든다. DIR은 Apache build directory의 최상단 디렉토리이고, 기본값은 /usr/local/etc/httpd이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-apxs">
					<term>
						<parameter>--with-apxs[=FILE]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: PHP를 shared Apache 모듈로 만든다. FILE은 옵션으로 Apache apxs 툴의 pathname이고, 기본값은 apxs이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-versioning">
					<term>
						<parameter>--enable-versioning</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: Solaris 2.x와 Linux에서 제공되는 versioning과 scoping을 이용한다.
       </para>
						<para>
        PHP 4: 필요한 심볼들만 export한다. 자세한 정보는 INSTALL 파일을 보자.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-fhttpd">
					<term>
						<parameter>--with-fhttpd[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: PHP를 fhttpd 모듈로 만든다.. DIR은 fhttpd 소스 디렉토리이고, 기본값은 /usr/local/src/fhttpd이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-nsapi">
					<term>
						<parameter>--with-nsapi=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: 설치된 Netscape 서버의 path를 명시한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-phttpd">
					<term>
						<parameter>--with-phttpd=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-pi3web">
					<term>
						<parameter>--with-pi3web=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: PHP를 Pi3Web에서 사용하는 모듈로 만든다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-roxen">
					<term>
						<parameter>--with-roxen=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: PHP를 Pike 모듈로 만든다.. DIR은 base Roxen directory이고, 보통 /usr/local/roxen/server이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-roxen-zts">
					<term>
						<parameter>--enable-roxen-zts</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: Roxen 모듈에서 Zend Thread Safety를 사용하게 만든다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-thttpd">
					<term>
						<parameter>--with-thttpd=SRCDIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: 
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-zeus">
					<term>
						<parameter>--with-zeus=DIR</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: PHP를 Zeus에 사용하는 ISAPI 모듈로 만든다.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.text">
			<title>Text and language</title>
			<variablelist>
				<varlistentry id="install.configure.with-aspell">
					<term>
						<parameter>--with-aspell[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: ASPELL 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-gettext">
					<term>
						<parameter>--with-gettext[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3, PHP 4: GNU gettext 지원을 포함한다. DIR은 gettext의 install directory이고, 기본값은 /usr/local이다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-pspell">
					<term>
						<parameter>--with-pspell[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: PSPELL 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-recode">
					<term>
						<parameter>--with-recode[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: GNU recode 지원을 포함한다.
       </para>
						<para>
        PHP 4: recode 지원을 포함한다. DIR은 recode의 install directory.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="install.configure.xml">
			<title>XML</title>
			<variablelist>
				<varlistentry id="install.configure.with-dom">
					<term>
						<parameter>--with-dom[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: DOM 지원을 포함한다. (libxml 2.0 이상이 필요하다). DIR은 libxml의 install directory이고, 기본값은 <filename>/usr</filename>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-sablot-errors-descriptive">
					<term>
						<parameter>--enable-sablot-errors-descriptive</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: Descriptive errors를 사용한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-sablot">
					<term>
						<parameter>--with-sablot[=DIR]</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: Sablotron 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.enable-wddx">
					<term>
						<parameter>--enable-wddx</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다.
       </para>
						<para>
        PHP 4: WDDX 지원을 포함한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.disable-xml">
					<term>
						<parameter>--disable-xml</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: PHP3에는 없다; XML 함수들은 기본적으로 포함되지 않는다. 
        이 함수들을 사용하고 싶다면 <link linkend="install.configure.with-xml">--with-xml</link>옵션을 사용하라.
       </para>
						<para>
        PHP 4: 내장된 expat lib를 사용한 XML 지원을 못하도록 한다.
       </para>
					</listitem>
				</varlistentry>
				<varlistentry id="install.configure.with-xml">
					<term>
						<parameter>--with-xml</parameter>
					</term>
					<listitem>
						<para>
        PHP 3: XML 지원을 포함한다.
       </para>
						<para>
        PHP 4: 사용불가; XML 지원은 기본적으로 포함된다. 
        이 기능을 빼고 싶으면 <link linkend="install.configure.disable-xml">--disable-xml</link> 옵션을 사용하라.
       </para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
	<sect1 id="install-windows95-nt">
		<title>Windows 95/98/NT 시시템에 설치</title>
		<simpara>
이 설치 안내서는 PHP를 Windows 9x/NT 웹서버에서 설치하고 설정하는데 도움을 줄 것입니다. 이 안내서는 &link.bob;에 의해 작성되었습니다. 따라서 가장 최신의 개정판은 <ulink url="&url.win32install;">&url.win32install;</ulink>에서 찾을 수 있습니다.
   </simpara>
		<para>
    이 안내서는 다음과 같은 웹서버를 대상으로 합니다.:
    <itemizedlist>
				<listitem>
					<para>
       Personal Web Server (최신버젼이 좋다)
      </para>
				</listitem>
				<listitem>
					<para>
       Internet Information Server 3 or 4
      </para>
				</listitem>
				<listitem>
					<para>
       Apache 1.3.x
      </para>
				</listitem>
				<listitem>
					<para>
       Omni HTTPd 2.0b1
      </para>
				</listitem>
			</itemizedlist>
		</para>
		<sect2 id="install.windows.general">
			<title>일반적인 설치 과정</title>
			<para>
      웹 서버의 종류와 관계없이 다음의 설치 과정들이 완료되어야 한다. 
     <itemizedlist>
					<listitem>
						<para>
        배포 파일을 풀어 놓을 디렉토리를 정한다. 일반적으로 &quot;C:\PHP\&quot; 도 좋다
       </para>
					</listitem>
					<listitem>
						<para>
          &apos;php.ini-dist&apos; 파일을 windows95/98 이라면 &apos;%WINDOWS%&apos; 디렉토리에, 
          Windows NT/2000이라면 &apos;%SYSTEMROOT%&apos; 디렉토리에 &apos;php.ini&apos;라는 이름으로 복사해 둔다. 
          &apos;%WINDOWS%&apos; 나 &apos;%SYSTEMROOT%&apos; 디렉토리는 일반적으로 다음과 같다. 
                                   <simplelist>
								<member>c:\windows for Windows 95/98</member>
								<member>c:\winnt or c:\winnt40 for NT/2000 servers</member>
							</simplelist>
						</para>
					</listitem>
					<listitem>
						<para>
         &apos;php.ini&apos; 파일을 다음과 같이 수정한다.:
        <itemizedlist>
								<listitem>
									<simpara>
           'extension_dir'을 여러분의 php-install-dir로 고쳐주어야 한다. 혹은 'php_*.dll'이 놓여있는 위치를 지정한다. (예. c:\php) 
          </simpara>
								</listitem>
								<listitem>
									<simpara>
          Omni Httpd의 경우에는 이 과정은 생략!
          'doc_root'를 웹서버의 document_root 디렉토리를 지정하도록 합니다. (예. c:\apache\htdocs 혹은 c:\webroot) 
          </simpara>
								</listitem>
								<listitem>
									<simpara>
          PHP가 시작될 때 load할 모듈들을 선택한다. 'extension=php_*.dll' 설정을 uncomment하면 해당 모듈을 load하는 것입니다. 
          일부 모듈은 올바르게 동작하기 위해 시스템에 별도의 라이브러리를 설치해야 하는 경우도 있습니다. 
          어디서 지원하는 라이브러리를 얻을 수 있는지는 PHP의 <ulink url="&url.php.faq;">FAQ</ulink>를 보면 
          좀더 자세한 정보를 얻을 수 있을 것입니다.
          여러분은 모듈을 <command>dl("php_*.dll");</command> 처럼 스크립트 내에서 동적으로 load할 수도 있다. 
									</simpara>
								</listitem>
								<listitem>
									<simpara>
          PWS와 IIS에서 browscap.ini는 다음의 위치에 있다. Windows 95/98은 'c:\windows\system\inetsrv\browscap.ini', 
          NT 서버에서는 'c:\winnt\system32\inetsrv\browscap.ini'에 있다. PHP에서 browscap기능을 사용하는 방법에 대한 
         추가적인 설명은 이 <ulink url="&url.browscap;">mirror</ulink>에서 "source" 버튼을 선택하여 보도록 한다
                                             </simpara>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
				</itemizedlist>
			</para>
			<simpara>
     PHP 확장을 위한 DLL들은 'php_'로 시작한다. 
     이것은 PHP 확장을 위한 DLL들과 자체적인 지원을 위한 DLL들간의 혼란을 방지하기 위해서이다.
               </simpara>
		</sect2>
		<sect2 id="install.windows.iis3">
			<title>Windows 95/98/NT 와 PWS/IIS 3</title>
			<simpara>
      이 서버에서의 설정은 배포판의 INF 파일(php_iis_reg.inf)을 사용하는 것을 권한다. 
      여러분은 이 파일을 수정하여 여러분이 원하는 PHP 설치 디렉토리와 확장 내용들을 설정할 수 있다. 
      만약 수동으로 설정하고 싶다면 다음과 같이 합니다.
    </simpara>
			<simpara>
주의 : 이 과정은 윈도우의 resistry를 직접 다룹니다. 하나의 실수가 여러분의 시스템 전체를 불안한 상태로 만들 수 있습니다. 
우리는 여러분이 registry를 편집하기 전에 반드시 편집 전의 registry를 백업해 놓을 것. PHP 개발팀은 어떠한 registry의 파손도 
책임지지 않습니다. 만약 registry에 손상이 갈 경우 OS를 새로 깔기 전에는 부팅되지 않을 수도 있습니다. 
              </simpara>
			<para>
				<itemizedlist>
					<listitem>
						<simpara>
        Regedit를 실행한다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        다음으로 이동한다: <literal>HKEY_LOCAL_MACHINE /System
         /CurrentControlSet /Services /W3Svc /Parameters
         /ScriptMap</literal>.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        edit 메뉴를 선택하여 <literal>New->String Value</literal>를 선택한다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        PHP script가 사용할 확장자를 입력한다. ( ex: <literal>.php</literal>) 
        Type in the extension you wish to use for your php
        scripts. ex: <literal>.php</literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
       새 문자열 값을 더블 클릭하고 value 필드에 <literal>php.exe</literal>path를 적는다. 
       (ex: <literal>c:\php\php.exe %s %s</literal>) '%s %s'는 매우 중요하다. PHP는 이것없이는 동작하지 않는다
       </simpara>
					</listitem>
					<listitem>
						<simpara>
       만약 PHP 스크립트의 다른 확장자가 있다면 위의 과정을 반복한다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        다음으로 이동한다.: <literal>HKEY_CLASSES_ROOT</literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
        edit 메뉴에서 <literal>New->Key</literal>.를 선택한다
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        여러분이 이전 과정에서 설정한 확장자를 Key의 이름으로 지정한다. ( ex: <literal>.php</literal> ) 
						</simpara>
					</listitem>
					<listitem>
						<simpara>
        새 키를 Highlight시키고 오른쪽 창에서 "default value" 를 더블 클릭한 후에 <literal>phpfile</literal>이라고 적는다.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        위에서 설정한 다른 확장자가 있으면 다른 확장자에 대해서도 이 과정을 반복한다.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        이제 <literal>HKEY_CLASSES_ROOT</literal>에서 <literal>New->Key</literal>를 선택하여 새로운 Key를 만들고 
        <literal>phpfile</literal>로 이름을 정한다. 
                               </simpara>
					</listitem>
					<listitem>
						<simpara>
        <literal>phpfile</literal>이라고 정한 새 키를 Highlight시키고 오른쪽 창에서 "default value" 를 더블 클릭한 후에 
        <literal>PHP Script</literal>라고 적는다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        <literal>phpfile key</literal>에서 오른쪽 버튼을 클릭하여 <literal>New->Key</literal>를 선택하고 
        <literal>Shell</literal>이라고 이름 붙인다
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        <literal>Shell key</literal>에서 오른쪽 버튼을 클릭하여 <literal>New->Key</literal>를 선택하고 
        <literal>open</literal>이라고 이름 붙인다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        <literal>open key</literal>에서 오른쪽 버튼을 클릭하여 <literal>New->Key</literal>를 선택하고 
        <literal>command</literal>이라고 이름 붙인다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        <literal>command</literal>라고 정한 새 키를 Highlight시키고 오른쪽 창에서 "default value" 를 더블 클릭한 후에 
        <literal>php.exe</literal>의 path를 적는다. ( ex: <literal>c:\php\php.exe -q %1</literal> ) (<literal>%1</literal>을 잊지 말도록) . 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        Regedit를 종료한다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        PWS를 윈도우즈에서 현재 새용중이면, 윈도우즈를 리부트하여 registry를 다시 로드하도록 합니다.
       </simpara>
					</listitem>
				</itemizedlist>
			</para>
			<simpara>
     PWS와 IIS 3 사용자들은 현재 실제로 운영중인 시스템을 갖고 있습니다. 
     IIS 3 사용자들은 Steven Genusa가 작성한 스크립트 맵을 설정하는 매력적인 <ulink url="&url.iiscfg;">tool</ulink>을 사용할 수 있습니다.
    </simpara>
		</sect2>
		<sect2 id="install.windowsnt.iis4">
			<title>Windows NT and IIS 4</title>
			<simpara>
       PHP를 IIS 4가 운영중인 NT Server에 설치하려면 다음 과정을 따른다. :
    </simpara>
			<para>
				<itemizedlist>
					<listitem>
						<simpara>
        Internet Service Manager (MMC)에서, Web site를 선택하거나 application의 시작이 되는 디렉토리를 선택한다.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        오른쪽 버튼을 클릭하고 properties(등록정보)를 선택하여, 
        디렉토리의 property sheets(등록 정보 화면)을 연 후에, 
        Home Directory나 Virtual Directory 혹은 Directory 탭을 클릭한다.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        Configuration 버튼을 클릭한후 App Mappings 탭을 클릭한다.
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        Add를 클릭하여 Executable 박스에서 다음과 같이 입력한다. : <literal>c:\path-to-php-dir\php.exe %s %s</literal>. 이때 반드시 맨 뒤에 %s %s를 붙여주어야 합니다. 그렇지 않으면 PHP는 올바르게 작동하지 않습니다. 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
        Extension 박스에서 PHP스크립트들의 파일 확장자를 입력합니다. 
        각각의 확장자에 대하여 이 과정을 반복합니다. 
        (<literal>.php</literal>와 <literal>.phtml</literal> 공통입니다.) 
       </simpara>
					</listitem>
					<listitem>
						<simpara>
       적당한 보안을 설정한다. (이것으로 Internet Service Manager에서의 설정은 끝이다.) 
       만약 여러분이 NT Server에 NTFS 파일 시스템을 사용한다면, 
       <literal>php.exe</literal>가 있는 디렉토리에 대하여 I_USR_ 사용자에게 실행 권한을 주어야 한다
       </simpara>
					</listitem>
				</itemizedlist>
			</para>
		</sect2>
		<sect2 id="install.windows.apache">
			<title>Windows 9x/NT와 Apache 1.3.x</title>
			<simpara>
      Apache를 PHP CGI binary와 함께 실행하도록 설정하려면
      <literal>srm.conf</literal>이나 <literal>httpd.conf</literal>를 다음과 같이 수정하여야 한다.
    </simpara>
			<simpara>

      비록 Apache하에서 PHP의 설정이 약간 차이가 있을지 모르지만, 이 설정은 초보자도 할 수 있을 정도로 쉽다. 
      여기에 나온 것 이상의 설정 지시자는 Apache Docs를 참조하도록 하자. 
    </simpara>
			<para>
				<itemizedlist>
					<listitem>
						<simpara>
							<literal>
         ScriptAlias /php/ "c:/path-to-php-dir/"
        </literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<literal>
         AddType application/x-httpd-php .php
        </literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<literal>
         AddType application/x-httpd-php .phtml
        </literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
						</simpara>
					</listitem>
				</itemizedlist>
			</para>
			<simpara>

소스 코드 하이라이팅 기능(소스에 색깔을 넣어서 보기 좋게 출력해 주는 기능)을 사용하기 위해서는 
다음과 같은 내용을 가지는 스크립트를 만들어주면 된다. : <literal>&lt;?php show_source("original_php_script.php"); ?></literal>
여기서 <literal>original_php_script.php</literal> 를 여러분이 원하는 소스 코드의 이름으로 바꿔주면 된다
<emphasis>Note:</emphasis>: Win-Apache에서 "c:\directory\file.ext"와 같이 path에 사용되는 모든 백슬래시(\)는 일반 슬래시(/)로 바꿔야 합니다.
    </simpara>
		</sect2>
		<sect2 id="install.windows.omnihttpd">
			<title>Windows에서 Omni HTTPd 2.0b1</title>
			<simpara>
     이 설정은 매우 쉬운 편이다. 
    </simpara>
			<para>
				<itemizedlist>
					<listitem>
						<para>
        Step 1: Omni server를 설치한다.
       </para>
					</listitem>
					<listitem>
						<para>
        Step 2:system tray의 푸른색 OmniHTTPd 아이콘에서 오른쪽 버튼을 클릭하여 <literal>Properties(등록정보)</literal>를 선택한다.
						</para>
					</listitem>
					<listitem>
						<para>
        Step 3: <literal>Web Server Global Settings</literal>을 클릭한다
						</para>
					</listitem>
					<listitem>
						<para>
        Step 4: 'External' 탭에서 다음을 입력한다. : 
         <literal>virtual = .php | actual = c:\path-to-php-dir\php.exe</literal>
						</para>
					</listitem>
					<listitem>
						<para>
        Step 5: <literal>Mime</literal> 탭에서 다음을 입력한다. :
        <literal>virtual = wwwserver/stdcgi | actual = .php</literal>
						</para>
					</listitem>
					<listitem>
						<para>
        Step 6: <literal>OK</literal>를 클릭한다.
						</para>
					</listitem>
				</itemizedlist>
			</para>
			<simpara>
     PHP의 모든 확장자에 대해 steps 2 - 6을 반복한다.
    </simpara>
		</sect2>
		<sect2 id="install.windows.installer">
			<title>Windows Installshield</title>
			<para>
     The Windows PHP installer available from the downloads page at 
     <ulink url="&url.php;">&url.php;</ulink> installs the CGI version of 
     PHP and, for IIS, PWS, and Xitami, configures the web server as well.
    </para>
			<simpara>
     Install your choosen http server on your system and make sure it all works.
    </simpara>
			<simpara>
     Run the installer exe file and follow the instructions provided by the
     installation wizard. Two types of installation are supported - standard,
     which provides sensible defaults for all the settings it can, and
     advanced, which asks questions as it goes along.
    </simpara>
			<simpara>
     The installation wizard gathers enough information to set up the 
     <filename>php.ini</filename> file and configure the web server to use PHP.
     For IIS and also PWS on NT Workstation, a list of all the nodes on the server 
     with script map settings is displayed, and you can choose those nodes to which 
     you wish to add the PHP script mappings.
    </simpara>
			<simpara>
     Once the installation has completed the installer will inform you if you
     need to restart your system, restart the server, or just start using PHP.
    </simpara>
		</sect2>
		<sect2 id="install.windows.modules">
			<title>PHP Modules</title>
			<para>
				<table>
					<title>PHP Modules</title>
					<tgroup cols="2">
						<tbody>
							<row>
								<entry>php_calendar.dll</entry>
								<entry>Calendar conversion functions</entry>
							</row>
							<row>
								<entry>php_crypt.dll</entry>
								<entry>Crypt functions</entry>
							</row>
							<row>
								<entry>php_dbase.dll</entry>
								<entry>DBase functions</entry>
							</row>
							<row>
								<entry>php_dbm.dll</entry>
								<entry>GDBM emulation via Berkely DB2 library</entry>
							</row>
							<row>
								<entry>php_filepro.dll</entry>
								<entry>READ ONLY access to filepro databases</entry>
							</row>
							<row>
								<entry>php_gd.dll</entry>
								<entry>GD Library functions for gif manipulation</entry>
							</row>
							<row>
								<entry>php_hyperwave.dll</entry>
								<entry>HyperWave functions</entry>
							</row>
							<row>
								<entry>php_imap4r2.dll</entry>
								<entry>IMAP 4 functions</entry>
							</row>
							<row>
								<entry>php_ldap.dll</entry>
								<entry>LDAP functions</entry>
							</row>
							<row>
								<entry>php_msql1.dll</entry>
								<entry>mSQL 1 client</entry>
							</row>
							<row>
								<entry>php_msql2.dll</entry>
								<entry>mSQL 2 client</entry>
							</row>
							<row>
								<entry>php_mssql.dll</entry>
								<entry>MSSQL client (requires MSSQL DB-Libraries</entry>
							</row>
							<row>
								<entry>php3_mysql.dll (Built into PHP 4)</entry>
								<entry>MySQL functions</entry>
							</row>
							<row>
								<entry>php_nsmail.dll</entry>
								<entry>Netscape mail functions</entry>
							</row>
							<row>
								<entry>php_oci73.dll</entry>
								<entry>Oracle functions</entry>
							</row>
							<row>
								<entry>php_snmp.dll</entry>
								<entry>SNMP get and walk functions (NT only!)</entry>
							</row>
							<row>
								<entry>php_zlib.dll</entry>
								<entry>ZLib functions</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</para>
		</sect2>
	</sect1>
	<sect1 id="install-problems">
		<title>Problems?</title>
		<sect2>
			<title>Read the FAQ</title>
			<simpara>
     보통 질문들은 공통적인 것이 많다. PHP FAQ에 이 공통적인 질문들이 모여있으니 찾아보자. 
    이 문서는 <ulink url="&url.php.faq;">&url.php.faq;</ulink>에서 찾을 수 있다.
			</simpara>
		</sect2>
		<sect2 id="install.bugreports">
			<title>Bug reports</title>
			<simpara>
    만약 여러분이 Bug라고 생각되는 것이 발견될 경우 이것을 반드시 보고해 주기 바란다. 
    PHP의 개발자들은 아마 그 버그에 대해 여러분이 알려주기 전에는 모르고 있을 것이다. 
    여러분의 버그 레포트가 있어야 버그들을 잡을 수 있겠지요?. 버그 보고용 폼이 PHP 사이트에 있습니다. 
    주요 양식은 <ulink url="&url.php.bugs;">&url.php.bugs;</ulink>에서 찾을 수 있습니다. 
    (역자주: 버그 레포트는 영어로 써야 겠지요. Hi)
    </simpara>
		</sect2>
		<sect2 id="install.otherproblems">
			<title>Other problems</title>
			<simpara>
      만약 여러분이 아직도 고생하고 있다면, PHP의 메일링 리스트(mailing list)가 도움을 줄 수 있을 것이다. 
      단, 어떤 질문을 하기 전에 우선 보관 문서(archive)를 찾아보아 같은 문제에 대한 해답이 있는지 찾아보는 것을 잊지 말도록 하자. 
      보관 문서는 <ulink url="&url.php;">&url.php;</ulink>에서 찾아 볼 수 있다. 
      PHP 메일링 리스트에 참가하려면 <ulink url="mailto:&email.php3.subscribe;">&email.php3.subscribe;</ulink>으로 
      빈 편지를 하나 보내면 된다. mailing list 주소는 <literal>&email.php3;</literal>이다.
    </simpara>
			<simpara>
      만약 여러분이 mailing list를 통해서 어떤 도움을 받고 싶다면, 
      질문시에 자세하고 명확한 질문과 함께, 여러분의 운영 환경에 대한 세부항목을 첨부하는 것이 좋다 
      (운영체계, PHP 버전, 웹서버의 종류와 버전, PHP를 CGI로 쓰고 있는지 모듈로 쓰고 있는지 등). 
      또한 여러분이 당면한 문제를 재현할 수 있는 코드를 포함시키면 더욱 좋다. (역자주: 이것도 당연히 영어로 써야 겠지요. Hi)
     </simpara>
		</sect2>
	</sect1>
</chapter>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
