<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.10 Maintainer: progcom Status: ready -->
   <sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>유닉스 시스템 아파치 2.0</title>
    <para>
     이 섹션은 유닉스 시스템 아파치 2.0에 특화된 PHP 설치에 관한 정보와 힌트를
     담고 있습니다.
    </para>
   
    &warn.apache2.compat;
    
    <para>
     아파치 2.0 서버에 대한 이해를 위하여 <link
      xlink:href="&url.apache2.docs;">아파치 문서</link>를 살펴보길 권합니다.
    </para>

    &install.snippet.apache2.compat;

    <para>
     최신 버전의 <link xlink:href="&url.apache;">아파치 2.0</link>과 위에서
     언급한 위치에서 적합한 PHP 버전을 내려받습니다. 이 빠른 가이드는 아파치
     2.0과 PHP를 시작하는 기본적인 내용만 다루고 있습니다. 자세한 정보는 <link
      xlink:href="&url.apache2.docs;">아파치 문서</link>를 읽으십시오. 지시가
     틀리지 않기 위해서, 여기에서 버전 번호는 제거했습니다. 'NN'을 적합한
     값으로 변경해야 합니다.
    </para>
    <example>
     <title>
      설치 안내 (아파치 2 공유 모듈 버전)
     </title>
     <screen>
<![CDATA[
1.  gzip -d httpd-2_0_NN.tar.gz
2.  tar xvf httpd-2_0_NN.tar
3.  gunzip php-NN.tar.gz
4.  tar -xvf php-NN.tar
5.  cd httpd-2_0_NN
6.  ./configure --enable-so
7.  make
8.  make install

    이제 /usr/local/apache2 아래 모듈 적재 지원과 표준 MPM
    prefork로 설정한 아파치 2.0.NN이 존재합니다.
    설치를 테스트하려면 일반적인 아파치 서버 시작 절차를
    사용합니다. 즉:
    /usr/local/apache2/bin/apachectl start
    그리고 PHP 설정을 위하여 서버를 중단합니다:
    /usr/local/apache2/bin/apachectl stop.

9.  cd ../php-NN

10. 이제, PHP를 설정합니다. 여기에서 확장을 활성화 하는 등,
    PHP를 다양한 다양한 옵션으로 커스터마이즈합니다. 
    ./configure --help 를 실행하여 가능한 옵션 목록을 확인할 수 있습니다.
    예제에서는 아파치 2와 MySQL 지원으로 간단히 설정합니다. 실제 apxs
    경로는 다를 수 있습니다. 시스템에 따라서 apxs2로 존재하는 경우도
    있습니다.
    
      ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql

11. make
12. make install

    설치 후에 설정 옵션을 바꾸려면, 마지막 세 단계만
    반복하면 됩니다. 그리고 새 모듈이 효과를 발휘하도록
    아파치를 재시작하면 됩니다. 아파치를 다시 컴파일할
    필요는 없습니다.

    특별히 언급이 없는 한, 'make install'은 PEAR, phpize 같은 다양한
    PHP 도구, PHP CLI 등을 함께 설치합니다.
    
13. php.ini 설치
    
    cp php.ini-dist /usr/local/lib/php.ini

    PHP 옵션을 설정하기 위하여 .ini 파일을 수정할 수 있습니다. php.ini를
    다른 위치에 놓으려면, 10번째 단계에서 --with-config-file-paht=/some/path
    를 사용합니다.

    php.ini-recommended를 선택한다면, 안에서 변경 목록을 읽어서,
    어떤 PHP 행동에 영향을 주는지 확인하십시오.

14. httpd.conf를 수정하여 PHP 모듈을 적재합니다. LoadModule
    구문 우측에서는 시스템의 PHP 모듈 경로를 가르켜야 합니다.
    위에서 make install이 이미 이를 추가했을 수도 있지만,
    꼭 확인해보십시오.

    For PHP 4:
  
      LoadModule php4_module modules/libphp4.so
      
    For PHP 5:
    
      LoadModule php5_module modules/libphp5.so
 
15. 어떠한 확장자를 PHP로 해석할지 아파치에 알려줍니다. 예를 들어,
    아파치가 .php 파일을 PHP로 해석하게 합시다. 단순히 아파치
    AddType 지시어를 사용하는 대신, exploit.php.jpg 등의 파일이
    업로드되어 PHP로 실행되는 것을 막습니다. 이 예제를 사용하여,
    PHP로 해석할 어떠한 확장자라도 단순히 추가할 수 있습니다.
    예시를 위해 .phtml을 추가하겠습니다.

      <FilesMatch \.php$>
          SetHandler application/x-httpd-php
      </FilesMatch>

    또는, .php, .php2, .php3, .php4, .php6, .phtml 파일을 PHP로 실행하게
    할 수 있습니다. 이렇게 하면 됩니다:

      <FilesMatch "\.ph(p[2-6]?|tml)$">
          SetHandler application/x-httpd-php
      </FilesMatch>

    .phps 파일을 PHP 소스 파일로 실행하려면, 다음을 추가합니다:

      <FilesMatch "\.phps$">
          SetHandler application/x-httpd-php-source
      </FilesMatch>

16. 아파치 서버를 시작하는 정상 절차를 사용합니다, 즉:
   
      /usr/local/apache2/bin/apachectl start

          - 또는 -

      service httpd restart
   
]]>

      </screen>
     </example>
    <para>
     위 단계를 따라하면 아파치2 웹 서버를 PHP <literal>SAPI</literal> 모듈로
     실행하게 됩니다. 물론, 아파치와 PHP에는 많은 설정 옵션이 존재합니다.
     자세한 정보는 해당 소스 트리에서 <command>./configuration
      --help</command>를 쳐 보십시오. 멀티쓰레드 버전의 아파치2를 빌드하려면,
     표준 MPM 모듈 <filename>prefork</filename>를
     <filename>worker</filename>나 <filename>perchild</filename>로 덮어써야
     합니다. 이를 위해서는 위의 6번째 단계에서 <option
      role="configure">--with-mpm=worker</option>나 <option
      role="configure">--with-mpm=perchild</option> 옵션을 추가해야 합니다.
     이를 하기 전에, 최소한 이 일이 어떻게 작동하는지와 장단점을 파악하십시오.
     자세한 정보는 <link xlink:href="&url.apache2.mpm;">MPM 모듈</link>에 관한
     아파치 문서를 읽어보십시오.
    </para>
    <note>
     <para>
      내용 협상을 사용하려면, <link
       linkend="faq.installation.apache.multiviews">아파치 MultiViews
       FAQ</link>를 읽어보십시오.
     </para>
    </note>
    <note>
     <para>
      아파치 멀티쓰레드 버전을 빌드하려면, 시스템이 쓰레드를 지원해야 합니다.
      이 경우 PHP를 실험적인 Zend Thread Safety (ZTS)로 빌드하게 합니다.
      그러므로 모든 확장을 사용할 수 없습니다. 권장하는 설치는 아파치를 표준
      <filename>prefork</filename> MPM 모듈로 빌드하는 것입니다.
     </para>
    </note>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
