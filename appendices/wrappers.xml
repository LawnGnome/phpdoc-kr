<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.22 Maintainer: fuzzy74 Status: ready -->
<appendix id="wrappers">
 <title>지원 프로토콜/래퍼 목록</title>
 <para>
  다음은 <function>fopen</function> 과 <function>copy</function>같은 파일시스템
  함수용으로 내장된 PHP의 다양한 URL 스타일 프로토콜의 목록이다.
  이런 래퍼들은 물론, <literal>PHP 4.3.0</literal>에서는,
  PHP 스크립트와 <function>stream_register_wrapper</function>를 사용하는 자신의
  래퍼를 작성할수 있다.
 </para>

 <section id="wrappers.http">
  <title>HTTP 와 HTTPS</title>
   <simpara>
    PHP 3, PHP 4.  <literal>PHP 4.3.0</literal> 이후의 <filename>https://</filename>
   </simpara>

  <itemizedlist>
   <listitem><simpara><filename>http://example.com</filename></simpara></listitem>
   <listitem><simpara><filename>http://user:password@example.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://example.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://user:password@example.com</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   HTTP GET 메소드를 사용하여, HTTP 1.0으로 파일/자원의 읽기-전용
   권한이 허용된다. <literal>Host:</literal> 헤더는 name-based 가상 호스트를
   제어하기 위한 요청으로 보내진다. ini 파일이나 스트림 환경을 사용하여
   <link linkend="ini.user-agent">user_agent</link> 문자열을 설정할수 있다면,
   그 요청에 같이 포함되어질것이다.
  </simpara>
  <simpara>
   리다이렉트(Redirect)는 PHP 4.0.5이후부터 지원되었다; 이전 버전을
   사용중이라면 URL의 뒤에 슬래쉬를 포함할 필요가 있을것이다.
  </simpara>
  <simpara>
   스트림은 리소스의 <emphasis>body</emphasis>에 접속할 권한이 있다;
   헤더는 <varname>$http_response_header</varname> 변수에 저장된다.
   <literal>PHP 4.3.0</literal> 이후부터, 헤더는 
   <function>stream_get_meta_data</function>를 사용하여 이용가능하다.
  </simpara>
  <simpara>
   HTTP 접속은 읽기-전용이다; HTTP 리소스에 데이터를 쓰거나 파일을
   복사할수 없다.
  </simpara>
  <note>
   <simpara>
    HTTPS는 <literal>PHP 4.3.0</literal>부터 지원되었다. 
    OpenSSL에 대한 지원 옵션으로 컴파일해야 한다.
   </simpara>
  </note>
  <para>
   <table>
    <title>래퍼(Wrapper) 요약</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>allow_url_fopen</literal>에만 한정됨.</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>읽기 허용</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>쓰기 허용</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>추가 허용</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>동시 읽기/쓰기 허용</entry>
       <entry>N/A</entry>
      </row>
      <row>
       <entry><function>stat</function> 지원</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> 지원</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>컨텍스트 옵션(<literal>PHP 5.0.0</literal>의)</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Name</entry>
       <entry>Usage</entry>
       <entry>Default</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <literal>method</literal>
       </entry>
       <entry>
        원격 서버에 의해 지원되는
        <constant>GET</constant>, <constant>POST</constant>과 
        다른 모든 HTTP 메소드
       </entry>
       <entry>
        <constant>GET</constant>
       </entry>
      </row>
      <row>
       <entry>
        <literal>header</literal>
       </entry>
       <entry>
        요청시 전송되는 추가적인 헤더. 이 옵션 값은
        다른 값들(<literal>User-agent:</literal>, <literal>Host:</literal>,
        <literal>Authentication:</literal>)에 의해 오버라이드될것이다.
       </entry>
       <entry>
       </entry>
      </row>
      <row>
       <entry>
        <literal>user_agent</literal>
       </entry>
       <entry>
        User-Agent: 헤더에 의해 전송되는 값. 이 값은
        user-agent가 <literal>header</literal> 컨텍스트 옵션에서 설정되지
        <emphasis>않을때</emphasis>만 사용될것이다.
       </entry>
       <entry>
        &php.ini; setting: <literal>user_agent</literal>
       </entry>
      </row>
      <row>
       <entry><literal>content</literal></entry>
       <entry>
        헤더 다음에 전송되는 추가데이터. 표준적으로 POST나 PUT 요청에서
        사용된다.
       </entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <note>
   <title>기저(Underlying) 소켓 스트림 컨텍스트 옵션</title>
   <simpara>
    <literal>http://</literal> 스트림에 대한 
    <link linkend="transports.inet">기저(underlying) 전송</link>에
    의해 지원될수 있는 추가 컨텍스트 옵션이고, 
    <literal>tcp://</literal> 전송 컨텍스트 옵션으로 참조된다.
    <literal>https://</literal> 스트림에 대해서는
    <literal>ssl://</literal> 전송 컨텍스트 옵션으로 참조된다.
   </simpara>
  </note>
 </section>

 <section id="wrappers.ftp">
  <title>FTP 와 FTPS</title>
  <simpara>
   PHP 3, PHP 4. <literal>PHP 4.3.0</literal>이후부터 <filename>ftps://</filename> 
  </simpara>

  <itemizedlist>
   <listitem><simpara><filename>ftp://example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftp://user:password@example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftps://example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftps://user:password@example.com/pub/file.txt</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   FTP를 통해 기존 파일에 대한 읽기 권한과 새로운 파일의 생성 권한을
   허용한다. 서버가 패시브 모드(passive mode) ftp를 지원하지않으면,
   접속이 실패할것이다.
  </simpara>
  <simpara>
   읽거나 쓰기 위해 파일을 열수 있다. 그러나 동시에 읽기/쓰기를 할수 없다.
   원격 파일이 ftp 서버에 이미 존재하고 그 파일에 쓰기를 시도하려하는데
   컨텍스트 옵션 <literal>overwrite</literal> 를 설정하지 않았다면,
   접속이 실패할것이다. 차선책으로
   <link linkend="ref.ftp">FTP extension</link>을 사용할수 있다.
  </simpara>
  <note>
   <title>Appending</title>
   <simpara>
    <literal>ftp://</literal> url 래퍼를 통해 
    <literal>PHP 5.0.0</literal> 파일이 추가될것이다. 이전 버전에서,
    <literal>ftp://</literal>를 통해 파일을 추가하려하면 실패할것이다.
   </simpara>
  </note>
  <simpara>
   <literal>PHP 4.3.0</literal>부터 <filename>ftps://</filename>를 지원한다.
   <filename>ftp://</filename>와 동일하지만, ftp 서버를 통해 안전한 접속
   협상(negotiate)을 시도하려 한다. 서버가 SSL을 지원하지 않으면, 접속은
   원래의 인코딩되지 않는 ftp로 되돌아간다.
  </simpara>
  <note>
   <simpara>
    FTPS는 <literal>PHP 4.3.0</literal>부터 지원되었다.
    OpenSSL을 지원하도록 컴파일되어야 한다.
   </simpara>
  </note>
  <para>
   <table>
    <title>래퍼(Wrapper) 요약</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>allow_url_fopen</literal>에만 한정됨.</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>읽기 허용</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>쓰기 허용</entry>
       <entry>
        Yes (<literal>PHP 5.0.0</literal> 이전: 새로운 파일만.
        <literal>PHP 5.0.0</literal> 이후: 컨텍스트 옵션으로 overwrite 허용)
       </entry>
      </row>
      <row>
       <entry>추가 허용</entry>
       <entry>Yes (<literal>PHP 5.0.0</literal> 이후)</entry>
      </row>
      <row>
       <entry>동시 읽기/쓰기 허용</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function> 지원</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> 지원</entry>
       <entry>Yes (<literal>PHP 5.0.0</literal> 이후)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>컨텍스트 옵션(<literal>PHP 5.0.0</literal>의)</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Name</entry>
       <entry>Usage</entry>
       <entry>Default</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>overwrite</literal></entry>
       <entry>
        원격 서버이 이미 존재하는 파일 덮어쓰기를 허용
       </entry>
       <entry>&false; (Disabled)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <note>
   <title>기저(Underlying) 소켓 스트림 컨텍스트 옵션</title>
   <simpara>
    <link linkend="transports.inet">기저(underlying) 전송</link>에 
    <literal>ftp://</literal> 스트림을 지원할수 있는 추가 컨텍스트 옵션이며
    <literal>tcp://</literal> 전송에 대한 컨텍스트 옵션으로 참조된다.
    <literal>ftps://</literal> 스트림에 대해서는
    <literal>ssl://</literal> 전송에 대한 컨텍스트 옵션으로 참조된다.
   </simpara>
  </note>
 </section>

 <section id="wrappers.php">
  <title>PHP 입력/출력(input/output) 스트림</title>
  <simpara>
   <literal>PHP 3.0.13</literal> 이후의, <filename>php://output</filename> 
   <literal>PHP 4.3.0</literal> 이후의 <filename>php://input</filename>,
   <literal>PHP 5.0.0</literal> 이후의 <filename>php://filter</filename>
  </simpara>

  <itemizedlist>
   <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
   <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
   <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
   <listitem><simpara><filename>php://output</filename></simpara></listitem>
   <listitem><simpara><filename>php://input</filename></simpara></listitem>
   <listitem><simpara><filename>php://filter</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   <filename>php://stdin</filename>, <filename>php://stdout</filename> 
   <filename>php://stderr</filename>은 PHP 프로세스의 입력이나 출력 스트림에
   대한 접속 권한을 허용한다.
  </simpara>
  <simpara>
   <filename>php://output</filename>은 
   <function>print</function> 와 <function>echo</function> 같은 출력 버퍼 메카니즘에
   대한 쓰기 권한을 허용한다.
  </simpara>
  <simpara>
   <filename>php://input</filename>은 raw POST 데이터를 읽을수 있는 권한을 허용한다.
   <varname>$HTTP_RAW_POST_DATA</varname>에 대한 메모리 집적에 대한 차선책이고,
   특별한 &php.ini; 디렉티브 설정이 필요치 않다.
  </simpara>
  <simpara>
   <filename>php://stdin</filename> 과
   <filename>php://input</filename> 은 읽기 전용, 반면에
   <filename>php://stdout</filename>,
   <filename>php://stderr</filename> 은
   <filename>php://output</filename> 쓰기 전용이다.
  </simpara>

  <simpara>
   <filename>php://filter</filename>는 스트림을 열때
   필터의 응용을 허용하도록 설계된 메타-래퍼(meta-wrapper)의 한 종류이다.
   컨텐츠를 읽기전에 스트림에 대한 필터를 적용할 기회가 전혀 없는
   <function>readfile</function>, <function>file</function>, 
   <function>file_get_contents</function> 같은 올-인-원(all-in-one) 함수에
   대한 가용성을 갖는다. 
  </simpara>
  <simpara>
   <filename>php://filter</filename> 타겟은 
   그 &apos;path&apos;의 부분으로서 다음 &apos;parameters&apos;를 취한다.
  </simpara>
  <itemizedlist>
   <listitem>
    <para>
     <literal>/resource=&lt;필터링되는 스트림&gt;</literal>
     (<emphasis>필수</emphasis>) 이 인자는
     <filename>php://filter</filename> 사양의 끝부분에 위치해야 하고
     필터링을 원하는 스트림을 가리켜야 한다.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This is equivalent to simply:
   readfile("http://www.example.com");
   since no filters are actually specified */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/read=&lt;읽기 체인에 적용되는 필터 리스트&gt;</literal>
     (<emphasis>선택적</emphasis>) 이 인자는 
     <literal>|</literal> 파이프 문자로 구분되는 하나이상의 필터명이
     적용된다.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This will output the contents of 
   www.example.com entirely in uppercase */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* This will do the same as above
   but will also ROT13 encode it */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/write=&lt;쓰기 체인에 적용되는 필터 리스트&gt;</literal>
     (<emphasis>선택적</emphasis>) 이 인자는 
     <literal>|</literal> 파이프 문자로 구분되는 하나이상의 필터명이
     적용된다.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This will filter the string "Hello World"
   through the rot13 filter, then write to
   example.txt in the current directory */
file_set_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <simpara>
     <literal>/&lt;양쪽 체인에 적용되는 필터 리스트&gt;</literal>
     (<emphasis>선택적</emphasis>) <literal>read=</literal>나 
     <literal>write=</literal>에 선행하지 않는 모든 필터리스트가
     읽기와 쓰기 양쪽 모두의 체인(적절하게)에 적용될것이다.
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   <table>
    <title>
     래퍼(Wrapper) 요약(<literal>php://filter</literal>에 대한, 
     필터링 되는 래퍼의 요약으로 참조됨.)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>allow_url_fopen</literal>에 한정됨.</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>읽기 허용</entry>
       <entry>
        <literal>php://stdin</literal> 과
        <literal>php://input</literal> only.
       </entry>
      </row>
      <row>
       <entry>쓰기 허용</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>, 과
        <literal>php://output</literal> only.
       </entry>
      </row>
      <row>
       <entry>추가 허용</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>, 과
        <literal>php://output</literal> only. (쓰기와 동일)
       </entry>
      </row>
      <row>
       <entry>동시 읽기/쓰기 허용</entry>
       <entry>No.  이 래퍼는 방향성을 갖지 않는다.</entry>
      </row>
      <row>
       <entry><function>stat</function> 지원</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> 지원</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>

 <section id="wrappers.compression">
  <title>압축 스트림</title>
  <simpara><filename>zlib:</filename> PHP 4.0.4 - PHP 4.2.3 (fopencookie만 갖는 시스템)</simpara>
  <simpara><filename>compress.zlib://</filename> 과 <filename>compress.bzip2://</filename> PHP 4.3.0 이상</simpara>

  <itemizedlist>
   <listitem><simpara><filename>zlib:</filename></simpara></listitem>
   <listitem><simpara><filename>compress.zlib://</filename></simpara></listitem>
   <listitem><simpara><filename>compress.bzip2://</filename></simpara></listitem>
  </itemizedlist>

  <simpara> 
   <filename>zlib:</filename>는 <function>gzopen</function>처럼 동작한다, 
   <function>fread</function>와 다른 파일시스템 함수와 함께 사용할수 없다.
   ':' 문자를 포함하는 파일명이 갖는 모호함때문에 <literal>PHP 4.3.0</literal>이후부터
   사용되지 않는다. 대신 <filename>compress.zlib://</filename>를 사용한다.
  </simpara>

  <simpara>
   <filename>compress.zlib://</filename> 와
   <filename>compress.bzip2://</filename> 은 각각
   <function>gzopen</function> , <function>bzopen</function>와 동일하게 동작하고,
   fopencookie를 지원하지 않는 시스템에서도 사용할수 있다.
  </simpara>
  <para>
   <table>
    <title>래퍼(Wrapper) 요약</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>allow_url_fopen</literal>에 한정됨.</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>읽기 허용</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>쓰기 허용</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>추가 허용</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>동시 읽기/쓰기 허용</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function>지원</entry>
       <entry>
        No, 압축된 파일을 stat하기 위해서
        보통의 <literal>file://</literal> 래퍼를 사용한다.
       </entry>
      </row>
      <row>
       <entry><function>unlink</function>지원</entry>
       <entry>
        No, 압축된 파일을 unlink하기 위해서
        보통의 <literal>file://</literal> 래퍼를 사용한다.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
